(undo-tree-save-format-version . 1)
"ccb5279fa348e60308476a7191bb4e28544cb46c"
[nil nil nil nil (26388 20853 523799 28000) 0 nil]
([nil nil ((1 . 2) (t 26388 20842 387530 556000)) nil (26388 20853 523798 386000) 0 nil])
([nil nil ((2 . 14)) nil (26388 20853 523798 36000) 0 nil])
([nil nil ((14 . 19)) nil (26388 20853 523797 805000) 0 nil])
([nil nil ((19 . 37)) nil (26388 20853 523797 455000) 0 nil])
([nil nil ((37 . 38)) nil (26388 20853 523797 154000) 0 nil])
([nil nil ((38 . 47)) nil (26388 20853 523796 894000) 0 nil])
([nil nil ((47 . 50)) nil (26388 20853 523796 463000) 0 nil])
([nil nil ((50 . 59)) nil (26388 20853 523795 571000) 0 nil])
([nil nil ((59 . 60)) nil (26388 20853 523790 972000) 0 nil])
([nil nil ((52 . 60) (#("        " 0 8 (fontified nil)) . 51) (undo-tree-id9 . -8) (59 . 60) (t 26388 20853 524672 124000)) nil (26388 20909 878837 669000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 56) (undo-tree-id8 . -4) 60) nil (26388 20909 878836 416000) 0 nil])
([nil nil ((56 . 73)) nil (26388 20909 878835 885000) 0 nil])
([nil nil ((73 . 74)) nil (26388 20909 878835 535000) 0 nil])
([nil nil ((36 . 42)) nil (26388 20909 878835 304000) 0 nil])
([nil nil ((42 . 43)) nil (26388 20909 878835 44000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -41) (undo-tree-id6 . -1) (#(":" 0 1 (fontified t)) . -42) (undo-tree-id7 . -1) 43) nil (26388 20909 878834 523000) 0 nil])
([nil nil ((41 . 42)) nil (26388 20909 878833 431000) 0 nil])
([nil nil ((42 . 43)) nil (26388 20909 878833 190000) 0 nil])
([nil nil ((1 . 2)) nil (26388 20909 878832 709000) 0 nil])
([nil nil ((1 . 22)) nil (26388 20909 878832 449000) 0 nil])
([nil nil ((65 . 70)) nil (26388 20909 878832 178000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -69) (undo-tree-id5 . -1) 70) nil (26388 20909 878831 677000) 0 nil])
([nil nil ((69 . 70)) nil (26388 20909 878830 986000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -81) (undo-tree-id2 . -1) (#("." 0 1 (fontified t)) . -82) (undo-tree-id3 . -1) (#("." 0 1 (fontified t)) . -83) (undo-tree-id4 . -1) 84) nil (26388 20909 878830 325000) 0 nil])
([nil nil ((81 . 95)) nil (26388 20909 878828 181000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -93) (undo-tree-id0 . -1) (#("h" 0 1 (fontified t)) . -94) (undo-tree-id1 . -1) 95) nil (26388 20909 878826 989000) 0 nil])
([nil nil ((93 . 97)) nil (26388 20909 878789 678000) 0 nil])
([nil nil ((97 . 106) (t 26388 20909 879387 395000)) nil (26388 20932 726745 43000) 0 nil])
([nil nil ((106 . 110)) nil (26388 20932 726744 712000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -106) (undo-tree-id45 . -1) (#("h" 0 1 (fontified t)) . -107) (undo-tree-id46 . -1) (#("o" 0 1 (fontified t)) . -108) (undo-tree-id47 . -1) (#("w" 0 1 (fontified t)) . -109) (undo-tree-id48 . -1) 110) nil (26388 20932 726744 31000) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t) 8 9 (fontified t)) . 98) (undo-tree-id44 . -9)) nil (26388 20932 726742 408000) 0 nil])
([nil nil ((#("w" 0 1 (face py-variable-name-face fontified t)) . -89) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 90) nil (26388 20932 726741 206000) 0 nil])
([nil nil ((89 . 90)) nil (26388 20932 726718 353000) 0 nil])
([nil nil ((122 . 126)) nil (26388 20932 726718 82000) 0 nil])
([nil nil ((103 . 107)) nil (26388 20932 726717 621000) 0 nil])
([nil nil ((130 . 131) 107) nil (26388 20932 726713 403000) 0 nil])
([nil nil ((72 . 81) (t 26388 20932 727676 888000)) nil (26388 20952 916731 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 265 . 266) (nil fontified nil 81 . 266) (81 . 266)) nil (26388 20952 916730 413000) 0 nil])
([nil nil ((73 . 81) (#("                " 0 8 (fontified t) 8 16 (fontified t)) . 73) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -11) (undo-tree-id79 . -11) (undo-tree-id80 . -11) (undo-tree-id81 . -11) (undo-tree-id82 . -11) (undo-tree-id83 . -11) (undo-tree-id84 . -11) (undo-tree-id85 . -11) (undo-tree-id86 . -11) (undo-tree-id87 . -11) (undo-tree-id88 . -11) (undo-tree-id89 . -11) (undo-tree-id90 . -11) 84) nil (26388 20952 916722 979000) 0 nil])
([nil nil ((310 . 317) (t 26388 20952 918932 518000)) nil (26388 20964 319480 726000) 0 nil])
([nil nil ((317 . 318)) nil (26388 20964 319480 385000) 0 nil])
([nil nil ((320 . 328) (#("    " 0 4 (fontified t)) . 320) (undo-tree-id91 . -4) 324) nil (26388 20964 319479 794000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 328)) nil (26388 20964 319470 837000) 0 nil])
([nil nil ((328 . 329)) nil (26388 20964 319466 259000) 0 nil])
([nil nil ((258 . 267) (t 26388 20964 321076 806000)) nil (26388 21092 812355 684000) 0 nil])
([nil nil ((267 . 281)) nil (26388 21092 812355 393000) 0 nil])
([nil nil ((351 . 354)) nil (26388 21092 812355 123000) 0 nil])
([nil nil ((356 . 364) (#("        " 0 8 (fontified nil)) . 355) (undo-tree-id129 . -8) (354 . 364)) nil (26388 21092 812354 812000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 360) (undo-tree-id128 . -4) 364) nil (26388 21092 812353 930000) 0 nil])
([nil nil ((360 . 378)) nil (26388 21092 812353 169000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 377) (undo-tree-id127 . -1) 378) nil (26388 21092 812352 788000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -375) (undo-tree-id125 . -1) (#(">" 0 1 (fontified t)) . -376) (undo-tree-id126 . -1) 377) nil (26388 21092 812351 967000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 374) (undo-tree-id124 . -1) 375) nil (26388 21092 812350 624000) 0 nil])
([nil nil ((374 . 375)) nil (26388 21092 812350 103000) 0 nil])
([nil nil ((375 . 384)) nil (26388 21092 812349 863000) 0 nil])
([nil nil ((384 . 387)) nil (26388 21092 812349 612000) 0 nil])
([nil nil ((390 . 398) (#("        " 0 8 (fontified nil)) . 389) (undo-tree-id123 . -8) (388 . 398)) nil (26388 21092 812349 222000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 394) (undo-tree-id122 . -4) 398) nil (26388 21092 812348 340000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -390) (undo-tree-id121 . -4) 394) nil (26388 21092 812347 598000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -389) (undo-tree-id120 . -1) 390) nil (26388 21092 812346 947000) 0 nil])
([nil nil ((389 . 397)) nil (26388 21092 812346 386000) 0 nil])
([nil nil ((390 . 398) (#("        " 0 8 (fontified nil)) . 389) (undo-tree-id119 . -8) (397 . 398)) nil (26388 21092 812345 995000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 394) (undo-tree-id118 . -4) 398) nil (26388 21092 812345 124000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -390) (undo-tree-id117 . -4) 394) nil (26388 21092 812344 392000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -389) (undo-tree-id116 . -1) 390) nil (26388 21092 812343 561000) 0 nil])
([nil nil ((389 . 397)) nil (26388 21092 812343 10000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 393) (undo-tree-id115 . -4) 397) nil (26388 21092 812342 589000) 0 nil])
([nil nil ((393 . 396)) nil (26388 21092 812341 848000) 0 nil])
([nil nil ((396 . 408)) nil (26388 21092 812341 557000) 0 nil])
([nil nil ((#("h" 0 1 (face py-def-face fontified t)) . -397) (undo-tree-id104 . -1) (#("a" 0 1 (face py-def-face fontified t)) . -398) (undo-tree-id105 . -1) (#("n" 0 1 (face py-def-face fontified t)) . -399) (undo-tree-id106 . -1) (#("d" 0 1 (face py-def-face fontified t)) . -400) (undo-tree-id107 . -1) (#("V" 0 1 (face py-def-face fontified t)) . -401) (undo-tree-id108 . -1) (#("a" 0 1 (face py-def-face fontified t)) . -402) (undo-tree-id109 . -1) (#("l" 0 1 (face py-def-face fontified t)) . -403) (undo-tree-id110 . -1) (#("u" 0 1 (face py-def-face fontified t)) . -404) (undo-tree-id111 . -1) (#("e" 0 1 (face py-def-face fontified t)) . -405) (undo-tree-id112 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -406) (undo-tree-id113 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -407) (undo-tree-id114 . -1) 408) nil (26388 21092 812339 824000) 0 nil])
([nil nil ((397 . 411)) nil (26388 21092 812335 796000) 0 nil])
([nil nil ((411 . 423)) nil (26388 21092 812335 516000) 0 nil])
([nil nil ((423 . 424)) nil (26388 21092 812335 275000) 0 nil])
([nil nil ((424 . 433)) nil (26388 21092 812335 25000) 0 nil])
([nil nil ((433 . 436)) nil (26388 21092 812334 734000) 0 nil])
([nil nil ((438 . 446) (#("        " 0 8 (fontified nil)) . 437) (undo-tree-id103 . -8) (436 . 446)) nil (26388 21092 812334 303000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 442) (undo-tree-id102 . -4) 446) nil (26388 21092 812333 462000) 0 nil])
([nil nil ((442 . 451)) nil (26388 21092 812332 831000) 0 nil])
([nil nil ((#("c" 0 1 (face py-def-face fontified t)) . -446) (undo-tree-id97 . -1) (#("h" 0 1 (face py-def-face fontified t)) . -447) (undo-tree-id98 . -1) (#("e" 0 1 (face py-def-face fontified t)) . -448) (undo-tree-id99 . -1) (#("c" 0 1 (face py-def-face fontified t)) . -449) (undo-tree-id100 . -1) (#("k" 0 1 (face py-def-face fontified t)) . -450) (undo-tree-id101 . -1) 451) nil (26388 21092 812331 638000) 0 nil])
([nil nil ((446 . 451)) nil (26388 21092 812329 374000) 0 nil])
([nil nil ((451 . 456)) nil (26388 21092 812329 104000) 0 nil])
([nil nil ((#("e" 0 1 (face py-def-face fontified t)) . -452) (undo-tree-id93 . -1) (#("n" 0 1 (face py-def-face fontified t)) . -453) (undo-tree-id94 . -1) (#("a" 0 1 (face py-def-face fontified t)) . -454) (undo-tree-id95 . -1) (#("d" 0 1 (face py-def-face fontified t)) . -455) (undo-tree-id96 . -1) 456) nil (26388 21092 812328 62000) 0 nil])
([nil nil ((452 . 471)) nil (26388 21092 812325 226000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -470) (undo-tree-id92 . -1) 471) nil (26388 21092 812324 775000) 0 nil])
([nil nil ((470 . 485)) nil (26388 21092 812316 129000) 0 nil])
([nil nil ((485 . 486)) nil (26388 21092 812315 889000) 0 nil])
([nil nil ((486 . 495)) nil (26388 21092 812315 608000) 0 nil])
([nil nil ((495 . 498)) nil (26388 21092 812315 117000) 0 nil])
([nil nil ((498 . 499)) nil (26388 21092 812311 190000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -495) (undo-tree-id669 . -1) (#("." 0 1 (fontified t)) . -496) (undo-tree-id670 . -1) (#("." 0 1 (fontified t)) . -497) (undo-tree-id671 . -1) 498 (t 26388 21092 813698 637000)) nil (26388 21136 798145 868000) 0 nil])
([nil nil ((488 . 496) (#("        " 0 8 (fontified nil)) . 487) (undo-tree-id668 . -8) (495 . 496)) nil (26388 21136 798143 814000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 492) (undo-tree-id667 . -4) 496) nil (26388 21136 798142 922000) 0 nil])
([nil nil ((492 . 500)) nil (26388 21136 798142 241000) 0 nil])
([nil nil ((#("t" 0 1 (face py-def-face fontified t)) . -496) (undo-tree-id663 . -1) (#("e" 0 1 (face py-def-face fontified t)) . -497) (undo-tree-id664 . -1) (#("s" 0 1 (face py-def-face fontified t)) . -498) (undo-tree-id665 . -1) (#("t" 0 1 (face py-def-face fontified t)) . -499) (undo-tree-id666 . -1) 500) nil (26388 21136 798141 389000) 0 nil])
([nil nil ((496 . 506)) nil (26388 21136 798139 766000) 0 nil])
([nil nil ((506 . 507)) nil (26388 21136 798139 506000) 0 nil])
([nil nil ((507 . 516)) nil (26388 21136 798139 235000) 0 nil])
([nil nil ((516 . 519)) nil (26388 21136 798139 35000) 0 nil])
([nil nil ((#("    def test(self):" 0 4 (fontified t) 4 7 (face py-def-class-face fontified t) 7 8 (fontified t) 8 12 (face py-def-face fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) fontified t) 13 17 (face py-object-reference-face fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (fontified t)) . 488) (undo-tree-id200 . -8) (undo-tree-id201 . -8) (undo-tree-id202 . -8) (undo-tree-id203 . -8) (undo-tree-id204 . -8) (undo-tree-id205 . -8) (undo-tree-id206 . -8) (undo-tree-id207 . -8) (undo-tree-id208 . -8) (undo-tree-id209 . -8) (undo-tree-id210 . -8) (undo-tree-id211 . -8) (undo-tree-id212 . -8) (undo-tree-id213 . -8) (undo-tree-id214 . -8) (undo-tree-id215 . -8) (undo-tree-id216 . -8) (undo-tree-id217 . -8) (undo-tree-id218 . -8) (undo-tree-id219 . -8) (undo-tree-id220 . -8) (undo-tree-id221 . -8) (undo-tree-id222 . -8) (undo-tree-id223 . -8) (undo-tree-id224 . -8) (undo-tree-id225 . -8) (undo-tree-id226 . -8) (undo-tree-id227 . -8) (undo-tree-id228 . -8) (undo-tree-id229 . -8) (undo-tree-id230 . -8) (undo-tree-id231 . -8) (undo-tree-id232 . -8) (undo-tree-id233 . -8) (undo-tree-id234 . -8) (undo-tree-id235 . -8) (undo-tree-id236 . -8) (undo-tree-id237 . -8) (undo-tree-id238 . -8) (undo-tree-id239 . -8) (undo-tree-id240 . -8) (undo-tree-id241 . -8) (undo-tree-id242 . -8) (undo-tree-id243 . -8) (undo-tree-id244 . -8) (undo-tree-id245 . -8) (undo-tree-id246 . -8) (undo-tree-id247 . -8) (undo-tree-id248 . -8) (undo-tree-id249 . -8) (undo-tree-id250 . -8) (undo-tree-id251 . -8) (undo-tree-id252 . -8) (undo-tree-id253 . -8) (undo-tree-id254 . -8) (undo-tree-id255 . -8) (undo-tree-id256 . -8) (undo-tree-id257 . -8) (undo-tree-id258 . -8) (undo-tree-id259 . -8) (undo-tree-id260 . -8) (undo-tree-id261 . -8) (undo-tree-id262 . -8) (undo-tree-id263 . -8) (undo-tree-id264 . -8) (undo-tree-id265 . -8) (undo-tree-id266 . -8) (undo-tree-id267 . -8) (undo-tree-id268 . -8) (undo-tree-id269 . -8) (undo-tree-id270 . -8) (undo-tree-id271 . -8) (undo-tree-id272 . -8) (undo-tree-id273 . -8) (undo-tree-id274 . -8) (undo-tree-id275 . -8) (undo-tree-id276 . -8) (undo-tree-id277 . -8) (undo-tree-id278 . -8) (undo-tree-id279 . -8) (undo-tree-id280 . -8) (undo-tree-id281 . -8) (undo-tree-id282 . -8) (undo-tree-id283 . -8) (undo-tree-id284 . -8) (undo-tree-id285 . -8) (undo-tree-id286 . -8) (undo-tree-id287 . -8) (undo-tree-id288 . -8) (undo-tree-id289 . -8) (undo-tree-id290 . -8) (undo-tree-id291 . -8) (undo-tree-id292 . -8) (undo-tree-id293 . -8) (undo-tree-id294 . -8) (undo-tree-id295 . -8) (undo-tree-id296 . -8) (undo-tree-id297 . -8) (undo-tree-id298 . -8) (undo-tree-id299 . -8) (undo-tree-id300 . -8) (undo-tree-id301 . -8) (undo-tree-id302 . -8) (undo-tree-id303 . -8) (undo-tree-id304 . -8) (undo-tree-id305 . -8) (undo-tree-id306 . -8) (undo-tree-id307 . -8) (undo-tree-id308 . -8) (undo-tree-id309 . -8) (undo-tree-id310 . -8) (undo-tree-id311 . -8) (undo-tree-id312 . -8) (undo-tree-id313 . -8) (undo-tree-id314 . -8) (undo-tree-id315 . -8) (undo-tree-id316 . -8) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -8) (undo-tree-id321 . -8) (undo-tree-id322 . -8) (undo-tree-id323 . -8) (undo-tree-id324 . -8) (undo-tree-id325 . -8) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (undo-tree-id331 . -8) (undo-tree-id332 . -8) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . -8) (undo-tree-id341 . -8) (undo-tree-id342 . -8) (undo-tree-id343 . -8) (undo-tree-id344 . -8) (undo-tree-id345 . -8) (undo-tree-id346 . -8) (undo-tree-id347 . -8) (undo-tree-id348 . -8) (undo-tree-id349 . -8) (undo-tree-id350 . -8) (undo-tree-id351 . -8) (undo-tree-id352 . -8) (undo-tree-id353 . -8) (undo-tree-id354 . -8) (undo-tree-id355 . -8) (undo-tree-id356 . -8) (undo-tree-id357 . -8) (undo-tree-id358 . -8) (undo-tree-id359 . -8) (undo-tree-id360 . -8) (undo-tree-id361 . -8) (undo-tree-id362 . -8) (undo-tree-id363 . -8) (undo-tree-id364 . -8) (undo-tree-id365 . -8) (undo-tree-id366 . -8) (undo-tree-id367 . -8) (undo-tree-id368 . -8) (undo-tree-id369 . -8) (undo-tree-id370 . -8) (undo-tree-id371 . -8) (undo-tree-id372 . -8) (undo-tree-id373 . -8) (undo-tree-id374 . -8) (undo-tree-id375 . -8) (undo-tree-id376 . -8) (undo-tree-id377 . -8) (undo-tree-id378 . -8) (undo-tree-id379 . -8) (undo-tree-id380 . -8) (undo-tree-id381 . -8) (undo-tree-id382 . -8) (undo-tree-id383 . -8) (undo-tree-id384 . -8) (undo-tree-id385 . -8) (undo-tree-id386 . -8) (undo-tree-id387 . -8) (undo-tree-id388 . -8) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -8) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -8) (undo-tree-id407 . -8) (undo-tree-id408 . -8) (undo-tree-id409 . -8) (undo-tree-id410 . -8) (undo-tree-id411 . -8) (undo-tree-id412 . -8) (undo-tree-id413 . -8) (undo-tree-id414 . -8) (undo-tree-id415 . -8) (undo-tree-id416 . -8) (undo-tree-id417 . -8) (undo-tree-id418 . -8) (undo-tree-id419 . -8) (undo-tree-id420 . -8) (undo-tree-id421 . -8) (undo-tree-id422 . -8) (undo-tree-id423 . -8) (undo-tree-id424 . -8) (undo-tree-id425 . -8) (undo-tree-id426 . -8) (undo-tree-id427 . -8) (undo-tree-id428 . -8) (undo-tree-id429 . -8) (undo-tree-id430 . -8) (undo-tree-id431 . -8) (undo-tree-id432 . -8) (undo-tree-id433 . -8) (undo-tree-id434 . -8) (undo-tree-id435 . -8) (undo-tree-id436 . -8) (undo-tree-id437 . -8) (undo-tree-id438 . -8) (undo-tree-id439 . -8) (undo-tree-id440 . -8) (undo-tree-id441 . -8) (undo-tree-id442 . -8) (undo-tree-id443 . -8) (undo-tree-id444 . -8) (undo-tree-id445 . -8) (undo-tree-id446 . -8) (undo-tree-id447 . -8) (undo-tree-id448 . -8) (undo-tree-id449 . -8) (undo-tree-id450 . -8) (undo-tree-id451 . -8) (undo-tree-id452 . -8) (undo-tree-id453 . -8) (undo-tree-id454 . -8) (undo-tree-id455 . -8) (undo-tree-id456 . -8) (undo-tree-id457 . -8) (undo-tree-id458 . -8) (undo-tree-id459 . -8) (undo-tree-id460 . -8) (undo-tree-id461 . -8) (undo-tree-id462 . -8) (undo-tree-id463 . -8) (undo-tree-id464 . -8) (undo-tree-id465 . -8) (undo-tree-id466 . -8) (undo-tree-id467 . -8) (undo-tree-id468 . -9) (undo-tree-id469 . -9) (undo-tree-id470 . -9) (undo-tree-id471 . -9) (undo-tree-id472 . -9) (undo-tree-id473 . -9) (undo-tree-id474 . -9) (undo-tree-id475 . -9) (undo-tree-id476 . -9) (undo-tree-id477 . -9) (undo-tree-id478 . -9) (undo-tree-id479 . -9) (undo-tree-id480 . -9) (undo-tree-id481 . -9) (undo-tree-id482 . -9) (undo-tree-id483 . -9) (undo-tree-id484 . -10) (undo-tree-id485 . -10) (undo-tree-id486 . -10) (undo-tree-id487 . -10) (undo-tree-id488 . -10) (undo-tree-id489 . -10) (undo-tree-id490 . -10) (undo-tree-id491 . -10) (undo-tree-id492 . -10) (undo-tree-id493 . -10) (undo-tree-id494 . -10) (undo-tree-id495 . -10) (undo-tree-id496 . -10) (undo-tree-id497 . -10) (undo-tree-id498 . -10) (undo-tree-id499 . -10) (undo-tree-id500 . -11) (undo-tree-id501 . -11) (undo-tree-id502 . -11) (undo-tree-id503 . -11) (undo-tree-id504 . -11) (undo-tree-id505 . -11) (undo-tree-id506 . -11) (undo-tree-id507 . -11) (undo-tree-id508 . -11) (undo-tree-id509 . -11) (undo-tree-id510 . -11) (undo-tree-id511 . -11) (undo-tree-id512 . -11) (undo-tree-id513 . -11) (undo-tree-id514 . -11) (undo-tree-id515 . -11) (undo-tree-id516 . -12) (undo-tree-id517 . -12) (undo-tree-id518 . -12) (undo-tree-id519 . -12) (undo-tree-id520 . -12) (undo-tree-id521 . -12) (undo-tree-id522 . -12) (undo-tree-id523 . -12) (undo-tree-id524 . -12) (undo-tree-id525 . -12) (undo-tree-id526 . -12) (undo-tree-id527 . -12) (undo-tree-id528 . -12) (undo-tree-id529 . -12) (undo-tree-id530 . -12) (undo-tree-id531 . -12) (undo-tree-id532 . -13) (undo-tree-id533 . -13) (undo-tree-id534 . -13) (undo-tree-id535 . -13) (undo-tree-id536 . -13) (undo-tree-id537 . -13) (undo-tree-id538 . -13) (undo-tree-id539 . -13) (undo-tree-id540 . -13) (undo-tree-id541 . -13) (undo-tree-id542 . -13) (undo-tree-id543 . -13) (undo-tree-id544 . -13) (undo-tree-id545 . -13) (undo-tree-id546 . -13) (undo-tree-id547 . -13) (undo-tree-id548 . -13) (undo-tree-id549 . -14) (undo-tree-id550 . -14) (undo-tree-id551 . -14) (undo-tree-id552 . -14) (undo-tree-id553 . -14) (undo-tree-id554 . -14) (undo-tree-id555 . -14) (undo-tree-id556 . -14) (undo-tree-id557 . -14) (undo-tree-id558 . -14) (undo-tree-id559 . -14) (undo-tree-id560 . -14) (undo-tree-id561 . -14) (undo-tree-id562 . -14) (undo-tree-id563 . -14) (undo-tree-id564 . -14) (undo-tree-id565 . -15) (undo-tree-id566 . -15) (undo-tree-id567 . -15) (undo-tree-id568 . -15) (undo-tree-id569 . -15) (undo-tree-id570 . -15) (undo-tree-id571 . -15) (undo-tree-id572 . -15) (undo-tree-id573 . -15) (undo-tree-id574 . -15) (undo-tree-id575 . -15) (undo-tree-id576 . -15) (undo-tree-id577 . -15) (undo-tree-id578 . -15) (undo-tree-id579 . -15) (undo-tree-id580 . -15) (undo-tree-id581 . -16) (undo-tree-id582 . -16) (undo-tree-id583 . -16) (undo-tree-id584 . -16) (undo-tree-id585 . -16) (undo-tree-id586 . -16) (undo-tree-id587 . -16) (undo-tree-id588 . -16) (undo-tree-id589 . -16) (undo-tree-id590 . -16) (undo-tree-id591 . -16) (undo-tree-id592 . -16) (undo-tree-id593 . -16) (undo-tree-id594 . -16) (undo-tree-id595 . -16) (undo-tree-id596 . -16) (undo-tree-id597 . -17) (undo-tree-id598 . -17) (undo-tree-id599 . -17) (undo-tree-id600 . -17) (undo-tree-id601 . -17) (undo-tree-id602 . -17) (undo-tree-id603 . -17) (undo-tree-id604 . -17) (undo-tree-id605 . -17) (undo-tree-id606 . -17) (undo-tree-id607 . -17) (undo-tree-id608 . -17) (undo-tree-id609 . -17) (undo-tree-id610 . -17) (undo-tree-id611 . -17) (undo-tree-id612 . -17) (undo-tree-id613 . -18) (undo-tree-id614 . -18) (undo-tree-id615 . -18) (undo-tree-id616 . -18) (undo-tree-id617 . -18) (undo-tree-id618 . -18) (undo-tree-id619 . -18) (undo-tree-id620 . -18) (undo-tree-id621 . -18) (undo-tree-id622 . -18) (undo-tree-id623 . -18) (undo-tree-id624 . -18) (undo-tree-id625 . -18) (undo-tree-id626 . -18) (undo-tree-id627 . -18) (undo-tree-id628 . -18) (undo-tree-id629 . -18) (undo-tree-id630 . -18) (undo-tree-id631 . -18) (undo-tree-id632 . -18) (undo-tree-id633 . -18) (undo-tree-id634 . -18) (undo-tree-id635 . -19) (undo-tree-id636 . -19) (undo-tree-id637 . -19) (undo-tree-id638 . -19) (undo-tree-id639 . -19) (undo-tree-id640 . -19) (undo-tree-id641 . -19) (undo-tree-id642 . -19) (undo-tree-id643 . -19) (undo-tree-id644 . -19) (undo-tree-id645 . -19) (undo-tree-id646 . -11) (undo-tree-id647 . -11) (undo-tree-id648 . -11) (undo-tree-id649 . -11) (undo-tree-id650 . -11) (undo-tree-id651 . -11) (undo-tree-id652 . -11) (undo-tree-id653 . -11) (undo-tree-id654 . -11) (undo-tree-id655 . -11) (undo-tree-id656 . -11) (undo-tree-id657 . -11) (undo-tree-id658 . -11) (undo-tree-id659 . -11) (undo-tree-id660 . -11) (undo-tree-id661 . -11) (undo-tree-id662 . -19)) nil (26388 21136 798133 675000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 488) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1)) nil (26388 21136 797925 712000) 0 nil])
([nil nil ((#("        ..." 0 11 (fontified t)) . 488) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (undo-tree-id135 . -8) (undo-tree-id136 . -8) (undo-tree-id137 . -8) (undo-tree-id138 . -8) (undo-tree-id139 . -8) (undo-tree-id140 . -8) (undo-tree-id141 . -9) (undo-tree-id142 . -9) (undo-tree-id143 . -9) (undo-tree-id144 . -9) (undo-tree-id145 . -9) (undo-tree-id146 . -9) (undo-tree-id147 . -9) (undo-tree-id148 . -9) (undo-tree-id149 . -9) (undo-tree-id150 . -9) (undo-tree-id151 . -9) (undo-tree-id152 . -9) (undo-tree-id153 . -9) (undo-tree-id154 . -9) (undo-tree-id155 . -9) (undo-tree-id156 . -9) (undo-tree-id157 . -10) (undo-tree-id158 . -10) (undo-tree-id159 . -10) (undo-tree-id160 . -10) (undo-tree-id161 . -10) (undo-tree-id162 . -10) (undo-tree-id163 . -10) (undo-tree-id164 . -10) (undo-tree-id165 . -10) (undo-tree-id166 . -10) (undo-tree-id167 . -10) (undo-tree-id168 . -10) (undo-tree-id169 . -10) (undo-tree-id170 . -10) (undo-tree-id171 . -10) (undo-tree-id172 . -10) (undo-tree-id173 . -11) (undo-tree-id174 . -11) (undo-tree-id175 . -11) (undo-tree-id176 . -11) (undo-tree-id177 . -11) (undo-tree-id178 . -11) (undo-tree-id179 . -11) (undo-tree-id180 . -11) (undo-tree-id181 . -11) (undo-tree-id182 . -11) (undo-tree-id183 . -11) (undo-tree-id184 . -11) (undo-tree-id185 . -11) (undo-tree-id186 . -11) (undo-tree-id187 . -11) (undo-tree-id188 . -11) (undo-tree-id189 . -11) (undo-tree-id190 . -11) (undo-tree-id191 . -11) (undo-tree-id192 . -11) (undo-tree-id193 . -11) (undo-tree-id194 . -11) (undo-tree-id195 . -11) (undo-tree-id196 . -11)) nil (26388 21136 797921 63000) 0 nil])
([nil nil ((#("string, string" 0 8 (fontified t) 8 14 (fontified t)) . -470) (undo-tree-id736 . -14) 484 (t 26388 21136 799252 405000)) nil (26388 21167 988464 72000) 0 nil])
([nil nil ((470 . 472)) nil (26388 21167 988463 361000) 0 nil])
([nil nil ((470 . 473) (#("St" 0 2 (fontified nil)) . -470) (470 . 472) (#("str" 0 3 (fontified nil)) . -470) (470 . 473) (#("St" 0 2 (fontified t)) . -470) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) 472) nil (26388 21167 988462 319000) 0 nil])
([nil nil ((473 . 478)) nil (26388 21167 988458 702000) 0 nil])
([nil nil ((475 . 478) (#("str" 0 3 (fontified nil)) . -475) (475 . 478) (#("str" 0 3 (face py-builtins-face fontified t match-data (0 2 0 1 1 2))) . -475) (undo-tree-id672 . -3) (undo-tree-id673 . -3) (undo-tree-id674 . -2) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -2) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -2) (undo-tree-id690 . -2) (undo-tree-id691 . -3) (undo-tree-id692 . -3) (undo-tree-id693 . -3) (undo-tree-id694 . -3) (undo-tree-id695 . -3) (undo-tree-id696 . -3) (undo-tree-id697 . -3) (undo-tree-id698 . -3) (undo-tree-id699 . -3) (undo-tree-id700 . -3) (undo-tree-id701 . -3) (undo-tree-id702 . -3) (undo-tree-id703 . -3) (undo-tree-id704 . -3) (undo-tree-id705 . -3) (undo-tree-id706 . -3) (undo-tree-id707 . -3) (undo-tree-id708 . -3) (undo-tree-id709 . -3) (undo-tree-id710 . -3) (undo-tree-id711 . -3) (undo-tree-id712 . -3) (undo-tree-id713 . -3) (undo-tree-id714 . -3) (undo-tree-id715 . -3) (undo-tree-id716 . -3) (undo-tree-id717 . -3) (undo-tree-id718 . -3) (undo-tree-id719 . -3) (undo-tree-id720 . -3) (undo-tree-id721 . -3) (undo-tree-id722 . -3) (undo-tree-id723 . -3) (undo-tree-id724 . -3) (undo-tree-id725 . -3) (undo-tree-id726 . -3) (undo-tree-id727 . -3) (undo-tree-id728 . -3) (undo-tree-id729 . -3) (undo-tree-id730 . -3) (undo-tree-id731 . -3) 478) nil (26388 21167 988454 274000) 0 nil])
([nil nil ((481 . 489) (t 26388 21167 989644 632000)) nil (26388 21176 362594 710000) 0 nil])
([nil nil ((489 . 492)) nil (26388 21176 362594 409000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -475) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -476) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (#("r" 0 1 (face py-builtins-face fontified t match-data (0 3 0 1 1 2 2 3))) . -477) (undo-tree-id753 . -1) (undo-tree-id754 . -1) 478) nil (26388 21176 362593 547000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 2 0 1 1 2))) . 474) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) 475) nil (26388 21176 362591 223000) 0 nil])
([nil nil ((#("," 0 1 (fontified t match-data (0 2 0 1 1 2))) . -473) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) 474) nil (26388 21176 362585 683000) 0 nil])
([nil nil ((489 . 497) (#("        " 0 8 (fontified nil)) . 488) (undo-tree-id816 . -8) (487 . 497) (t 26388 21176 363749 897000)) nil (26388 21199 501549 260000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 493) (undo-tree-id815 . -4) 497) nil (26388 21199 501548 499000) 0 nil])
([nil nil ((493 . 499)) nil (26388 21199 501547 988000) 0 nil])
([nil nil ((499 . 511)) nil (26388 21199 501547 848000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -510) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) 511) nil (26388 21199 501547 407000) 0 nil])
([nil nil ((510 . 516)) nil (26388 21199 501545 583000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -514) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (#("e" 0 1 (fontified t)) . -515) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) 516) nil (26388 21199 501544 682000) 0 nil])
([nil nil ((514 . 516)) nil (26388 21199 501541 816000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -515) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) 516) nil (26388 21199 501541 175000) 0 nil])
([nil nil ((515 . 516)) nil (26388 21199 501537 378000) 0 nil])
([nil nil ((516 . 517)) nil (26388 21199 501536 887000) 0 nil])
([nil nil ((517 . 526)) nil (26388 21199 501536 616000) 0 nil])
([nil nil ((526 . 529)) nil (26388 21199 501536 276000) 0 nil])
([nil nil ((374 . 382)) nil (26388 21199 501535 765000) 0 nil])
([nil nil ((378 . 382) (#("Non" 0 3 (fontified nil)) . -378) (378 . 381) (#("None" 0 4 (face py-pseudo-keyword-face fontified t)) . -378) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -3) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -4) (undo-tree-id767 . -4) (undo-tree-id768 . -4) (undo-tree-id769 . -4) (undo-tree-id770 . -4) (undo-tree-id771 . -4) (undo-tree-id772 . -4) (undo-tree-id773 . -4) (undo-tree-id774 . -4) (undo-tree-id775 . -4) (undo-tree-id776 . -4) (undo-tree-id777 . -4) (undo-tree-id778 . -4) (undo-tree-id779 . -4) (undo-tree-id780 . -4) (undo-tree-id781 . -4) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) 382) nil (26388 21199 501532 158000) 0 nil])
([nil nil ((#("        ..." 0 11 (fontified t)) . 343) (t 26388 21199 503040 658000)) nil (26388 21258 747444 870000) 0 nil])
([nil nil ((343 . 351)) nil (26388 21258 747444 579000) 0 nil])
([nil nil ((351 . 370)) nil (26388 21258 747444 309000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -369) (undo-tree-id1166 . -1) 370) nil (26388 21258 747443 868000) 0 nil])
([nil nil ((369 . 374)) nil (26388 21258 747443 227000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -372) (undo-tree-id1164 . -1) (#("." 0 1 (fontified t)) . -373) (undo-tree-id1165 . -1) 374) nil (26388 21258 747442 716000) 0 nil])
([nil nil ((372 . 378)) nil (26388 21258 747441 704000) 0 nil])
([nil nil ((378 . 379)) nil (26388 21258 747441 423000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -373) (undo-tree-id1158 . -1) (#("d" 0 1 (fontified t)) . -374) (undo-tree-id1159 . -1) (#("r" 0 1 (fontified t)) . -375) (undo-tree-id1160 . -1) (#("a" 0 1 (fontified t)) . -376) (undo-tree-id1161 . -1) (#("w" 0 1 (fontified t)) . -377) (undo-tree-id1162 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -378) (undo-tree-id1163 . -1) 379) nil (26388 21258 747439 910000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -302) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (#("h" 0 1 (fontified t)) . -303) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (#("o" 0 1 (fontified t)) . -304) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (#("e" 0 1 (fontified t)) . -305) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) 306) nil (26388 21258 747436 734000) 0 nil])
([nil nil ((302 . 306)) nil (26388 21258 747389 906000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -305) (undo-tree-id1139 . -1) 306) nil (26388 21258 747389 445000) 0 nil])
([nil nil ((305 . 306)) nil (26388 21258 747389 14000) 0 nil])
([nil nil ((302 . 306) (#("sho" 0 3 (fontified nil)) . -302) (302 . 305) (#("shoe" 0 4 (fontified t)) . -302) (undo-tree-id1135 . -4) (undo-tree-id1136 . -4) (undo-tree-id1137 . -4) (undo-tree-id1138 . -4) 306) nil (26388 21258 747388 493000) 0 nil])
([nil nil ((#("shoe" 0 4 (fontified t)) . -369) (undo-tree-id1133 . -4) (undo-tree-id1134 . -4) 373) nil (26388 21258 747386 550000) 0 nil])
([nil nil ((369 . 374)) nil (26388 21258 747384 997000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -370) (undo-tree-id1129 . -1) (#("i" 0 1 (fontified t)) . -371) (undo-tree-id1130 . -1) (#("w" 0 1 (fontified t)) . -372) (undo-tree-id1131 . -1) (#("=" 0 1 (fontified t)) . -373) (undo-tree-id1132 . -1) 374) nil (26388 21258 747384 95000) 0 nil])
([nil nil ((370 . 373)) nil (26388 21258 747382 432000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -372) (undo-tree-id1128 . -1) 373) nil (26388 21258 747382 51000) 0 nil])
([nil nil ((372 . 374)) nil (26388 21258 747381 610000) 0 nil])
([nil nil ((374 . 382) (#("drawCard" 0 8 (fontified nil)) . -374) (374 . 382)) nil (26388 21258 747381 230000) 0 nil])
([nil nil ((382 . 394)) nil (26388 21258 747380 879000) 0 nil])
([nil nil ((394 . 396)) nil (26388 21258 747380 588000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t match-data (0 0))) . -394) (undo-tree-id1126 . -1) (#("." 0 1 (fontified t match-data (0 0))) . -395) (undo-tree-id1127 . -1) 396) nil (26388 21258 747380 47000) 0 nil])
([nil nil ((394 . 398)) nil (26388 21258 747379 136000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t match-data (0 0))) . -396) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (#("r" 0 1 (fontified t match-data (0 0))) . -397) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) 398) nil (26388 21258 747377 573000) 0 nil])
([nil nil ((396 . 399)) nil (26388 21258 747338 729000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t match-data (0 0))) . -398) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) 399) nil (26388 21258 747337 988000) 0 nil])
([nil nil ((398 . 408)) nil (26388 21258 747323 881000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 0))) . -406) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 0))) . -407) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) 408) nil (26388 21258 747321 36000) 0 nil])
([nil nil ((406 . 407)) nil (26388 21258 746790 925000) 0 nil])
([nil nil ((341 . 346) (t 26388 21258 749784 397000)) nil (26388 21292 110706 494000) 0 nil])
([nil nil ((365 . 366) (t 26388 21292 113202 824000)) nil (26388 21322 15473 451000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 367)) nil (26388 21322 15472 850000) 0 nil])
([nil nil ((412 . 421)) nil (26388 21322 15472 420000) 0 nil])
([nil nil ((421 . 437)) nil (26388 21322 15472 99000) 0 nil])
([nil nil ((433 . 437) (#("ha" 0 2 (fontified nil)) . -433) (433 . 435) (#("hand" 0 4 (fontified t match-data (0 0))) . -433) (undo-tree-id1167 . -4) (undo-tree-id1168 . -4) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -2) (undo-tree-id1209 . -2) (undo-tree-id1210 . -2) (undo-tree-id1211 . -2) (undo-tree-id1212 . -2) (undo-tree-id1213 . -2) (undo-tree-id1214 . -2) (undo-tree-id1215 . -2) (undo-tree-id1216 . -2) (undo-tree-id1217 . -2) (undo-tree-id1218 . -2) (undo-tree-id1219 . -2) (undo-tree-id1220 . -2) (undo-tree-id1221 . -2) (undo-tree-id1222 . -2) (undo-tree-id1223 . -2) (undo-tree-id1224 . -2) (undo-tree-id1225 . -2) (undo-tree-id1226 . -2) (undo-tree-id1227 . -2) (undo-tree-id1228 . -2) (undo-tree-id1229 . -2) (undo-tree-id1230 . -2) (undo-tree-id1231 . -2) (undo-tree-id1232 . -2) (undo-tree-id1233 . -2) (undo-tree-id1234 . -2) (undo-tree-id1235 . -2) (undo-tree-id1236 . -2) (undo-tree-id1237 . -2) (undo-tree-id1238 . -2) (undo-tree-id1239 . -2) (undo-tree-id1240 . -2) (undo-tree-id1241 . -2) (undo-tree-id1242 . -2) (undo-tree-id1243 . -2) (undo-tree-id1244 . -2) (undo-tree-id1245 . -2) (undo-tree-id1246 . -2) (undo-tree-id1247 . -3) (undo-tree-id1248 . -3) (undo-tree-id1249 . -3) (undo-tree-id1250 . -3) (undo-tree-id1251 . -3) (undo-tree-id1252 . -3) (undo-tree-id1253 . -3) (undo-tree-id1254 . -3) (undo-tree-id1255 . -3) (undo-tree-id1256 . -3) (undo-tree-id1257 . -3) (undo-tree-id1258 . -3) (undo-tree-id1259 . -3) (undo-tree-id1260 . -3) (undo-tree-id1261 . -3) (undo-tree-id1262 . -3) (undo-tree-id1263 . -3) (undo-tree-id1264 . -3) (undo-tree-id1265 . -3) (undo-tree-id1266 . -3) (undo-tree-id1267 . -3) (undo-tree-id1268 . -3) (undo-tree-id1269 . -3) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) (undo-tree-id1297 . -4) (undo-tree-id1298 . -4) (undo-tree-id1299 . -4) (undo-tree-id1300 . -4) (undo-tree-id1301 . -4) (undo-tree-id1302 . -4) (undo-tree-id1303 . -4) (undo-tree-id1304 . -4) (undo-tree-id1305 . -4) (undo-tree-id1306 . -4) (undo-tree-id1307 . -4) (undo-tree-id1308 . -4) (undo-tree-id1309 . -4) (undo-tree-id1310 . -4) (undo-tree-id1311 . -4) (undo-tree-id1312 . -4) (undo-tree-id1313 . -4) (undo-tree-id1314 . -4) (undo-tree-id1315 . -4) (undo-tree-id1316 . -4) 437) nil (26388 21322 15466 929000) 0 nil])
([nil nil ((#("        ..." 0 11 (fontified t)) . 467) (t 26388 21322 18577 604000)) nil (26388 21341 905710 152000) 0 nil])
([nil nil ((467 . 475)) nil (26388 21341 905709 831000) 0 nil])
([nil nil ((475 . 493)) nil (26388 21341 905709 500000) 0 nil])
([nil nil ((492 . 500) (#("d" 0 1 (fontified nil)) . -492) (492 . 493) (#("drawCard" 0 8 (fontified nil)) . -492) (492 . 500) (#("d" 0 1 (fontified t)) . -492) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) 493) nil (26388 21341 905708 579000) 0 nil])
([nil nil ((500 . 502)) nil (26388 21341 905698 409000) 0 nil])
([nil nil ((502 . 511)) nil (26388 21341 905698 39000) 0 nil])
([nil nil ((511 . 516)) nil (26388 21341 905697 628000) 0 nil])
([nil nil ((516 . 533)) nil (26388 21341 905692 378000) 0 nil])
([nil nil ((36 . 37) (t 26388 21341 907826 780000)) nil (26388 21427 836398 150000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -580) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (#("." 0 1 (fontified t)) . -581) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (#("." 0 1 (fontified t)) . -582) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) 583 (t 26388 21427 838902 307000)) nil (26388 21679 369988 686000) 0 nil])
([nil nil ((580 . 589)) nil (26388 21679 369983 5000) 0 nil])
([nil nil ((589 . 598)) nil (26388 21679 369982 725000) 0 nil])
([nil nil ((598 . 606)) nil (26388 21679 369982 474000) 0 nil])
([nil nil ((606 . 615)) nil (26388 21679 369982 124000) 0 nil])
([nil nil ((608 . 616) (#("        " 0 8 (fontified nil)) . 607) (undo-tree-id1331 . -8) (615 . 616)) nil (26388 21679 369981 723000) 0 nil])
([nil nil ((616 . 637)) nil (26388 21679 369980 661000) 0 nil])
([nil nil ((637 . 638)) nil (26388 21679 369980 300000) 0 nil])
([nil nil ((638 . 651)) nil (26388 21679 369979 879000) 0 nil])
([nil nil ((651 . 664)) nil (26388 21679 369979 398000) 0 nil])
([nil nil ((664 . 665)) nil (26388 21679 369979 148000) 0 nil])
([nil nil ((665 . 666)) nil (26388 21679 369978 867000) 0 nil])
([nil nil ((666 . 667)) nil (26388 21679 369978 607000) 0 nil])
([nil nil ((667 . 673)) nil (26388 21679 369978 306000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 672) (undo-tree-id1330 . -1) 673) nil (26388 21679 369977 845000) 0 nil])
([nil nil ((#("x" 0 1 (face font-lock-comment-face fontified t)) . -671) (undo-tree-id1329 . -1) 672) nil (26388 21679 369977 4000) 0 nil])
([nil nil ((671 . 688)) nil (26388 21679 369976 283000) 0 nil])
([nil nil ((688 . 704) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 687) (undo-tree-id1328 . -1) (688 . 689)) nil (26388 21679 369975 711000) 0 nil])
([nil nil ((659 . 660)) nil (26388 21679 369974 990000) 0 nil])
([nil nil ((705 . 711)) nil (26388 21679 369974 579000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -710) (undo-tree-id1327 . -1) 711) nil (26388 21679 369974 169000) 0 nil])
([nil nil ((710 . 714)) nil (26388 21679 369973 658000) 0 nil])
([nil nil ((714 . 731)) nil (26388 21679 369973 507000) 0 nil])
([nil nil ((731 . 742)) nil (26388 21679 369973 227000) 0 nil])
([nil nil ((742 . 759)) nil (26388 21679 369972 906000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 755) (undo-tree-id1326 . -4) 759) nil (26388 21679 369972 395000) 0 nil])
([nil nil ((755 . 759)) nil (26388 21679 369971 353000) 0 nil])
([nil nil ((759 . 760)) nil (26388 21679 369971 83000) 0 nil])
([nil nil ((760 . 777)) nil (26388 21679 369970 642000) 0 nil])
([nil nil ((777 . 796)) nil (26388 21679 369970 261000) 0 nil])
([nil nil ((796 . 797)) nil (26388 21679 369969 810000) 0 nil])
([nil nil ((797 . 802)) nil (26388 21679 369969 500000) 0 nil])
([nil nil ((802 . 803)) nil (26388 21679 369968 859000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 802) (undo-tree-id1325 . -1) 803) nil (26388 21679 369967 606000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -801) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) 802) nil (26388 21679 369966 83000) 0 nil])
([nil nil ((801 . 818)) nil (26388 21679 369963 699000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 817) (undo-tree-id1321 . -1) 818) nil (26388 21679 369962 977000) 0 nil])
([nil nil ((817 . 823)) nil (26388 21679 369945 915000) 0 nil])
([nil nil ((824 . 840) (#("                " 0 16 (fontified nil)) . 823) (undo-tree-id1598 . -16) (823 . 840) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 822) (undo-tree-id1599 . -1) (823 . 824) (t 26388 21679 371668 991000)) nil (26388 21730 567894 774000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 836) (undo-tree-id1597 . -4) 840) nil (26388 21730 567893 712000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 832) (undo-tree-id1596 . -4) 836) nil (26388 21730 567893 51000) 0 nil])
([nil nil ((832 . 853)) nil (26388 21730 567892 510000) 0 nil])
([nil nil ((853 . 859)) nil (26388 21730 567892 239000) 0 nil])
([nil nil ((859 . 861)) nil (26388 21730 567891 979000) 0 nil])
([nil nil ((861 . 862)) nil (26388 21730 567891 759000) 0 nil])
([nil nil ((862 . 875)) nil (26388 21730 567891 398000) 0 nil])
([nil nil ((875 . 887)) nil (26388 21730 567891 117000) 0 nil])
([nil nil ((887 . 888)) nil (26388 21730 567890 747000) 0 nil])
([nil nil ((888 . 890)) nil (26388 21730 567890 486000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-comment-face fontified t)) . -889) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) 890) nil (26388 21730 567890 65000) 0 nil])
([nil nil ((889 . 896)) nil (26388 21730 567889 13000) 0 nil])
([nil nil ((896 . 902)) nil (26388 21730 567888 833000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 901) (undo-tree-id1592 . -1) 902) nil (26388 21730 567888 532000) 0 nil])
([nil nil ((#("q" 0 1 (face font-lock-comment-face fontified t)) . -900) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) 901) nil (26388 21730 567887 721000) 0 nil])
([nil nil ((900 . 901)) nil (26388 21730 567885 146000) 0 nil])
([nil nil ((#("q" 0 1 (face font-lock-comment-face fontified t)) . -900) (undo-tree-id1588 . -1) 901) nil (26388 21730 567884 765000) 0 nil])
([nil nil ((900 . 910)) nil (26388 21730 567884 224000) 0 nil])
([nil nil ((910 . 922) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 909) (undo-tree-id1587 . -1) (910 . 911)) nil (26388 21730 567883 804000) 0 nil])
([nil nil ((922 . 929)) nil (26388 21730 567883 142000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -927) (undo-tree-id1585 . -1) (#("=" 0 1 (fontified t)) . -928) (undo-tree-id1586 . -1) 929) nil (26388 21730 567882 501000) 0 nil])
([nil nil ((927 . 928)) nil (26388 21730 567881 569000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -927) (undo-tree-id1584 . -1) 928) nil (26388 21730 567881 78000) 0 nil])
([nil nil ((927 . 929)) nil (26388 21730 567880 487000) 0 nil])
([nil nil ((929 . 931)) nil (26388 21730 567880 337000) 0 nil])
([nil nil ((931 . 944)) nil (26388 21730 567880 77000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 940) (undo-tree-id1555 . -4) (undo-tree-id1556 . -4) (undo-tree-id1557 . -4) (undo-tree-id1558 . -4) (undo-tree-id1559 . -4) (undo-tree-id1560 . -4) (undo-tree-id1561 . -4) (undo-tree-id1562 . -4) (undo-tree-id1563 . -4) (undo-tree-id1564 . -4) (undo-tree-id1565 . -4) (undo-tree-id1566 . -4) (undo-tree-id1567 . -4) (undo-tree-id1568 . -4) (undo-tree-id1569 . -4) (undo-tree-id1570 . -4) (undo-tree-id1571 . -4) (undo-tree-id1572 . -4) (undo-tree-id1573 . -4) (undo-tree-id1574 . -4) (undo-tree-id1575 . -4) (undo-tree-id1576 . -4) (undo-tree-id1577 . -4) (undo-tree-id1578 . -4) (undo-tree-id1579 . -4) (undo-tree-id1580 . -4) (undo-tree-id1581 . -4) (undo-tree-id1582 . -4) (undo-tree-id1583 . -4) 944) nil (26388 21730 567879 195000) 0 nil])
([nil nil ((940 . 952)) nil (26388 21730 567867 623000) 0 nil])
([nil nil ((947 . 952) (#("val" 0 3 (fontified nil)) . -947) (947 . 950) (#("value" 0 5 (fontified t)) . -947) (undo-tree-id1341 . -5) (undo-tree-id1342 . -5) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -2) (undo-tree-id1396 . -2) (undo-tree-id1397 . -2) (undo-tree-id1398 . -2) (undo-tree-id1399 . -2) (undo-tree-id1400 . -2) (undo-tree-id1401 . -2) (undo-tree-id1402 . -2) (undo-tree-id1403 . -2) (undo-tree-id1404 . -2) (undo-tree-id1405 . -2) (undo-tree-id1406 . -2) (undo-tree-id1407 . -2) (undo-tree-id1408 . -2) (undo-tree-id1409 . -2) (undo-tree-id1410 . -2) (undo-tree-id1411 . -2) (undo-tree-id1412 . -2) (undo-tree-id1413 . -2) (undo-tree-id1414 . -2) (undo-tree-id1415 . -2) (undo-tree-id1416 . -2) (undo-tree-id1417 . -2) (undo-tree-id1418 . -3) (undo-tree-id1419 . -3) (undo-tree-id1420 . -3) (undo-tree-id1421 . -3) (undo-tree-id1422 . -3) (undo-tree-id1423 . -3) (undo-tree-id1424 . -3) (undo-tree-id1425 . -3) (undo-tree-id1426 . -3) (undo-tree-id1427 . -3) (undo-tree-id1428 . -3) (undo-tree-id1429 . -3) (undo-tree-id1430 . -3) (undo-tree-id1431 . -3) (undo-tree-id1432 . -3) (undo-tree-id1433 . -3) (undo-tree-id1434 . -3) (undo-tree-id1435 . -3) (undo-tree-id1436 . -3) (undo-tree-id1437 . -3) (undo-tree-id1438 . -3) (undo-tree-id1439 . -3) (undo-tree-id1440 . -3) (undo-tree-id1441 . -3) (undo-tree-id1442 . -3) (undo-tree-id1443 . -3) (undo-tree-id1444 . -3) (undo-tree-id1445 . -3) (undo-tree-id1446 . -3) (undo-tree-id1447 . -3) (undo-tree-id1448 . -4) (undo-tree-id1449 . -4) (undo-tree-id1450 . -4) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) (undo-tree-id1453 . -4) (undo-tree-id1454 . -4) (undo-tree-id1455 . -4) (undo-tree-id1456 . -4) (undo-tree-id1457 . -4) (undo-tree-id1458 . -4) (undo-tree-id1459 . -4) (undo-tree-id1460 . -4) (undo-tree-id1461 . -4) (undo-tree-id1462 . -4) (undo-tree-id1463 . -4) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) (undo-tree-id1468 . -4) (undo-tree-id1469 . -4) (undo-tree-id1470 . -4) (undo-tree-id1471 . -5) (undo-tree-id1472 . -5) (undo-tree-id1473 . -5) (undo-tree-id1474 . -5) (undo-tree-id1475 . -5) (undo-tree-id1476 . -5) (undo-tree-id1477 . -5) (undo-tree-id1478 . -5) (undo-tree-id1479 . -5) (undo-tree-id1480 . -5) (undo-tree-id1481 . -5) (undo-tree-id1482 . -5) (undo-tree-id1483 . -5) (undo-tree-id1484 . -5) (undo-tree-id1485 . -5) (undo-tree-id1486 . -5) (undo-tree-id1487 . -5) (undo-tree-id1488 . -5) (undo-tree-id1489 . -5) (undo-tree-id1490 . -5) (undo-tree-id1491 . -5) (undo-tree-id1492 . -5) (undo-tree-id1493 . -5) (undo-tree-id1494 . -5) (undo-tree-id1495 . -5) (undo-tree-id1496 . -5) (undo-tree-id1497 . -5) (undo-tree-id1498 . -5) (undo-tree-id1499 . -5) (undo-tree-id1500 . -5) (undo-tree-id1501 . -5) (undo-tree-id1502 . -5) (undo-tree-id1503 . -5) (undo-tree-id1504 . -5) (undo-tree-id1505 . -5) (undo-tree-id1506 . -5) (undo-tree-id1507 . -5) (undo-tree-id1508 . -5) (undo-tree-id1509 . -5) (undo-tree-id1510 . -5) (undo-tree-id1511 . -5) (undo-tree-id1512 . -5) (undo-tree-id1513 . -5) (undo-tree-id1514 . -5) (undo-tree-id1515 . -5) (undo-tree-id1516 . -5) (undo-tree-id1517 . -5) (undo-tree-id1518 . -5) (undo-tree-id1519 . -5) (undo-tree-id1520 . -5) (undo-tree-id1521 . -5) (undo-tree-id1522 . -5) (undo-tree-id1523 . -5) (undo-tree-id1524 . -5) (undo-tree-id1525 . -5) (undo-tree-id1526 . -5) (undo-tree-id1527 . -5) (undo-tree-id1528 . -5) (undo-tree-id1529 . -5) (undo-tree-id1530 . -5) (undo-tree-id1531 . -5) (undo-tree-id1532 . -5) (undo-tree-id1533 . -5) (undo-tree-id1534 . -5) (undo-tree-id1535 . -5) (undo-tree-id1536 . -5) (undo-tree-id1537 . -5) (undo-tree-id1538 . -5) (undo-tree-id1539 . -5) (undo-tree-id1540 . -5) (undo-tree-id1541 . -5) (undo-tree-id1542 . -5) (undo-tree-id1543 . -5) (undo-tree-id1544 . -5) (undo-tree-id1545 . -5) (undo-tree-id1546 . -5) (undo-tree-id1547 . -5) (undo-tree-id1548 . -5) (undo-tree-id1549 . -5) (undo-tree-id1550 . -5) (undo-tree-id1551 . -5) (undo-tree-id1552 . -5) (undo-tree-id1553 . -5) (undo-tree-id1554 . -5) 952) nil (26388 21730 567861 832000) 0 nil])
([nil nil ((976 . 983) (t 26388 21730 570157 695000)) nil (26388 21762 559828 901000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -982) (undo-tree-id1857 . -1) 983) nil (26388 21762 559828 450000) 0 nil])
([nil nil ((982 . 990)) nil (26388 21762 559827 909000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -989) (undo-tree-id1856 . -1) 990) nil (26388 21762 559827 569000) 0 nil])
([nil nil ((989 . 994)) nil (26388 21762 559826 897000) 0 nil])
([nil nil ((989 . 994) (#("Fal" 0 3 (fontified nil)) . -989) (989 . 992) (#("False" 0 5 (face py-pseudo-keyword-face fontified t)) . -989) (undo-tree-id1671 . -5) (undo-tree-id1672 . -5) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -2) (undo-tree-id1726 . -2) (undo-tree-id1727 . -2) (undo-tree-id1728 . -2) (undo-tree-id1729 . -2) (undo-tree-id1730 . -2) (undo-tree-id1731 . -2) (undo-tree-id1732 . -2) (undo-tree-id1733 . -2) (undo-tree-id1734 . -2) (undo-tree-id1735 . -2) (undo-tree-id1736 . -2) (undo-tree-id1737 . -2) (undo-tree-id1738 . -2) (undo-tree-id1739 . -2) (undo-tree-id1740 . -2) (undo-tree-id1741 . -2) (undo-tree-id1742 . -2) (undo-tree-id1743 . -2) (undo-tree-id1744 . -2) (undo-tree-id1745 . -2) (undo-tree-id1746 . -2) (undo-tree-id1747 . -2) (undo-tree-id1748 . -2) (undo-tree-id1749 . -2) (undo-tree-id1750 . -2) (undo-tree-id1751 . -2) (undo-tree-id1752 . -2) (undo-tree-id1753 . -2) (undo-tree-id1754 . -2) (undo-tree-id1755 . -2) (undo-tree-id1756 . -2) (undo-tree-id1757 . -3) (undo-tree-id1758 . -3) (undo-tree-id1759 . -3) (undo-tree-id1760 . -3) (undo-tree-id1761 . -3) (undo-tree-id1762 . -3) (undo-tree-id1763 . -3) (undo-tree-id1764 . -3) (undo-tree-id1765 . -3) (undo-tree-id1766 . -3) (undo-tree-id1767 . -3) (undo-tree-id1768 . -3) (undo-tree-id1769 . -3) (undo-tree-id1770 . -3) (undo-tree-id1771 . -3) (undo-tree-id1772 . -3) (undo-tree-id1773 . -3) (undo-tree-id1774 . -3) (undo-tree-id1775 . -3) (undo-tree-id1776 . -3) (undo-tree-id1777 . -3) (undo-tree-id1778 . -3) (undo-tree-id1779 . -3) (undo-tree-id1780 . -4) (undo-tree-id1781 . -4) (undo-tree-id1782 . -4) (undo-tree-id1783 . -4) (undo-tree-id1784 . -4) (undo-tree-id1785 . -4) (undo-tree-id1786 . -4) (undo-tree-id1787 . -4) (undo-tree-id1788 . -4) (undo-tree-id1789 . -4) (undo-tree-id1790 . -4) (undo-tree-id1791 . -4) (undo-tree-id1792 . -4) (undo-tree-id1793 . -4) (undo-tree-id1794 . -4) (undo-tree-id1795 . -4) (undo-tree-id1796 . -4) (undo-tree-id1797 . -4) (undo-tree-id1798 . -4) (undo-tree-id1799 . -4) (undo-tree-id1800 . -4) (undo-tree-id1801 . -4) (undo-tree-id1802 . -5) (undo-tree-id1803 . -5) (undo-tree-id1804 . -5) (undo-tree-id1805 . -5) (undo-tree-id1806 . -5) (undo-tree-id1807 . -5) (undo-tree-id1808 . -5) (undo-tree-id1809 . -5) (undo-tree-id1810 . -5) (undo-tree-id1811 . -5) (undo-tree-id1812 . -5) (undo-tree-id1813 . -5) (undo-tree-id1814 . -5) (undo-tree-id1815 . -5) (undo-tree-id1816 . -5) (undo-tree-id1817 . -5) (undo-tree-id1818 . -5) (undo-tree-id1819 . -5) (undo-tree-id1820 . -5) (undo-tree-id1821 . -5) (undo-tree-id1822 . -5) (undo-tree-id1823 . -5) (undo-tree-id1824 . -5) (undo-tree-id1825 . -5) (undo-tree-id1826 . -5) (undo-tree-id1827 . -5) (undo-tree-id1828 . -5) (undo-tree-id1829 . -5) (undo-tree-id1830 . -5) (undo-tree-id1831 . -5) (undo-tree-id1832 . -5) (undo-tree-id1833 . -5) (undo-tree-id1834 . -5) (undo-tree-id1835 . -5) (undo-tree-id1836 . -5) (undo-tree-id1837 . -5) (undo-tree-id1838 . -5) (undo-tree-id1839 . -5) (undo-tree-id1840 . -5) (undo-tree-id1841 . -5) (undo-tree-id1842 . -5) (undo-tree-id1843 . -5) (undo-tree-id1844 . -5) (undo-tree-id1845 . -5) (undo-tree-id1846 . -5) (undo-tree-id1847 . -5) (undo-tree-id1848 . -5) (undo-tree-id1849 . -5) (undo-tree-id1850 . -5) (undo-tree-id1851 . -5) (undo-tree-id1852 . -5) (undo-tree-id1853 . -5) (undo-tree-id1854 . -5) (undo-tree-id1855 . -5) 994) nil (26388 21762 559824 142000) 0 nil])
([nil nil ((986 . 987)) nil (26388 21762 559403 489000) 0 nil])
([nil nil ((987 . 988)) nil (26388 21762 559403 118000) 0 nil])
([nil nil ((987 . 991) (#("B" 0 1 (fontified nil)) . -987) (987 . 988) (#("bool" 0 4 (fontified nil)) . -987) (987 . 991) (#("B" 0 1 (fontified t)) . -987) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) 988) nil (26388 21762 559398 410000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1023) (undo-tree-id1888 . -1) (#("." 0 1 (fontified t)) . -1024) (undo-tree-id1889 . -1) (#("." 0 1 (fontified t)) . -1025) (undo-tree-id1890 . -1) 1026 (t 26388 21762 561469 255000)) nil (26388 21824 5341 834000) 0 nil])
([nil nil ((1023 . 1031)) nil (26388 21824 5340 502000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -1030) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) 1031) nil (26388 21824 5340 151000) 0 nil])
([nil nil ((1030 . 1034)) nil (26388 21824 5336 725000) 0 nil])
([nil nil ((1030 . 1038) (#("ful" 0 3 (fontified nil)) . -1030) (1030 . 1033) (#("fullHand" 0 8 (fontified nil)) . -1030) (1030 . 1038) (#("full" 0 4 (fontified t)) . -1030) (undo-tree-id1880 . -4) (undo-tree-id1881 . -4) (undo-tree-id1882 . -4) (undo-tree-id1883 . -4) 1034) nil (26388 21824 5335 993000) 0 nil])
([nil nil ((1038 . 1039)) nil (26388 21824 5333 719000) 0 nil])
([nil nil ((1039 . 1048)) nil (26388 21824 5333 438000) 0 nil])
([nil nil ((#("unless fullHand:" 0 7 (fontified t) 7 16 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1023) (undo-tree-id1876 . -7) (undo-tree-id1877 . -7) (undo-tree-id1878 . -7) (undo-tree-id1879 . -7)) nil (26388 21824 5332 958000) 0 nil])
([nil nil ((1023 . 1030)) nil (26388 21824 5331 174000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1029) (undo-tree-id1875 . -1) 1030) nil (26388 21824 5330 343000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1026) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (#("o" 0 1 (fontified t)) . -1027) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -1028) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) 1029) nil (26388 21824 5329 90000) 0 nil])
([nil nil ((1026 . 1030)) nil (26388 21824 5321 887000) 0 nil])
([nil nil ((1026 . 1034) (#("ful" 0 3 (fontified nil)) . -1026) (1026 . 1029) (#("fullHand" 0 8 (fontified nil)) . -1026) (1026 . 1034) (#("full" 0 4 (fontified t)) . -1026) (undo-tree-id1859 . -4) (undo-tree-id1860 . -4) (undo-tree-id1861 . -4) (undo-tree-id1862 . -4) 1030) nil (26388 21824 5320 614000) 0 nil])
([nil nil ((1034 . 1035)) nil (26388 21824 5317 248000) 0 nil])
([nil nil ((1035 . 1048)) nil (26388 21824 5317 18000) 0 nil])
([nil nil ((1048 . 1067)) nil (26388 21824 5316 777000) 0 nil])
([nil nil ((1055 . 1056)) nil (26388 21824 5316 497000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1055) (undo-tree-id1858 . -1) 1056) nil (26388 21824 5315 875000) 0 nil])
([nil nil ((1055 . 1056)) nil (26388 21824 5308 61000) 0 nil])
([nil nil ((1068 . 1069)) nil (26388 21824 5307 810000) 0 nil])
([nil nil ((1069 . 1078)) nil (26388 21824 5307 560000) 0 nil])
([nil nil ((1078 . 1082)) nil (26388 21824 5307 189000) 0 nil])
([nil nil ((1082 . 1083)) nil (26388 21824 5306 949000) 0 nil])
([nil nil ((1083 . 1096)) nil (26388 21824 5306 568000) 0 nil])
([nil nil ((1096 . 1112)) nil (26388 21824 5302 49000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1160) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (#("." 0 1 (fontified t)) . -1161) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (#("." 0 1 (fontified t)) . -1162) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) 1163 (t 26388 21824 9079 767000)) nil (26388 21841 898811 158000) 0 nil])
([nil nil ((1160 . 1161)) nil (26388 21841 898806 880000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1160) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) 1161) nil (26388 21841 898806 399000) 0 nil])
([nil nil ((1160 . 1174)) nil (26388 21841 898804 535000) 0 nil])
([nil nil ((1174 . 1178) (#("bool" 0 4 (fontified nil)) . -1174) (1174 . 1178)) nil (26388 21841 898803 784000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t match-data (0 0))) . -1174) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (#("o" 0 1 (fontified t match-data (0 0))) . -1175) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (#("o" 0 1 (fontified t match-data (0 0))) . -1176) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (#("l" 0 1 (face py-builtins-face fontified t match-data (0 0))) . -1177) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) 1178) nil (26388 21841 898799 526000) 0 nil])
([nil nil ((1174 . 1183)) nil (26388 21841 898656 206000) 0 nil])
([nil nil ((1183 . 1184)) nil (26388 21841 898654 773000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1183) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) 1184) nil (26388 21841 898649 323000) 0 nil])
([nil nil ((#("from Shoe import Shoe

class Dealer:
    def __init__(self, shoe: Shoe):
        \"\"\"
        Initialize the dealer with an empty hand and a shoe of cards to draw from.
        
        :param shoe: The Shoe object the dealer will draw cards from.
        \"\"\"
        self.hand = []
        self.Shoe = shoe

    def drawInitial(self) -> list[str]:
        self.hand = [self.Shoe.drawCard(), self.Shoe.drawCard()]
        return self.hand

    def draw(self) -> None:
        card = self.Shoe.drawCard()
        self.hand.append(card)

    def calculateHand(self) -> int:
        value = 0
        aces = 0

        for card in self.hand:
            if card == 'A': # Aces can be 1 or 11
                aces += 1
                value += 11
            else:
                value += int(card) # Cast card name to an int

        while value > 21 and aces > 0:
            value -= 10 # Use ace as 1, not 11
            aces -= 1
        return value

    def checkHand(self, fullHand:bool = False) -> list[str]:
        if fullHand:
            return [self.hand[0]]
        else:
            return self.hand
        

    def reset(self) -> None:
        self.hand = []
        

" 0 4 (face py-import-from-face fontified t) 4 10 (fontified t) 10 16 (face py-import-from-face fontified t) 16 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 28 (face py-def-class-face fontified t) 28 29 (fontified t) 29 35 (face py-class-name-face fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 41 (fontified t) 41 44 (face py-def-class-face fontified t) 44 45 (fontified t) 45 53 (face py-def-face fontified t) 53 54 (face (rainbow-delimiters-depth-1-face) fontified t) 54 58 (face py-object-reference-face fontified t) 58 70 (fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 73 (fontified t) 73 81 (fontified t) 81 82 (face font-lock-string-face syntax-table (15) fontified t) 82 83 (face font-lock-string-face syntax-table nil fontified t) 83 84 (face font-lock-string-face syntax-table nil fontified t) 84 85 (face font-lock-string-face fontified t) 85 247 (face font-lock-string-face fontified t) 247 255 (face font-lock-string-face fontified t) 255 256 (face font-lock-string-face syntax-table nil fontified t) 256 257 (face font-lock-string-face syntax-table nil fontified t) 257 258 (face font-lock-string-face syntax-table (15) fontified t rear-nonsticky t) 258 259 (fontified t) 259 267 (fontified t) 267 271 (face py-object-reference-face fontified t) 271 272 (fontified t) 272 276 (face py-variable-name-face fontified t) 276 277 (fontified t) 277 278 (face font-lock-operator-face fontified t) 278 279 (fontified t) 279 280 (face (rainbow-delimiters-depth-1-face) fontified t) 280 281 (face (rainbow-delimiters-depth-1-face) fontified t) 281 282 (fontified t) 282 290 (fontified t) 290 294 (face py-object-reference-face fontified t) 294 295 (fontified t) 295 299 (face py-variable-name-face fontified t) 299 300 (fontified t) 300 301 (face font-lock-operator-face fontified t) 301 302 (fontified t) 302 306 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 306 307 (fontified t) 307 308 (fontified t) 308 312 (fontified t) 312 315 (face py-def-class-face fontified t) 315 316 (fontified t) 316 327 (face py-def-face fontified t) 327 328 (face (rainbow-delimiters-depth-1-face) fontified t) 328 332 (face py-object-reference-face fontified t) 332 333 (face (rainbow-delimiters-depth-1-face) fontified t) 333 337 (fontified t) 337 341 (face py-builtins-face fontified t) 341 342 (face (rainbow-delimiters-depth-1-face) fontified t) 342 345 (face py-builtins-face fontified t) 345 346 (face (rainbow-delimiters-depth-1-face) fontified t) 346 347 (fontified t) 347 348 (fontified t) 348 356 (fontified t) 356 360 (face py-object-reference-face fontified t) 360 361 (fontified t) 361 365 (face py-variable-name-face fontified t) 365 366 (fontified t) 366 367 (face font-lock-operator-face fontified t) 367 368 (fontified t) 368 369 (face (rainbow-delimiters-depth-1-face) fontified t) 369 373 (face py-object-reference-face fontified t) 373 379 (fontified t) 379 387 (fontified t match-data (0 0)) 387 388 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 0)) 388 389 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 0)) 389 391 (fontified t match-data (0 0)) 391 395 (face py-object-reference-face fontified t match-data (0 0)) 395 409 (fontified t match-data (0 0)) 409 410 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 0)) 410 411 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 0)) 411 412 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 0)) 412 413 (fontified t match-data (0 0)) 413 421 (fontified t match-data (0 0)) 421 427 (face font-lock-keyword-face fontified t match-data (0 0)) 427 428 (fontified t match-data (0 0)) 428 432 (face py-object-reference-face fontified t match-data (0 0)) 432 433 (fontified t match-data (0 0)) 433 437 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 437 438 (fontified t) 438 439 (fontified t) 439 443 (fontified t) 443 446 (face py-def-class-face fontified t) 446 447 (fontified t) 447 451 (face py-def-face fontified t) 451 452 (face (rainbow-delimiters-depth-1-face) fontified t) 452 456 (face py-object-reference-face fontified t) 456 457 (face (rainbow-delimiters-depth-1-face) fontified t) 457 461 (fontified t) 461 465 (face py-pseudo-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 465 467 (fontified t) 467 475 (fontified t) 475 479 (face py-variable-name-face fontified t) 479 480 (fontified t) 480 481 (face font-lock-operator-face fontified t) 481 482 (fontified t) 482 486 (face py-object-reference-face fontified t) 486 492 (fontified t) 492 500 (fontified t match-data (0 1 0 1)) 500 501 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 1 0 1)) 501 502 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 1 0 1)) 502 503 (fontified t match-data (0 1 0 1)) 503 511 (fontified t match-data (0 1 0 1)) 511 515 (face py-object-reference-face fontified t match-data (0 1 0 1)) 515 527 (fontified t match-data (0 1 0 1)) 527 528 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 1 0 1)) 528 532 (fontified t match-data (0 1 0 1)) 532 533 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 1 0 1)) 533 534 (fontified t) 534 535 (fontified t) 535 539 (fontified t) 539 542 (face py-def-class-face fontified t) 542 543 (fontified t) 543 556 (face py-def-face fontified t) 556 557 (face (rainbow-delimiters-depth-1-face) fontified t) 557 561 (face py-object-reference-face fontified t) 561 562 (face (rainbow-delimiters-depth-1-face) fontified t) 562 566 (fontified t) 566 569 (face py-builtins-face fontified t) 569 571 (fontified t) 571 579 (fontified t) 579 584 (face py-variable-name-face fontified t) 584 585 (fontified t) 585 586 (face font-lock-operator-face fontified t) 586 587 (fontified t) 587 588 (face py-number-face fontified t) 588 589 (fontified t) 589 597 (fontified t) 597 601 (face py-variable-name-face fontified t) 601 602 (fontified t) 602 603 (face font-lock-operator-face fontified t) 603 604 (fontified t) 604 605 (face py-number-face fontified t) 605 606 (fontified t) 606 607 (fontified t) 607 615 (fontified t) 615 618 (face font-lock-keyword-face fontified t) 618 624 (fontified t) 624 626 (face font-lock-keyword-face fontified t) 626 627 (fontified t) 627 631 (face py-object-reference-face fontified t) 631 638 (fontified t) 638 650 (fontified t) 650 652 (face font-lock-keyword-face fontified t) 652 661 (fontified t) 661 664 (face font-lock-string-face fontified t) 664 666 (fontified t) 666 688 (face font-lock-comment-face fontified t) 688 704 (fontified t) 704 708 (face py-variable-name-face fontified t) 708 709 (fontified t) 709 711 (face font-lock-operator-face fontified t) 711 712 (fontified t) 712 713 (face py-number-face fontified t) 713 714 (fontified t) 714 730 (fontified t) 730 735 (face py-variable-name-face fontified t) 735 736 (fontified t) 736 738 (face font-lock-operator-face fontified t) 738 739 (fontified t) 739 741 (face py-number-face fontified t) 741 742 (fontified t) 742 754 (fontified t) 754 758 (face font-lock-keyword-face fontified t) 758 760 (fontified t) 760 776 (fontified t) 776 781 (face py-variable-name-face fontified t) 781 782 (fontified t) 782 784 (face font-lock-operator-face fontified t) 784 785 (fontified t) 785 788 (face py-builtins-face fontified t) 788 789 (face (rainbow-delimiters-depth-1-face) fontified t) 789 793 (fontified t) 793 794 (face (rainbow-delimiters-depth-1-face) fontified t) 794 795 (fontified t) 795 822 (face font-lock-comment-face fontified t) 822 823 (fontified t) 823 831 (fontified t) 831 836 (face font-lock-keyword-face fontified t) 836 845 (fontified t) 845 847 (face py-number-face fontified t) 847 848 (fontified t) 848 851 (face font-lock-keyword-face fontified t) 851 859 (fontified t) 859 860 (face py-number-face fontified t) 860 862 (fontified t) 862 874 (fontified t) 874 879 (face py-variable-name-face fontified t) 879 880 (fontified t) 880 882 (face font-lock-operator-face fontified t) 882 883 (fontified t) 883 885 (face py-number-face fontified t) 885 886 (fontified t) 886 909 (face font-lock-comment-face fontified t) 909 921 (fontified t) 921 925 (face py-variable-name-face fontified t) 925 926 (fontified t) 926 928 (face font-lock-operator-face fontified t) 928 929 (fontified t) 929 930 (face py-number-face fontified t) 930 931 (fontified t) 931 939 (fontified t) 939 945 (face font-lock-keyword-face fontified t) 945 946 (fontified t) 946 951 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 951 952 (fontified t) 952 953 (fontified t) 953 957 (fontified t) 957 960 (face py-def-class-face fontified t) 960 961 (fontified t) 961 970 (face py-def-face fontified t) 970 971 (face (rainbow-delimiters-depth-1-face) fontified t) 971 975 (face py-object-reference-face fontified t) 975 986 (fontified t) 986 990 (face py-builtins-face fontified t match-data (0 1 0 1)) 990 993 (fontified t) 993 998 (face py-pseudo-keyword-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 998 999 (face (rainbow-delimiters-depth-1-face) fontified t) 999 1003 (fontified t) 1003 1007 (face py-builtins-face fontified t) 1007 1008 (face (rainbow-delimiters-depth-1-face) fontified t) 1008 1011 (face py-builtins-face fontified t match-data (0 2 0 1 1 2)) 1011 1012 (face (rainbow-delimiters-depth-1-face) fontified t) 1012 1014 (fontified t) 1014 1022 (fontified t) 1022 1024 (face font-lock-keyword-face fontified t) 1024 1025 (fontified t) 1025 1035 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1035 1047 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1047 1053 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1053 1054 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1054 1055 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1055 1059 (face py-object-reference-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1059 1064 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1064 1065 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1065 1066 (face py-number-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1066 1067 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1067 1068 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1068 1069 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1069 1077 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1077 1081 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1081 1083 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1083 1095 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1095 1101 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1101 1102 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1102 1106 (face py-object-reference-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1106 1111 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1111 1112 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1112 1120 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1120 1121 (fontified t) 1121 1122 (fontified t) 1122 1126 (fontified t) 1126 1129 (face py-def-class-face fontified t) 1129 1130 (fontified t) 1130 1135 (face py-def-face fontified t) 1135 1136 (face (rainbow-delimiters-depth-1-face) fontified t) 1136 1140 (face py-object-reference-face fontified t) 1140 1141 (face (rainbow-delimiters-depth-1-face) fontified t) 1141 1145 (fontified t) 1145 1149 (face py-pseudo-keyword-face fontified t) 1149 1151 (fontified t) 1151 1159 (fontified t) 1159 1163 (face py-object-reference-face fontified t) 1163 1164 (fontified t) 1164 1168 (face py-variable-name-face fontified t) 1168 1169 (fontified t) 1169 1170 (face font-lock-operator-face fontified t) 1170 1171 (fontified t) 1171 1172 (face (rainbow-delimiters-depth-1-face) fontified t) 1172 1173 (face (rainbow-delimiters-depth-1-face) fontified t) 1173 1174 (fontified t) 1174 1182 (fontified t) 1182 1183 (fontified t) 1183 1184 (fontified t)) . 1) (undo-tree-id2244 . -1184) (undo-tree-id2245 . -21) (undo-tree-id2246 . -302) (undo-tree-id2247 . -63) (undo-tree-id2248 . -307) (undo-tree-id2249 . -302) (undo-tree-id2250 . -72) (undo-tree-id2251 . -21) (undo-tree-id2252 . -347) (undo-tree-id2253 . -1008) (undo-tree-id2254 . -1182) (undo-tree-id2255 . -1182) (undo-tree-id2256 . -259) (undo-tree-id2257 . -1182) (undo-tree-id2258 . -1011) (undo-tree-id2259 . -302) (undo-tree-id2260 . -302) (undo-tree-id2261 . -374) (undo-tree-id2262 . -341) (undo-tree-id2263 . -579) (undo-tree-id2264 . -789) (undo-tree-id2265 . 2) (undo-tree-id2266 . -73) (undo-tree-id2267 . -1121) (undo-tree-id2268 . -637) (undo-tree-id2269 . -637) (undo-tree-id2270 . -637) (undo-tree-id2271 . -637) (undo-tree-id2272 . -637) (undo-tree-id2273 . -637) (undo-tree-id2274 . -637) (undo-tree-id2275 . -637) (undo-tree-id2276 . -637) (undo-tree-id2277 . -637) (undo-tree-id2278 . -637) (undo-tree-id2279 . -637) (undo-tree-id2280 . -637) (undo-tree-id2281 . -637) (undo-tree-id2282 . -637) (undo-tree-id2283 . -637) (undo-tree-id2284 . -637) (undo-tree-id2285 . -637) (undo-tree-id2286 . -637) (undo-tree-id2287 . -637) (undo-tree-id2288 . -637) (undo-tree-id2289 . -637) (undo-tree-id2290 . -637) (undo-tree-id2291 . -637) (undo-tree-id2292 . -637) (undo-tree-id2293 . -637) (undo-tree-id2294 . -637) (undo-tree-id2295 . -637) (undo-tree-id2296 . -637) (undo-tree-id2297 . -637) (undo-tree-id2298 . -637) (undo-tree-id2299 . -637) (undo-tree-id2300 . -637) (undo-tree-id2301 . -637) (undo-tree-id2302 . -637) (undo-tree-id2303 . -637) (undo-tree-id2304 . -637) (undo-tree-id2305 . -637) (undo-tree-id2306 . -637) (undo-tree-id2307 . -1184) (undo-tree-id2308 . -637) (undo-tree-id2309 . -1182) (t 26388 21841 901260 323000)) nil (26388 21930 147121 628000) 0 nil])
([nil current ((nil rear-nonsticky nil 2824 . 2825) (nil fontified nil 1 . 2825) (1 . 2825)) nil (26388 21930 147072 846000) 0 nil])
nil
