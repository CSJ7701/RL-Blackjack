(undo-tree-save-format-version . 1)
"975b4d3dc4df7d0debbce097afa614080b5e9162"
[nil nil nil nil (26402 27732 299649 1000) 0 nil]
([nil nil ((nil rear-nonsticky nil 762 . 763) (nil fontified nil 1 . 763) (1 . 763) (t 26402 27548 605683 296000)) nil (26402 27732 299644 382000) 0 nil])
([nil nil ((635 . 639) (#("    " 0 4 (fontified nil)) . 634) (undo-tree-id1012 . -4) (633 . 639) (t 26402 27732 300534 548000)) nil (26402 29145 192082 821000) 0 nil])
([nil nil ((639 . 657)) nil (26402 29145 192082 110000) 0 nil])
([nil nil ((657 . 665)) nil (26402 29145 192081 859000) 0 nil])
([nil nil ((665 . 666)) nil (26402 29145 192081 599000) 0 nil])
([nil nil ((666 . 675)) nil (26402 29145 192081 338000) 0 nil])
([nil nil ((675 . 682)) nil (26402 29145 192081 88000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 681) (undo-tree-id1011 . -1) 682) nil (26402 29145 192080 517000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -680) (undo-tree-id1010 . -1) 681) nil (26402 29145 192079 715000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 679) (undo-tree-id1009 . -1) 680) nil (26402 29145 192079 24000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -675) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (#("a" 0 1 (fontified t)) . -676) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) \...) nil (26402 29145 192077 772000) 0 nil])
([nil nil ((675 . 682)) nil (26402 29145 192071 660000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -675) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) \...) nil (26402 29145 192059 768000) 0 nil])
([nil nil ((675 . 678)) nil (26402 29145 191496 75000) 0 nil])
([nil nil ((810 . 818) (#("        " 0 8 (fontified nil)) . 809) (undo-tree-id1080 . -8) (808 . 818) (t 26402 29145 192719 231000)) nil (26402 29208 730614 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1095 . 1096) (nil fontified nil 818 . 1096) (818 . 1096)) nil (26402 29208 730613 828000) 0 nil])
([nil nil ((810 . 814) (#("        " 0 8 (fontified t)) . 810) (undo-tree-id1039 . -8) (undo-tree-id1040 . -5) (undo-tree-id1041 . -5) (undo-tree-id1042 . -5) (undo-tree-id1043 . -5) (undo-tree-id1044 . -5) (undo-tree-id1045 . -5) (undo-tree-id1046 . -5) \...) nil (26402 29208 730612 275000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 810) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) (undo-tree-id1015 . -4) (undo-tree-id1016 . -4) (undo-tree-id1017 . -4) (undo-tree-id1018 . -4) (undo-tree-id1019 . -4) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) \...) nil (26402 29208 730546 541000) 0 nil])
([nil nil ((1088 . 1089) 810) nil (26402 29208 730518 769000) 0 nil])
([nil nil ((656 . 663) (t 26402 29208 731318 514000)) nil (26402 54527 793929 123000) 0 nil])
([nil nil ((663 . 664) (t 26402 54527 795118 908000)) nil (26402 54538 521649 351000) 0 nil])
([nil nil ((664 . 671)) nil (26402 54538 521649 11000) 0 nil])
([nil nil ((671 . 679)) nil (26402 54538 521648 700000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -670) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (#("i" 0 1 (fontified t)) . -671) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) \...) nil (26402 54538 521646 636000) 0 nil])
([nil nil ((670 . 679)) nil (26402 54538 521618 263000) 0 nil])
([nil nil ((1 . 2) (1 . 2) (t 26402 54538 523210 327000)) nil (26402 54548 954452 543000) 0 nil])
([nil nil ((1 . 11)) nil (26402 54548 954452 82000) 0 nil])
([nil nil ((6 . 12) (#("typ" 0 3 (fontified nil)) . -6) (6 . 9) (#("typing" 0 6 (fontified nil)) . -6) (6 . 12) (#("typin" 0 5 (fontified t)) . -6) (undo-tree-id1256 . -5) (undo-tree-id1257 . -5) (undo-tree-id1258 . -5) (undo-tree-id1259 . -5) \...) nil (26402 54548 954451 70000) 0 nil])
([nil nil ((12 . 25)) nil (26402 54548 954448 967000) 0 nil])
([nil nil ((20 . 25) (#("Tup" 0 3 (fontified nil)) . -20) (20 . 23) (#("Tuple" 0 5 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 \...))) . -20) (undo-tree-id1119 . -5) (undo-tree-id1120 . -5) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) \...) nil (26402 54548 954444 779000) 0 nil])
([nil nil ((61 . 69) (t 26402 54548 955299 331000)) nil (26402 54574 510338 74000) 0 nil])
([nil nil ((25 . 26)) nil (26402 54574 510337 764000) 0 nil])
([nil nil ((26 . 34)) nil (26402 54574 510337 353000) 0 nil])
([nil nil ((31 . 41) (#("Mon" 0 3 (fontified nil)) . -31) (31 . 34) (#("MonteCarlo" 0 10 (fontified nil)) . -31) (31 . 41) (#("Mon" 0 3 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 \...))) . -31) (undo-tree-id1300 . -3) (undo-tree-id1301 . -3) (undo-tree-id1302 . -3) (undo-tree-id1303 . -3) \...) nil (26402 54574 510336 371000) 0 nil])
([nil nil ((41 . 49)) nil (26402 54574 510334 708000) 0 nil])
([nil nil ((49 . 50)) nil (26402 54574 510334 177000) 0 nil])
([nil nil ((49 . 59) (#("M" 0 1 (fontified nil)) . -49) (49 . 50) (#("MonteCarlo" 0 10 (fontified nil)) . -49) (49 . 59) (#("M" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -49) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) \...) nil (26402 54574 510330 79000) 0 nil])
([nil nil ((103 . 104) (t 26402 54574 511517 798000)) nil (26402 54593 990188 378000) 0 nil])
([nil nil ((104 . 108)) nil (26402 54593 990188 48000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -105) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (#("o" 0 1 (fontified t)) . -106) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) \...) nil (26402 54593 990187 266000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 104) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) 105) nil (26402 54593 990182 688000) 0 nil])
([nil nil ((104 . 108)) nil (26402 54593 990179 211000) 0 nil])
([nil nil ((105 . 115) (#("Mon" 0 3 (fontified nil)) . -105) (105 . 108) (#("MonteCarlo" 0 10 (fontified nil)) . -105) (105 . 115) (#("Mon" 0 3 (fontified t)) . -105) (undo-tree-id1304 . -3) (undo-tree-id1305 . -3) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) \...) nil (26402 54593 990175 63000) 0 nil])
([nil nil ((140 . 149) (t 26402 54593 990684 713000)) nil (26402 54602 658789 330000) 0 nil])
([nil nil ((149 . 154)) nil (26402 54602 658788 138000) 0 nil])
([nil nil ((154 . 169)) nil (26402 54602 658783 298000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -807) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (#("." 0 1 (fontified t)) . -808) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (#("." 0 1 (fontified t)) . -809) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) 810 \...) nil (26402 55291 112594 568000) 0 nil])
([nil nil ((807 . 818)) nil (26402 55291 112591 432000) 0 nil])
([nil nil ((818 . 821)) nil (26402 55291 112591 152000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -818) (undo-tree-id1421 . -1) (#("e" 0 1 (fontified t)) . -819) (undo-tree-id1422 . -1) (#("t" 0 1 (fontified t)) . -820) (undo-tree-id1423 . -1) 821) nil (26402 55291 112590 240000) 0 nil])
([nil nil ((818 . 823)) nil (26402 55291 112586 443000) 0 nil])
([nil nil ((819 . 834) (#("ge" 0 2 (fontified nil)) . -819) (819 . 821) (#("get_best_action" 0 15 (fontified nil)) . -819) (819 . 834) (#("get_" 0 4 (fontified t)) . -819) (undo-tree-id1417 . -4) (undo-tree-id1418 . -4) (undo-tree-id1419 . -4) (undo-tree-id1420 . -4) \...) nil (26402 55291 112585 822000) 0 nil])
([nil nil ((834 . 835)) nil (26402 55291 112583 608000) 0 nil])
([nil nil ((835 . 845)) nil (26402 55291 112583 6000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 844) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) 845) nil (26402 55291 112582 295000) 0 nil])
([nil nil ((844 . 853)) nil (26402 55291 112580 812000) 0 nil])
([nil nil ((1011 . 1016)) nil (26402 55291 112580 452000) 0 nil])
([nil nil ((1016 . 1023)) nil (26402 55291 112580 121000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1022) (undo-tree-id1414 . -1) 1023) nil (26402 55291 112579 600000) 0 nil])
([nil nil ((1022 . 1026)) nil (26402 55291 112578 528000) 0 nil])
([nil nil ((1025 . 1035) (#("m" 0 1 (fontified nil)) . -1025) (1025 . 1026) (#("MonteCarlo" 0 10 (fontified nil)) . -1025) (1025 . 1035) (#("m" 0 1 (fontified t)) . -1025) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) \...) nil (26402 55291 112577 346000) 0 nil])
([nil nil ((1035 . 1037)) nil (26402 55291 112566 616000) 0 nil])
([nil nil ((1056 . 1062)) nil (26402 55291 112561 666000) 0 nil])
([nil nil ((1206 . 1210) (#("    " 0 4 (fontified nil)) . 1205) (undo-tree-id2343 . -4) (1204 . 1210) (t 26402 55291 113899 994000)) nil (26402 55327 404823 139000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -840) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) \...) nil (26402 55327 404808 381000) 0 nil])
([nil nil ((1198 . 1212) (t 26402 55327 406153 798000)) nil (26402 55381 744681 521000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1211) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) 1212) nil (26402 55381 744680 889000) 0 nil])
([nil nil ((1211 . 1216)) nil (26402 55381 744677 513000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1211) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (#("e" 0 1 (fontified t)) . -1212) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) \...) nil (26402 55381 744676 311000) 0 nil])
([nil nil ((1211 . 1217)) nil (26402 55381 744670 780000) 0 nil])
([nil nil ((1217 . 1230) (#("calculateHand" 0 13 (fontified nil)) . -1217) (1217 . 1230)) nil (26402 55381 744670 109000) 0 nil])
([nil nil ((1230 . 1232)) nil (26402 55381 744669 698000) 0 nil])
([nil nil ((1232 . 1237)) nil (26402 55381 744669 157000) 0 nil])
([nil nil ((1237 . 1248)) nil (26402 55381 744668 887000) 0 nil])
([nil nil ((1248 . 1255)) nil (26402 55381 744667 865000) 0 nil])
([nil nil ((1255 . 1256)) nil (26402 55381 744667 254000) 0 nil])
([nil nil ((1256 . 1262)) nil (26402 55381 744667 13000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face fontified t match-data (0 0))) . -1259) (undo-tree-id2513 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t match-data (0 0))) . -1260) (undo-tree-id2514 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t match-data (0 0))) . -1261) (undo-tree-id2515 . -1) 1262) nil (26402 55381 744665 851000) 0 nil])
([nil nil ((1259 . 1268)) nil (26402 55381 744626 998000) 0 nil])
([nil nil ((1273 . 1274)) nil (26402 55381 744626 707000) 0 nil])
([nil nil ((1273 . 1279)) nil (26402 55381 744626 447000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1278) (undo-tree-id2512 . -1) 1279) nil (26402 55381 744626 56000) 0 nil])
([nil nil ((1278 . 1287)) nil (26402 55381 744625 244000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1286) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) 1287) nil (26402 55381 744624 844000) 0 nil])
([nil nil ((#("agent" 0 5 (fontified t)) . -1281) (undo-tree-id2504 . -5) (undo-tree-id2505 . -5) (undo-tree-id2506 . -5) (undo-tree-id2507 . -5) 1286) nil (26402 55381 744622 940000) 0 nil])
([nil nil ((1281 . 1300)) nil (26402 55381 744621 137000) 0 nil])
([nil nil ((1300 . 1305)) nil (26402 55381 744620 786000) 0 nil])
([nil nil ((1326 . 1331)) nil (26402 55381 744620 345000) 0 nil])
([nil nil ((1326 . 1331) (#("sta" 0 3 (fontified nil)) . -1326) (1326 . 1329) (#("state" 0 5 (fontified t)) . -1326) (undo-tree-id2344 . -5) (undo-tree-id2345 . -5) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) \...) nil (26402 55381 744615 145000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t match-data (0 0))) . -1253) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) \...) nil (26402 55391 135763 378000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t match-data (0 0))) . -1251) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) \...) nil (26402 55391 135753 910000) 0 nil])
([nil nil ((169 . 178) (t 26402 55391 136609 58000)) nil (26402 56624 248740 886000) 0 nil])
([nil nil ((178 . 195)) nil (26402 56624 248739 764000) 0 nil])
([nil nil ((195 . 196)) nil (26402 56624 248734 494000) 0 nil])
([nil nil ((196 . 197) (t 26402 56624 249586 207000)) nil (26402 56640 611679 337000) 0 nil])
([nil nil ((197 . 198)) nil (26402 56640 611679 26000) 0 nil])
([nil nil ((198 . 219)) nil (26402 56640 611678 776000) 0 nil])
([nil nil ((219 . 221)) nil (26402 56640 611678 105000) 0 nil])
([nil nil ((221 . 227)) nil (26402 56640 611677 824000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -224) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) \...) nil (26402 56640 611675 750000) 0 nil])
([nil nil ((221 . 228) (#("act" 0 3 (face font-lock-comment-face fontified t)) . -221) (undo-tree-id2574 . -3) (undo-tree-id2575 . -3) (undo-tree-id2576 . -3) (undo-tree-id2577 . -3) (undo-tree-id2578 . -3) (undo-tree-id2579 . -3) (undo-tree-id2580 . -3) (undo-tree-id2581 . -3) \...) nil (26402 56642 212937 886000) 0 nil])
([nil nil ((#("random actions" 0 7 (face font-lock-comment-face fontified t) 7 14 (face font-lock-comment-face fontified t)) . -214) (undo-tree-id2879 . -7) (undo-tree-id2880 . -14) (undo-tree-id2881 . -14) 228) nil (26402 56825 970335 589000) 0 nil] [nil nil ((#("

    def" 0 1 (face font-lock-comment-face fontified t) 1 6 (fontified t) 6 9 (face py-def-class-face fontified t)) . 228) (undo-tree-id2573 . -9)) ((228 . 237)) (26402 56640 611364 914000) 0 nil])
([nil nil ((214 . 223)) nil (26402 56825 970333 806000) 0 nil])
nil
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -222) (undo-tree-id2878 . -1) 223) nil (26402 56825 970333 325000) 0 nil])
([nil nil ((222 . 225)) nil (26402 56825 970331 111000) 0 nil])
([nil nil ((59 . 60)) nil (26402 56825 970330 540000) 0 nil])
([nil nil ((60 . 63)) nil (26402 56825 970330 289000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t match-data (0 1 0 1))) . -62) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) 63) nil (26402 56825 970329 658000) 0 nil])
([nil nil ((62 . 83)) nil (26402 56825 970327 584000) 0 nil])
([nil nil ((83 . 85)) nil (26402 56825 970327 93000) 0 nil])
([nil nil ((79 . 85) (#("ran" 0 3 (fontified nil)) . -79) (79 . 82) (#("random" 0 6 (fontified t match-data (0 1 0 1))) . -79) (undo-tree-id2870 . -6) (undo-tree-id2871 . -6) (undo-tree-id2872 . -6) (undo-tree-id2873 . -6) 85) nil (26402 56825 970326 132000) 0 nil])
([nil nil ((880 . 889)) nil (26402 56825 970323 867000) 0 nil])
([nil nil ((889 . 891)) nil (26402 56825 970323 517000) 0 nil])
([nil nil ((891 . 901)) nil (26402 56825 970323 246000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -898) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (#("r" 0 1 (fontified t)) . -899) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) \...) nil (26402 56825 970322 274000) 0 nil])
([nil nil ((898 . 901)) nil (26402 56825 970314 480000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -900) (undo-tree-id2856 . -1) 901) nil (26402 56825 970313 568000) 0 nil])
([nil nil ((900 . 903)) nil (26402 56825 970311 644000) 0 nil])
([nil nil ((903 . 908)) nil (26402 56825 970311 133000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -906) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (#("." 0 1 (fontified t)) . -907) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) 908) nil (26402 56825 970309 891000) 0 nil])
([nil nil ((906 . 915)) nil (26402 56825 970306 144000) 0 nil])
([nil nil ((915 . 916)) nil (26402 56825 970305 392000) 0 nil])
([nil nil ((916 . 929)) nil (26402 56825 970304 641000) 0 nil])
([nil nil ((929 . 930)) nil (26402 56825 970303 789000) 0 nil])
([nil nil ((930 . 951)) nil (26402 56825 970303 58000) 0 nil])
([nil nil ((951 . 962)) nil (26402 56825 970302 447000) 0 nil])
([nil nil ((962 . 965)) nil (26402 56825 970301 705000) 0 nil])
([nil nil ((965 . 986)) nil (26402 56825 970300 694000) 0 nil])
([nil nil ((986 . 988)) nil (26402 56825 970299 952000) 0 nil])
([nil nil ((988 . 1001)) nil (26402 56825 970299 271000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 997) (undo-tree-id2851 . -4) 1001) nil (26402 56825 970298 39000) 0 nil])
([nil nil ((997 . 1001)) nil (26402 56825 970296 355000) 0 nil])
([nil nil ((1001 . 1002)) nil (26402 56825 970295 514000) 0 nil])
([nil nil ((1003 . 1015) (#("        " 0 8 (fontified t)) . 1003) (undo-tree-id2850 . -8) 1016) nil (26402 56825 970291 837000) 0 nil])
([nil nil ((1015 . 1024) (t 26402 56825 972302 703000)) nil (26402 56885 619442 767000) 0 nil])
([nil nil ((141 . 150)) nil (26402 56885 619441 685000) 0 nil])
([nil nil ((150 . 151)) nil (26402 56885 619440 923000) 0 nil])
([nil nil ((151 . 157)) nil (26402 56885 619440 142000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -156) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) 157) nil (26402 56885 619438 990000) 0 nil])
([nil nil ((156 . 163)) nil (26402 56885 619434 892000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -241) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (#("." 0 1 (fontified t)) . -242) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (#("6" 0 1 (face py-number-face fontified t)) . -243) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) 244) nil (26402 56885 619433 68000) 0 nil])
([nil nil ((241 . 248)) nil (26402 56885 619416 157000) 0 nil])
([nil nil ((85 . 93) (t 26402 56885 621811 680000)) nil (26402 56906 645673 998000) 0 nil])
([nil nil ((87 . 93) (#("choi" 0 4 (fontified nil)) . -87) (87 . 91) (#("choice" 0 6 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 \...))) . -87) (undo-tree-id2892 . -6) (undo-tree-id2893 . -6) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) \...) nil (26402 56906 645668 537000) 0 nil])
([nil nil ((#("            # choose randomly from actions that are not the best action" 0 12 (fontified t) 12 71 (face font-lock-comment-face fontified t)) . 951) (t 26402 56906 646991 206000)) nil (26402 57016 632405 383000) 0 nil])
([nil nil ((951 . 963)) nil (26402 57016 632404 822000) 0 nil])
([nil nil ((963 . 964)) nil (26402 57016 632404 381000) 0 nil])
([nil nil ((964 . 979)) nil (26402 57016 632403 790000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -978) (undo-tree-id3078 . -1) 979) nil (26402 57016 632403 108000) 0 nil])
([nil nil ((978 . 999)) nil (26402 57016 632402 377000) 0 nil])
([nil nil ((999 . 1000)) nil (26402 57016 632402 117000) 0 nil])
([nil nil ((1000 . 1013)) nil (26402 57016 632401 465000) 0 nil])
([nil nil ((1013 . 1034)) nil (26402 57016 632400 934000) 0 nil])
([nil nil ((1034 . 1038)) nil (26402 57016 632400 674000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1037) (undo-tree-id3077 . -1) 1038) nil (26402 57016 632400 103000) 0 nil])
([nil nil ((1037 . 1041)) nil (26402 57016 632399 141000) 0 nil])
([nil nil ((1039 . 1054) (#("ge" 0 2 (fontified nil)) . -1039) (1039 . 1041) (#("get_best_action" 0 15 (fontified nil)) . -1039) (1039 . 1054) (#("ge" 0 2 (fontified t)) . -1039) (undo-tree-id3073 . -2) (undo-tree-id3074 . -2) (undo-tree-id3075 . -2) (undo-tree-id3076 . -2) \...) nil (26402 57016 632398 329000) 0 nil])
([nil nil ((1054 . 1056)) nil (26402 57016 632395 524000) 0 nil])
([nil nil ((#("^" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1055) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) 1056) nil (26402 57016 632395 193000) 0 nil])
([nil nil ((1055 . 1062)) nil (26402 57016 632393 751000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1055) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) 1056) nil (26402 57016 632393 370000) 0 nil])
([nil nil ((1061 . 1074)) nil (26402 57016 632391 857000) 0 nil])
([nil nil ((1074 . 1095)) nil (26402 57016 632391 547000) 0 nil])
([nil nil ((1095 . 1116)) nil (26402 57016 632391 296000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1115) (undo-tree-id3068 . -1) 1116) nil (26402 57016 632390 735000) 0 nil])
([nil nil ((1115 . 1134)) nil (26402 57016 632390 94000) 0 nil])
([nil nil ((1134 . 1143)) nil (26402 57016 632389 803000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1142) (undo-tree-id3067 . -1) 1143) nil (26402 57016 632389 412000) 0 nil])
([nil nil ((1142 . 1147)) nil (26402 57016 632388 391000) 0 nil])
([nil nil ((1147 . 1160)) nil (26402 57016 632388 100000) 0 nil])
([nil nil ((93 . 94)) nil (26402 57016 632387 829000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 94)) nil (26402 57016 632387 409000) 0 nil])
([nil nil ((26 . 27)) nil (26402 57016 632387 18000) 0 nil])
([nil nil ((26 . 32)) nil (26402 57016 632386 737000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 \...))) . -31) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) 32) nil (26402 57016 632386 66000) 0 nil])
([nil nil ((31 . 52)) nil (26402 57016 632383 561000) 0 nil])
([nil nil ((46 . 52) (#("Act" 0 3 (fontified nil)) . -46) (46 . 49) (#("Action" 0 6 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 \...))) . -46) (undo-tree-id3059 . -6) (undo-tree-id3060 . -6) (undo-tree-id3061 . -6) (undo-tree-id3062 . -6) 52) nil (26402 57016 632380 405000) 0 nil])
([nil nil ((1187 . 1193) (t 26402 57016 634148 230000)) nil (26402 57046 718259 972000) 0 nil])
([nil nil ((1187 . 1193) (#("act" 0 3 (fontified nil)) . -1187) (1187 . 1190) (#("action" 0 6 (fontified t match-data (0 2 0 1 1 2))) . -1187) (undo-tree-id3096 . -6) (undo-tree-id3097 . -6) (undo-tree-id3098 . -6) (undo-tree-id3099 . -6) 1193) nil (26402 57046 718259 361000) 0 nil])
([nil nil ((1193 . 1202)) nil (26402 57046 718256 826000) 0 nil])
([nil nil ((1202 . 1208)) nil (26402 57046 718256 74000) 0 nil])
([nil nil ((1203 . 1219) (#("poss" 0 4 (fontified nil)) . -1203) (1203 . 1207) (#("possible_actions" 0 16 (fontified nil)) . -1203) (1203 . 1219) (#("possi" 0 5 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 \...))) . -1203) (undo-tree-id3092 . -5) (undo-tree-id3093 . -5) (undo-tree-id3094 . -5) (undo-tree-id3095 . -5) \...) nil (26402 57046 718254 952000) 0 nil])
([nil nil ((1219 . 1229)) nil (26402 57046 718252 528000) 0 nil])
([nil nil ((1224 . 1240) (#("pos" 0 3 (fontified nil)) . -1224) (1224 . 1227) (#("possible_actions" 0 16 (fontified nil)) . -1224) (1224 . 1240) (#("possi" 0 5 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 \...))) . -1224) (undo-tree-id3088 . -5) (undo-tree-id3089 . -5) (undo-tree-id3090 . -5) (undo-tree-id3091 . -5) \...) nil (26402 57046 718251 626000) 0 nil])
([nil nil ((1240 . 1245)) nil (26402 57046 718248 180000) 0 nil])
([nil nil ((1245 . 1249)) nil (26402 57046 718247 548000) 0 nil])
([nil nil ((1246 . 1257) (#("bes" 0 3 (fontified nil)) . -1246) (1246 . 1249) (#("best_action" 0 11 (fontified nil)) . -1246) (1246 . 1257) (#("bes" 0 3 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 \...))) . -1246) (undo-tree-id3079 . -3) (undo-tree-id3080 . -3) (undo-tree-id3081 . -3) (undo-tree-id3082 . -3) \...) nil (26403 29324 361194 311000) 0 nil])
([nil nil ((887 . 891) (#("    " 0 4 (fontified t)) . 887) (t 26403 28729 853614 908000)) nil (26403 31992 454780 419000) 0 nil] [nil nil ((887 . 892) (t 26403 28729 853614 908000)) ((#("table" 0 5 (fontified t)) . 887) (undo-tree-id0 . -3) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (undo-tree-id3 . -5) (undo-tree-id4 . -5) (undo-tree-id5 . -5) (undo-tree-id6 . -5) (undo-tree-id7 . -5) (undo-tree-id8 . -5)) (26403 29323 736932 836000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 887) (undo-tree-id9 . -4) 891) nil (26403 31992 454778 626000) 0 nil])
nil
([nil nil ((887 . 891)) nil (26403 31992 454766 254000) 0 nil])
([nil nil ((594 . 595) (t 26403 31992 521118 519000)) nil (26403 32586 169120 674000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -594) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 595) nil (26403 32586 169117 402000) 0 nil])
([nil nil ((312 . 313) (t 26402 57046 719708 252000)) nil (26415 17224 93311 672000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -312) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 313) nil (26415 17224 93310 360000) 0 nil])
([nil nil ((312 . 321)) nil (26415 17224 93304 859000) 0 nil])
([nil nil ((321 . 336)) nil (26415 17224 93304 529000) 0 nil])
([nil nil ((336 . 339)) nil (26415 17224 93304 28000) 0 nil])
([nil nil ((198 . 205)) nil (26415 17224 93303 577000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -203) (undo-tree-id0 . -1) (#("_" 0 1 (fontified t)) . -204) (undo-tree-id1 . -1) 205) nil (26415 17224 93302 475000) 0 nil])
([nil nil ((203 . 210)) nil (26415 17224 93266 336000) 0 nil])
([nil nil ((210 . 211)) nil (26415 17224 93265 876000) 0 nil])
([nil nil ((211 . 232)) nil (26415 17224 93265 425000) 0 nil])
([nil nil ((232 . 233)) nil (26415 17224 93265 34000) 0 nil])
([nil nil ((233 . 234)) nil (26415 17224 93264 313000) 0 nil])
([nil nil ((234 . 255)) nil (26415 17224 93263 792000) 0 nil])
([nil nil ((255 . 256)) nil (26415 17224 93263 441000) 0 nil])
([nil nil ((256 . 257)) nil (26415 17224 93262 760000) 0 nil])
([nil nil ((257 . 259)) nil (26415 17224 93262 8000) 0 nil])
([nil nil ((259 . 265)) nil (26415 17224 93256 368000) 0 nil])
([nil nil ((406 . 407) (t 26415 17224 95594 196000)) nil (26415 17242 549093 943000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -406) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 407) nil (26415 17242 549093 342000) 0 nil])
([nil nil ((406 . 412)) nil (26415 17242 549092 330000) 0 nil])
([nil nil ((406 . 416) (#("win" 0 3 (fontified nil)) . -406) (406 . 409) (#("win_reward" 0 10 (fontified nil)) . -406) (406 . 416) (#("win_re" 0 6 (fontified t)) . -406) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) 412) nil (26415 17242 549091 248000) 0 nil])
([nil nil ((416 . 425)) nil (26415 17242 549089 334000) 0 nil])
([nil nil ((425 . 430)) nil (26415 17242 549088 923000) 0 nil])
([nil nil ((430 . 448)) nil (26415 17242 549088 422000) 0 nil])
([nil nil ((444 . 455) (#("los" 0 3 (fontified nil)) . -444) (444 . 447) (#("loss_reward" 0 11 (fontified nil)) . -444) (444 . 455) (#("loss" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -444) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) 448) nil (26415 17242 549087 180000) 0 nil])
([nil nil ((455 . 464)) nil (26415 17242 549074 316000) 0 nil])
([nil nil ((464 . 485)) nil (26415 17242 549073 655000) 0 nil])
([nil nil ((485 . 486)) nil (26415 17242 549073 134000) 0 nil])
([nil nil ((486 . 487)) nil (26415 17242 549072 392000) 0 nil])
([nil nil ((483 . 494) (#("dra" 0 3 (fontified nil)) . -483) (483 . 486) (#("draw_reward" 0 11 (fontified nil)) . -483) (483 . 494) (#("draw" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -483) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) 487) nil (26415 17242 549067 463000) 0 nil])
([nil nil ((1511 . 1523) (#("            " 0 12 (fontified nil)) . 1510) (undo-tree-id197 . -12) (1509 . 1523) (t 26415 17242 549806 858000)) nil (26415 18205 779651 939000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1519) (undo-tree-id196 . -4) 1523) nil (26415 18205 779649 394000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1515) (undo-tree-id195 . -4) 1519) nil (26415 18205 779648 362000) 0 nil])
([nil nil ((1515 . 1535)) nil (26415 18205 779647 821000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1534) (undo-tree-id194 . -1) 1535) nil (26415 18205 779647 430000) 0 nil])
([nil nil ((1534 . 1548)) nil (26415 18205 779646 659000) 0 nil])
([nil nil ((1548 . 1549)) nil (26415 18205 779646 308000) 0 nil])
([nil nil ((1549 . 1562)) nil (26415 18205 779645 987000) 0 nil])
([nil nil ((1562 . 1563)) nil (26415 18205 779645 807000) 0 nil])
([nil nil ((1563 . 1572)) nil (26415 18205 779645 557000) 0 nil])
([nil nil ((1572 . 1575)) nil (26415 18205 779645 226000) 0 nil])
([nil nil ((1575 . 1584)) nil (26415 18205 779644 785000) 0 nil])
([nil nil ((1584 . 1593)) nil (26415 18205 779644 505000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -1592) (undo-tree-id193 . -1) 1593) nil (26415 18205 779644 144000) 0 nil])
([nil nil ((1592 . 1602)) nil (26415 18205 779643 593000) 0 nil])
([nil nil ((1602 . 1603)) nil (26415 18205 779643 443000) 0 nil])
([nil nil ((1603 . 1613)) nil (26415 18205 779643 62000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t)) . -1612) (undo-tree-id192 . -1) 1613) nil (26415 18205 779642 661000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -1608) (undo-tree-id188 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1609) (undo-tree-id189 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -1610) (undo-tree-id190 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -1611) (undo-tree-id191 . -1) 1612) nil (26415 18205 779641 299000) 0 nil])
([nil nil ((1608 . 1615)) nil (26415 18205 779564 904000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -1612) (undo-tree-id185 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -1613) (undo-tree-id186 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1614) (undo-tree-id187 . -1) 1615) nil (26415 18205 779564 213000) 0 nil])
([nil nil ((1612 . 1630)) nil (26415 18205 779562 971000) 0 nil])
([nil nil ((1630 . 1639)) nil (26415 18205 779562 630000) 0 nil])
([nil nil ((1639 . 1640)) nil (26415 18205 779562 159000) 0 nil])
([nil nil ((1640 . 1657)) nil (26415 18205 779561 909000) 0 nil])
([nil nil ((1657 . 1658)) nil (26415 18205 779561 378000) 0 nil])
([nil nil ((1658 . 1678)) nil (26415 18205 779561 27000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -1676) (undo-tree-id183 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -1677) (undo-tree-id184 . -1) 1678) nil (26415 18205 779560 466000) 0 nil])
([nil nil ((1676 . 1677)) nil (26415 18205 779559 284000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -1676) (undo-tree-id182 . -1) 1677) nil (26415 18205 779558 863000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 1675) (undo-tree-id181 . -1) 1676) nil (26415 18205 779558 82000) 0 nil])
([nil nil ((1675 . 1676)) nil (26415 18205 779557 110000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -1673) (undo-tree-id178 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -1674) (undo-tree-id179 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -1675) (undo-tree-id180 . -1) 1676) nil (26415 18205 779556 469000) 0 nil])
([nil nil ((1673 . 1674)) nil (26415 18205 779555 186000) 0 nil])
([nil nil ((1674 . 1695)) nil (26415 18205 779554 585000) 0 nil])
([nil nil ((1695 . 1700)) nil (26415 18205 779554 234000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . -1698) (undo-tree-id176 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1699) (undo-tree-id177 . -1) 1700) nil (26415 18205 779553 543000) 0 nil])
([nil nil ((1698 . 1702)) nil (26415 18205 779550 928000) 0 nil])
([nil nil ((1702 . 1711)) nil (26415 18205 779550 367000) 0 nil])
([nil nil ((1711 . 1714)) nil (26415 18205 779550 6000) 0 nil])
([nil nil ((1714 . 1723)) nil (26415 18205 779549 546000) 0 nil])
([nil nil ((1723 . 1741)) nil (26415 18205 779549 275000) 0 nil])
([nil nil ((1741 . 1745)) nil (26415 18205 779548 634000) 0 nil])
([nil nil ((#("t" 0 1 (face py-builtins-face fontified t)) . -1743) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("," 0 1 (fontified t)) . -1744) (undo-tree-id175 . -1) 1745) nil (26415 18205 779547 522000) 0 nil])
([nil nil ((1743 . 1745)) nil (26415 18205 779523 516000) 0 nil])
([nil nil ((1745 . 1754) (t 26415 18205 782495 8000)) nil (26415 18268 505888 528000) 0 nil])
([nil nil ((1754 . 1775)) nil (26415 18268 505888 237000) 0 nil])
([nil nil ((1775 . 1779)) nil (26415 18268 505887 866000) 0 nil])
([nil nil ((1774 . 1787) (#("ca" 0 2 (fontified nil)) . -1774) (1774 . 1776) (#("calculateHand" 0 13 (fontified nil)) . -1774) (1774 . 1787) (#("calcu" 0 5 (fontified t)) . -1774) (undo-tree-id238 . -5) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -5) 1779) nil (26415 18268 505887 125000) 0 nil])
([nil nil ((1787 . 1789)) nil (26415 18268 505884 430000) 0 nil])
([nil nil ((1789 . 1798)) nil (26415 18268 505884 109000) 0 nil])
([nil nil ((1798 . 1799)) nil (26415 18268 505883 628000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1798) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 1799) nil (26415 18268 505883 288000) 0 nil])
([nil nil ((1798 . 1806)) nil (26415 18268 505881 935000) 0 nil])
([nil nil ((1806 . 1815)) nil (26415 18268 505881 655000) 0 nil])
([nil nil ((1807 . 1819) (#("cur" 0 3 (fontified nil)) . -1807) (1807 . 1810) (#("current_hand" 0 12 (fontified nil)) . -1807) (1807 . 1819) (#("current_" 0 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1807) (undo-tree-id230 . -8) (undo-tree-id231 . -8) (undo-tree-id232 . -8) (undo-tree-id233 . -8) 1815) nil (26415 18268 505880 913000) 0 nil])
([nil nil ((1819 . 1827)) nil (26415 18268 505879 310000) 0 nil])
([nil nil ((1821 . 1832) (#("dea" 0 3 (fontified nil)) . -1821) (1821 . 1824) (#("dealer_hand" 0 11 (fontified nil)) . -1821) (1821 . 1832) (#("dealer" 0 6 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -1821) (undo-tree-id226 . -6) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) 1827) nil (26415 18268 505878 368000) 0 nil])
([nil nil ((1832 . 1833)) nil (26415 18268 505876 555000) 0 nil])
([nil nil ((1833 . 1842)) nil (26415 18268 505876 274000) 0 nil])
([nil nil ((1842 . 1857)) nil (26415 18268 505875 984000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1855) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1856) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 1857) nil (26415 18268 505875 363000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1854) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) 1855) nil (26415 18268 505871 385000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1853) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) 1854) nil (26415 18268 505869 211000) 0 nil])
([nil nil ((1853 . 1857)) nil (26415 18268 505866 666000) 0 nil])
([nil nil ((1857 . 1863)) nil (26415 18268 505866 386000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1861) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1862) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 1863) nil (26415 18268 505865 815000) 0 nil])
([nil nil ((1861 . 1864)) nil (26415 18268 505863 601000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1863) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 1864) nil (26415 18268 505863 40000) 0 nil])
([nil nil ((1863 . 1869)) nil (26415 18268 505860 344000) 0 nil])
([nil nil ((1869 . 1870)) nil (26415 18268 505860 94000) 0 nil])
([nil nil ((1870 . 1883)) nil (26415 18268 505859 833000) 0 nil])
([nil nil ((1883 . 1900)) nil (26415 18268 505859 523000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1898) (undo-tree-id198 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1899) (undo-tree-id199 . -1) 1900) nil (26415 18268 505858 661000) 0 nil])
([nil nil ((1898 . 1908)) nil (26415 18268 505846 408000) 0 nil])
([nil nil ((2037 . 2046) (t 26415 18268 508187 729000)) nil (26415 18298 497228 957000) 0 nil])
([nil nil ((2046 . 2062)) nil (26415 18298 497227 905000) 0 nil])
([nil nil ((290 . 299)) nil (26415 18298 497227 193000) 0 nil])
([nil nil ((299 . 303)) nil (26415 18298 497226 352000) 0 nil])
([nil nil ((303 . 315)) nil (26415 18298 497221 222000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -237) (undo-tree-id614 . -1) (undo-tree-id615 . -1) 238 (t 26415 18298 500519 606000)) nil (26415 18354 994932 611000) 0 nil])
([nil nil ((#("H" 0 1 (face py-def-face fontified t)) . -1947) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (#("a" 0 1 (face py-def-face fontified t)) . -1948) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (#("n" 0 1 (face py-def-face fontified t)) . -1949) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (#("d" 0 1 (face py-def-face fontified t)) . -1950) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) 1951) nil (26415 18354 994924 455000) 0 nil])
([nil nil ((1533 . 1546) (t 26415 18354 997158 509000)) nil (26415 18426 656645 937000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1542) (undo-tree-id883 . -4) 1546) nil (26415 18426 656644 965000) 0 nil])
([nil nil ((1542 . 1555)) nil (26415 18426 656643 812000) 0 nil])
([nil nil ((1549 . 1555) (#("act" 0 3 (fontified nil)) . -1549) (1549 . 1552) (#("action" 0 6 (fontified t)) . -1549) (undo-tree-id616 . -6) (undo-tree-id617 . -6) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) (undo-tree-id651 . -2) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -2) (undo-tree-id657 . -2) (undo-tree-id658 . -2) (undo-tree-id659 . -2) (undo-tree-id660 . -2) (undo-tree-id661 . -2) (undo-tree-id662 . -2) (undo-tree-id663 . -2) (undo-tree-id664 . -2) (undo-tree-id665 . -2) (undo-tree-id666 . -2) (undo-tree-id667 . -2) (undo-tree-id668 . -2) (undo-tree-id669 . -2) (undo-tree-id670 . -2) (undo-tree-id671 . -2) (undo-tree-id672 . -2) (undo-tree-id673 . -2) (undo-tree-id674 . -2) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (undo-tree-id684 . -3) (undo-tree-id685 . -3) (undo-tree-id686 . -3) (undo-tree-id687 . -3) (undo-tree-id688 . -3) (undo-tree-id689 . -3) (undo-tree-id690 . -3) (undo-tree-id691 . -3) (undo-tree-id692 . -3) (undo-tree-id693 . -3) (undo-tree-id694 . -3) (undo-tree-id695 . -3) (undo-tree-id696 . -3) (undo-tree-id697 . -3) (undo-tree-id698 . -3) (undo-tree-id699 . -3) (undo-tree-id700 . -3) (undo-tree-id701 . -3) (undo-tree-id702 . -3) (undo-tree-id703 . -3) (undo-tree-id704 . -3) (undo-tree-id705 . -3) (undo-tree-id706 . -3) (undo-tree-id707 . -3) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -5) (undo-tree-id726 . -5) (undo-tree-id727 . -5) (undo-tree-id728 . -5) (undo-tree-id729 . -5) (undo-tree-id730 . -5) (undo-tree-id731 . -5) (undo-tree-id732 . -5) (undo-tree-id733 . -5) (undo-tree-id734 . -5) (undo-tree-id735 . -5) (undo-tree-id736 . -5) (undo-tree-id737 . -5) (undo-tree-id738 . -5) (undo-tree-id739 . -5) (undo-tree-id740 . -5) (undo-tree-id741 . -5) (undo-tree-id742 . -5) (undo-tree-id743 . -5) (undo-tree-id744 . -5) (undo-tree-id745 . -5) (undo-tree-id746 . -5) (undo-tree-id747 . -6) (undo-tree-id748 . -6) (undo-tree-id749 . -6) (undo-tree-id750 . -6) (undo-tree-id751 . -6) (undo-tree-id752 . -6) (undo-tree-id753 . -6) (undo-tree-id754 . -6) (undo-tree-id755 . -6) (undo-tree-id756 . -6) (undo-tree-id757 . -6) (undo-tree-id758 . -6) (undo-tree-id759 . -6) (undo-tree-id760 . -6) (undo-tree-id761 . -6) (undo-tree-id762 . -6) (undo-tree-id763 . -6) (undo-tree-id764 . -6) (undo-tree-id765 . -6) (undo-tree-id766 . -6) (undo-tree-id767 . -6) (undo-tree-id768 . -6) (undo-tree-id769 . -6) (undo-tree-id770 . -6) (undo-tree-id771 . -6) (undo-tree-id772 . -6) (undo-tree-id773 . -6) (undo-tree-id774 . -6) (undo-tree-id775 . -6) (undo-tree-id776 . -6) (undo-tree-id777 . -6) (undo-tree-id778 . -6) (undo-tree-id779 . -6) (undo-tree-id780 . -6) (undo-tree-id781 . -6) (undo-tree-id782 . -6) (undo-tree-id783 . -6) (undo-tree-id784 . -6) (undo-tree-id785 . -6) (undo-tree-id786 . -6) (undo-tree-id787 . -6) (undo-tree-id788 . -6) (undo-tree-id789 . -6) (undo-tree-id790 . -6) (undo-tree-id791 . -6) (undo-tree-id792 . -6) (undo-tree-id793 . -6) (undo-tree-id794 . -6) (undo-tree-id795 . -6) (undo-tree-id796 . -6) (undo-tree-id797 . -6) (undo-tree-id798 . -6) (undo-tree-id799 . -6) (undo-tree-id800 . -6) (undo-tree-id801 . -6) (undo-tree-id802 . -6) (undo-tree-id803 . -6) (undo-tree-id804 . -6) (undo-tree-id805 . -6) (undo-tree-id806 . -6) (undo-tree-id807 . -6) (undo-tree-id808 . -6) (undo-tree-id809 . -6) (undo-tree-id810 . -6) (undo-tree-id811 . -6) (undo-tree-id812 . -6) (undo-tree-id813 . -6) (undo-tree-id814 . -6) (undo-tree-id815 . -6) (undo-tree-id816 . -6) (undo-tree-id817 . -6) (undo-tree-id818 . -6) (undo-tree-id819 . -6) (undo-tree-id820 . -6) (undo-tree-id821 . -6) (undo-tree-id822 . -6) (undo-tree-id823 . -6) (undo-tree-id824 . -6) (undo-tree-id825 . -6) (undo-tree-id826 . -6) (undo-tree-id827 . -6) (undo-tree-id828 . -6) (undo-tree-id829 . -6) (undo-tree-id830 . -6) (undo-tree-id831 . -6) (undo-tree-id832 . -6) (undo-tree-id833 . -6) (undo-tree-id834 . -6) (undo-tree-id835 . -6) (undo-tree-id836 . -6) (undo-tree-id837 . -6) (undo-tree-id838 . -6) (undo-tree-id839 . -6) (undo-tree-id840 . -6) (undo-tree-id841 . -6) (undo-tree-id842 . -6) (undo-tree-id843 . -6) (undo-tree-id844 . -6) (undo-tree-id845 . -6) (undo-tree-id846 . -6) (undo-tree-id847 . -6) (undo-tree-id848 . -6) (undo-tree-id849 . -6) (undo-tree-id850 . -6) (undo-tree-id851 . -6) (undo-tree-id852 . -6) (undo-tree-id853 . -6) (undo-tree-id854 . -6) (undo-tree-id855 . -6) (undo-tree-id856 . -6) (undo-tree-id857 . -6) (undo-tree-id858 . -6) (undo-tree-id859 . -6) (undo-tree-id860 . -6) (undo-tree-id861 . -6) (undo-tree-id862 . -6) (undo-tree-id863 . -6) (undo-tree-id864 . -6) (undo-tree-id865 . -6) (undo-tree-id866 . -6) (undo-tree-id867 . -6) (undo-tree-id868 . -6) (undo-tree-id869 . -6) (undo-tree-id870 . -6) (undo-tree-id871 . -6) (undo-tree-id872 . -6) (undo-tree-id873 . -6) (undo-tree-id874 . -6) (undo-tree-id875 . -6) (undo-tree-id876 . -6) (undo-tree-id877 . -6) (undo-tree-id878 . -6) (undo-tree-id879 . -6) (undo-tree-id880 . -6) (undo-tree-id881 . -6) (undo-tree-id882 . -6) 1555) nil (26415 18426 656637 611000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -1142) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (#("o" 0 1 (fontified t)) . -1143) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (#("n" 0 1 (fontified t)) . -1144) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (#("e" 0 1 (face py-pseudo-keyword-face fontified t)) . -1145) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) 1146 (t 26415 18426 659381 514000)) nil (26415 18441 725569 978000) 0 nil])
([nil nil ((1142 . 1143)) nil (26415 18441 725532 798000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -1142) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) 1143) nil (26415 18441 725531 796000) 0 nil])
([nil nil ((1142 . 1148)) nil (26415 18441 725529 211000) 0 nil])
([nil nil ((1142 . 1148) (#("act" 0 3 (fontified nil)) . -1142) (1142 . 1145) (#("Action" 0 6 (fontified nil)) . -1142) (1142 . 1148) (#("action" 0 6 (fontified t)) . -1142) (undo-tree-id884 . -6) (undo-tree-id885 . -6) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -2) (undo-tree-id894 . -2) (undo-tree-id895 . -2) (undo-tree-id896 . -2) (undo-tree-id897 . -2) (undo-tree-id898 . -2) (undo-tree-id899 . -2) (undo-tree-id900 . -2) (undo-tree-id901 . -2) (undo-tree-id902 . -2) (undo-tree-id903 . -2) (undo-tree-id904 . -2) (undo-tree-id905 . -2) (undo-tree-id906 . -2) (undo-tree-id907 . -2) (undo-tree-id908 . -2) (undo-tree-id909 . -2) (undo-tree-id910 . -2) (undo-tree-id911 . -2) (undo-tree-id912 . -2) (undo-tree-id913 . -2) (undo-tree-id914 . -2) (undo-tree-id915 . -2) (undo-tree-id916 . -2) (undo-tree-id917 . -2) (undo-tree-id918 . -2) (undo-tree-id919 . -2) (undo-tree-id920 . -2) (undo-tree-id921 . -2) (undo-tree-id922 . -2) (undo-tree-id923 . -2) (undo-tree-id924 . -2) (undo-tree-id925 . -2) (undo-tree-id926 . -2) (undo-tree-id927 . -3) (undo-tree-id928 . -3) (undo-tree-id929 . -3) (undo-tree-id930 . -3) (undo-tree-id931 . -3) (undo-tree-id932 . -3) (undo-tree-id933 . -3) (undo-tree-id934 . -3) (undo-tree-id935 . -3) (undo-tree-id936 . -3) (undo-tree-id937 . -3) (undo-tree-id938 . -3) (undo-tree-id939 . -3) (undo-tree-id940 . -3) (undo-tree-id941 . -3) (undo-tree-id942 . -3) (undo-tree-id943 . -3) (undo-tree-id944 . -3) (undo-tree-id945 . -3) (undo-tree-id946 . -3) (undo-tree-id947 . -3) (undo-tree-id948 . -3) (undo-tree-id949 . -3) (undo-tree-id950 . -3) (undo-tree-id951 . -3) (undo-tree-id952 . -3) (undo-tree-id953 . -3) (undo-tree-id954 . -3) (undo-tree-id955 . -3) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -5) (undo-tree-id974 . -5) (undo-tree-id975 . -5) (undo-tree-id976 . -5) (undo-tree-id977 . -5) (undo-tree-id978 . -5) (undo-tree-id979 . -5) (undo-tree-id980 . -5) (undo-tree-id981 . -5) (undo-tree-id982 . -5) (undo-tree-id983 . -5) (undo-tree-id984 . -5) (undo-tree-id985 . -5) (undo-tree-id986 . -5) (undo-tree-id987 . -5) (undo-tree-id988 . -5) (undo-tree-id989 . -5) (undo-tree-id990 . -5) (undo-tree-id991 . -5) (undo-tree-id992 . -5) (undo-tree-id993 . -5) (undo-tree-id994 . -5) (undo-tree-id995 . -6) (undo-tree-id996 . -6) (undo-tree-id997 . -6) (undo-tree-id998 . -6) (undo-tree-id999 . -6) (undo-tree-id1000 . -6) (undo-tree-id1001 . -6) (undo-tree-id1002 . -6) (undo-tree-id1003 . -6) (undo-tree-id1004 . -6) (undo-tree-id1005 . -6) (undo-tree-id1006 . -6) (undo-tree-id1007 . -6) (undo-tree-id1008 . -6) (undo-tree-id1009 . -6) (undo-tree-id1010 . -6) (undo-tree-id1011 . -6) (undo-tree-id1012 . -6) (undo-tree-id1013 . -6) (undo-tree-id1014 . -6) (undo-tree-id1015 . -6) (undo-tree-id1016 . -6) (undo-tree-id1017 . -6) (undo-tree-id1018 . -6) (undo-tree-id1019 . -6) (undo-tree-id1020 . -6) (undo-tree-id1021 . -6) (undo-tree-id1022 . -6) (undo-tree-id1023 . -6) (undo-tree-id1024 . -6) (undo-tree-id1025 . -6) (undo-tree-id1026 . -6) (undo-tree-id1027 . -6) (undo-tree-id1028 . -6) (undo-tree-id1029 . -6) (undo-tree-id1030 . -6) (undo-tree-id1031 . -6) (undo-tree-id1032 . -6) (undo-tree-id1033 . -6) (undo-tree-id1034 . -6) (undo-tree-id1035 . -6) (undo-tree-id1036 . -6) (undo-tree-id1037 . -6) 1148) nil (26415 18441 725524 402000) 0 nil])
([nil nil ((1958 . 1970) (#("            " 0 12 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1957) (undo-tree-id1098 . -12) (1956 . 1970) (t 26415 18441 728632 272000)) nil (26415 18613 859066 201000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1966) (undo-tree-id1097 . -4) 1970) nil (26415 18613 859065 430000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1962) (undo-tree-id1096 . -4) 1966) nil (26415 18613 859064 678000) 0 nil])
([nil nil ((1962 . 1983)) nil (26415 18613 859064 97000) 0 nil])
([nil nil ((1983 . 1985)) nil (26415 18613 859063 847000) 0 nil])
([nil nil ((1985 . 1992)) nil (26415 18613 859063 466000) 0 nil])
([nil nil ((1991 . 1992)) nil (26415 18613 859063 185000) 0 nil])
([nil nil ((1992 . 1996)) nil (26415 18613 859062 905000) 0 nil])
([nil nil ((1997 . 2000)) nil (26415 18613 859062 644000) 0 nil])
([nil nil ((#("_" 0 1 (face py-builtins-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1998) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1999) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) 2000) nil (26415 18613 859061 963000) 0 nil])
([nil nil ((1998 . 2005)) nil (26415 18613 859056 813000) 0 nil])
([nil nil ((2005 . 2006)) nil (26415 18613 859056 403000) 0 nil])
([nil nil ((2006 . 2015)) nil (26415 18613 859056 132000) 0 nil])
([nil nil ((2015 . 2018)) nil (26415 18613 859055 551000) 0 nil])
([nil nil ((2018 . 2027)) nil (26415 18613 859055 301000) 0 nil])
([nil nil ((2027 . 2038)) nil (26415 18613 859055 30000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2037) (undo-tree-id1085 . -1) 2038) nil (26415 18613 859054 609000) 0 nil])
([nil nil ((2037 . 2058)) nil (26415 18613 859054 48000) 0 nil])
([nil nil ((2058 . 2072)) nil (26415 18613 859053 748000) 0 nil])
([nil nil ((2072 . 2092)) nil (26415 18613 859053 497000) 0 nil])
([nil nil ((2092 . 2113)) nil (26415 18613 859053 207000) 0 nil])
([nil nil ((2113 . 2124)) nil (26415 18613 859052 936000) 0 nil])
([nil nil ((2124 . 2133)) nil (26415 18613 859052 686000) 0 nil])
([nil nil ((2133 . 2134)) nil (26415 18613 859052 425000) 0 nil])
([nil nil ((2134 . 2143)) nil (26415 18613 859052 44000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2142) (undo-tree-id1084 . -1) 2143) nil (26415 18613 859051 674000) 0 nil])
([nil nil ((2142 . 2149)) nil (26415 18613 859051 42000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2148) (undo-tree-id1083 . -1) 2149) nil (26415 18613 859050 632000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2147) (undo-tree-id1082 . -1) 2148) nil (26415 18613 859049 790000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2146) (undo-tree-id1081 . -1) 2147) nil (26415 18613 859049 19000) 0 nil])
([nil nil ((2146 . 2147)) nil (26415 18613 859048 347000) 0 nil])
([nil nil ((2147 . 2152)) nil (26415 18613 859048 17000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2151) 2152) nil (26415 18613 859047 626000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2150) (undo-tree-id1080 . -1) 2151) nil (26415 18613 859047 5000) 0 nil])
([nil nil ((2150 . 2152)) nil (26415 18613 859046 364000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2151) (undo-tree-id1079 . -1) 2152) nil (26415 18613 859045 652000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2148) (undo-tree-id1076 . -1) (#("h" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2149) (undo-tree-id1077 . -1) (#("e" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2150) (undo-tree-id1078 . -1) 2151) nil (26415 18613 859044 500000) 0 nil])
([nil nil ((2148 . 2155)) nil (26415 18613 859043 128000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2154) (undo-tree-id1075 . -1) 2155) nil (26415 18613 859042 717000) 0 nil])
([nil nil ((2154 . 2160)) nil (26415 18613 859042 146000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2159) (undo-tree-id1074 . -1) 2160) nil (26415 18613 859041 715000) 0 nil])
([nil nil ((2159 . 2160)) nil (26415 18613 859041 54000) 0 nil])
([nil nil ((2160 . 2175)) nil (26415 18613 859040 773000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2174) (undo-tree-id1073 . -1) 2175) nil (26415 18613 859040 292000) 0 nil])
([nil nil ((2174 . 2191)) nil (26415 18613 859039 581000) 0 nil])
([nil nil ((2191 . 2200)) nil (26415 18613 859039 300000) 0 nil])
([nil nil ((2200 . 2203)) nil (26415 18613 859039 0) 0 nil])
([nil nil ((2203 . 2212)) nil (26415 18613 859038 719000) 0 nil])
([nil nil ((2212 . 2216)) nil (26415 18613 859037 868000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2215) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) 2216) nil (26415 18613 859037 176000) 0 nil])
([nil nil ((2215 . 2216)) nil (26415 18613 859035 563000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2215) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 2216) nil (26415 18613 859035 72000) 0 nil])
([nil nil ((2204 . 2212) (#("        " 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2204) (undo-tree-id1066 . -8)) nil (26415 18613 859032 798000) 0 nil])
([nil nil ((2212 . 2213)) nil (26415 18613 859032 17000) 0 nil])
([nil nil ((2213 . 2214)) nil (26415 18613 859031 636000) 0 nil])
([nil nil ((2217 . 2231)) nil (26415 18613 859030 764000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2226) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2227) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2228) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2229) (undo-tree-id1064 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2230) (undo-tree-id1065 . -1) 2231) nil (26415 18613 859029 662000) 0 nil])
([nil nil ((2226 . 2232)) nil (26415 18613 859021 196000) 0 nil])
([nil nil ((2232 . 2251)) nil (26415 18613 859020 845000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2249) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2250) (undo-tree-id1054 . -1) 2251) nil (26415 18613 859020 124000) 0 nil])
([nil nil ((2249 . 2258)) nil (26415 18613 859017 389000) 0 nil])
([nil nil ((2258 . 2267)) nil (26415 18613 859017 138000) 0 nil])
([nil nil ((2267 . 2268)) nil (26415 18613 859016 698000) 0 nil])
([nil nil ((2268 . 2289)) nil (26415 18613 859016 467000) 0 nil])
([nil nil ((2289 . 2296)) nil (26415 18613 859016 187000) 0 nil])
([nil nil ((2296 . 2305)) nil (26415 18613 859015 906000) 0 nil])
([nil nil ((2305 . 2306)) nil (26415 18613 859015 626000) 0 nil])
([nil nil ((2306 . 2319)) nil (26415 18613 859015 345000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2318) (undo-tree-id1050 . -1) 2319) nil (26415 18613 859014 644000) 0 nil])
([nil nil ((2318 . 2323)) nil (26415 18613 859002 220000) 0 nil])
([nil nil ((2323 . 2332) (t 26415 18613 862362 521000)) nil (26415 18661 558885 848000) 0 nil])
([nil nil ((2332 . 2333)) nil (26415 18661 558885 517000) 0 nil])
([nil nil ((2333 . 2337)) nil (26415 18661 558885 136000) 0 nil])
([nil nil ((2337 . 2338)) nil (26415 18661 558884 846000) 0 nil])
([nil nil ((2338 . 2359)) nil (26415 18661 558884 345000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2358) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) 2359) nil (26415 18661 558883 934000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2357) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) 2358) nil (26415 18661 558882 391000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2356) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) 2357) nil (26415 18661 558880 247000) 0 nil])
([nil nil ((2356 . 2370)) nil (26415 18661 558876 891000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2369) (undo-tree-id1104 . -1) 2370) nil (26415 18661 558876 129000) 0 nil])
([nil nil ((2369 . 2370)) nil (26415 18661 558874 927000) 0 nil])
([nil nil ((314 . 323)) nil (26415 18661 558874 276000) 0 nil])
([nil nil ((323 . 344)) nil (26415 18661 558873 685000) 0 nil])
([nil nil ((344 . 345)) nil (26415 18661 558872 993000) 0 nil])
([nil nil ((1566 . 1579)) nil (26415 18661 558872 372000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1575) (undo-tree-id1103 . -4) 1579) nil (26415 18661 558871 581000) 0 nil])
([nil nil ((1575 . 1587)) nil (26415 18661 558869 907000) 0 nil])
([nil nil ((1580 . 1592) (#("st" 0 2 (fontified nil)) . -1580) (1580 . 1582) (#("stateActions" 0 12 (fontified nil)) . -1580) (1580 . 1592) (#("stateAc" 0 7 (fontified t)) . -1580) (undo-tree-id1099 . -7) (undo-tree-id1100 . -7) (undo-tree-id1101 . -7) (undo-tree-id1102 . -7) 1587) nil (26415 18661 558868 535000) 0 nil])
([nil nil ((1592 . 1607)) nil (26415 18661 558853 617000) 0 nil])
([nil nil ((1607 . 1608) (t 26415 18661 561081 604000)) nil (26415 18676 564979 103000) 0 nil])
([nil nil ((1608 . 1609)) nil (26415 18676 564978 572000) 0 nil])
([nil nil ((1609 . 1617)) nil (26415 18676 564978 181000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1615) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1616) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) 1617) nil (26415 18676 564977 480000) 0 nil])
([nil nil ((1615 . 1636)) nil (26415 18676 564965 838000) 0 nil])
([nil nil ((1636 . 1643)) nil (26415 18676 564965 116000) 0 nil])
([nil nil ((1643 . 1651)) nil (26415 18676 564960 457000) 0 nil])
([nil nil ((#("        #NOTE: need to track the actions taken" 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 8 46 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2440) (undo-tree-id1120 . -38) (undo-tree-id1121 . -38) (undo-tree-id1122 . -38) (undo-tree-id1123 . -38) (undo-tree-id1124 . -38) (undo-tree-id1125 . -38) (undo-tree-id1126 . -38) (undo-tree-id1127 . -38) (undo-tree-id1128 . -38) (undo-tree-id1129 . -38) (undo-tree-id1130 . -38) (undo-tree-id1131 . -38) (undo-tree-id1132 . -38) (undo-tree-id1133 . -38) (undo-tree-id1134 . -38) (undo-tree-id1135 . -38) (undo-tree-id1136 . -38) (undo-tree-id1137 . -38) (undo-tree-id1138 . -38) (undo-tree-id1139 . -38) (undo-tree-id1140 . -38) (undo-tree-id1141 . -38) (undo-tree-id1142 . -38) (undo-tree-id1143 . -38) (undo-tree-id1144 . -38) (undo-tree-id1145 . -38) (undo-tree-id1146 . -38) (undo-tree-id1147 . -38) (undo-tree-id1148 . -38) (undo-tree-id1149 . -38) (undo-tree-id1150 . -38) (undo-tree-id1151 . -38) (undo-tree-id1152 . -38) (undo-tree-id1153 . -38) (undo-tree-id1154 . -38) (undo-tree-id1155 . -38) (undo-tree-id1156 . -38) (undo-tree-id1157 . -38) (undo-tree-id1158 . -38) (undo-tree-id1159 . -38) (undo-tree-id1160 . -46) (t 26415 18676 568304 971000)) nil (26415 18681 255842 575000) 0 nil])
([nil nil ((2590 . 2599) (t 26415 18681 259374 523000)) nil (26415 19831 860008 433000) 0 nil])
([nil nil ((2599 . 2609)) nil (26415 19831 860008 52000) 0 nil])
([nil nil ((2604 . 2616) (#("st" 0 2 (fontified nil)) . -2604) (2604 . 2606) (#("stateActions" 0 12 (fontified nil)) . -2604) (2604 . 2616) (#("state" 0 5 (fontified t)) . -2604) (undo-tree-id1161 . -5) (undo-tree-id1162 . -5) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -2) (undo-tree-id1192 . -2) (undo-tree-id1193 . -2) (undo-tree-id1194 . -2) (undo-tree-id1195 . -2) (undo-tree-id1196 . -2) (undo-tree-id1197 . -2) (undo-tree-id1198 . -2) (undo-tree-id1199 . -2) (undo-tree-id1200 . -2) (undo-tree-id1201 . -2) (undo-tree-id1202 . -2) (undo-tree-id1203 . -2) (undo-tree-id1204 . -2) (undo-tree-id1205 . -2) (undo-tree-id1206 . -2) (undo-tree-id1207 . -2) (undo-tree-id1208 . -2) (undo-tree-id1209 . -2) (undo-tree-id1210 . -2) (undo-tree-id1211 . -2) (undo-tree-id1212 . -2) (undo-tree-id1213 . -2) (undo-tree-id1214 . -3) (undo-tree-id1215 . -3) (undo-tree-id1216 . -3) (undo-tree-id1217 . -3) (undo-tree-id1218 . -3) (undo-tree-id1219 . -3) (undo-tree-id1220 . -3) (undo-tree-id1221 . -3) (undo-tree-id1222 . -3) (undo-tree-id1223 . -3) (undo-tree-id1224 . -3) (undo-tree-id1225 . -3) (undo-tree-id1226 . -3) (undo-tree-id1227 . -3) (undo-tree-id1228 . -3) (undo-tree-id1229 . -3) (undo-tree-id1230 . -3) (undo-tree-id1231 . -3) (undo-tree-id1232 . -3) (undo-tree-id1233 . -3) (undo-tree-id1234 . -3) (undo-tree-id1235 . -3) (undo-tree-id1236 . -3) (undo-tree-id1237 . -3) (undo-tree-id1238 . -3) (undo-tree-id1239 . -3) (undo-tree-id1240 . -3) (undo-tree-id1241 . -3) (undo-tree-id1242 . -3) (undo-tree-id1243 . -3) (undo-tree-id1244 . -3) (undo-tree-id1245 . -3) (undo-tree-id1246 . -3) (undo-tree-id1247 . -3) (undo-tree-id1248 . -3) (undo-tree-id1249 . -3) (undo-tree-id1250 . -3) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -5) (undo-tree-id1269 . -5) (undo-tree-id1270 . -5) (undo-tree-id1271 . -5) (undo-tree-id1272 . -5) (undo-tree-id1273 . -5) (undo-tree-id1274 . -5) (undo-tree-id1275 . -5) (undo-tree-id1276 . -5) (undo-tree-id1277 . -5) (undo-tree-id1278 . -5) (undo-tree-id1279 . -5) (undo-tree-id1280 . -5) (undo-tree-id1281 . -5) (undo-tree-id1282 . -5) (undo-tree-id1283 . -5) (undo-tree-id1284 . -5) (undo-tree-id1285 . -5) (undo-tree-id1286 . -5) (undo-tree-id1287 . -5) (undo-tree-id1288 . -5) (undo-tree-id1289 . -5) (undo-tree-id1290 . -5) (undo-tree-id1291 . -5) (undo-tree-id1292 . -5) (undo-tree-id1293 . -5) (undo-tree-id1294 . -5) (undo-tree-id1295 . -5) (undo-tree-id1296 . -5) (undo-tree-id1297 . -5) 2609) nil (26415 19831 860005 687000) 0 nil])
([nil nil ((2616 . 2621)) nil (26415 19831 859943 670000) 0 nil])
([nil nil ((#("  # for state in states and action in actions...
        # construct state action pair
        # update policy..." 0 2 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2 4 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 4 49 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 49 57 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 57 87 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 87 95 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 95 113 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2326) (undo-tree-id1313 . -113) (undo-tree-id1314 . -113) (t 26415 19831 863379 95000)) nil (26415 19940 949243 635000) 0 nil])
([nil nil ((2320 . 2328) (#("      " 0 6 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2320) (undo-tree-id1310 . -6) (undo-tree-id1311 . -6) (undo-tree-id1312 . -6) 2326) nil (26415 19940 949241 992000) 0 nil])
([nil nil ((2328 . 2345)) nil (26415 19940 949240 660000) 0 nil])
([nil nil ((2345 . 2349)) nil (26415 19940 949240 429000) 0 nil])
([nil nil ((2349 . 2370)) nil (26415 19940 949240 279000) 0 nil])
([nil nil ((2370 . 2376)) nil (26415 19940 949239 908000) 0 nil])
([nil nil ((2371 . 2383) (#("st" 0 2 (fontified nil)) . -2371) (2371 . 2373) (#("stateActions" 0 12 (fontified nil)) . -2371) (2371 . 2383) (#("state" 0 5 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2371) (undo-tree-id1306 . -5) (undo-tree-id1307 . -5) (undo-tree-id1308 . -5) (undo-tree-id1309 . -5) 2376) nil (26415 19940 949238 957000) 0 nil])
([nil nil ((2383 . 2384)) nil (26415 19940 949236 432000) 0 nil])
([nil nil ((2384 . 2385)) nil (26415 19940 949236 201000) 0 nil])
([nil nil ((2385 . 2398)) nil (26415 19940 949235 851000) 0 nil])
([nil nil ((2398 . 2404)) nil (26415 19940 949235 250000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2403) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) 2404) nil (26415 19940 949234 508000) 0 nil])
([nil nil ((2403 . 2411)) nil (26415 19940 949233 156000) 0 nil])
([nil nil ((2411 . 2412)) nil (26415 19940 949232 925000) 0 nil])
([nil nil ((2412 . 2420)) nil (26415 19940 949232 665000) 0 nil])
([nil nil ((2420 . 2441)) nil (26415 19940 949232 334000) 0 nil])
([nil nil ((2441 . 2447)) nil (26415 19940 949231 943000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2444) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (#("e" 0 1 (face font-lock-string-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2445) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (#("w" 0 1 (face font-lock-string-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2446) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) 2447) nil (26415 19940 949230 891000) 0 nil])
([nil nil ((2444 . 2447)) nil (26415 19940 949216 655000) 0 nil])
([nil nil ((2447 . 2454)) nil (26415 19940 949211 896000) 0 nil])
([nil nil ((1180 . 1189) (t 26415 19940 965704 698000)) nil (26415 20301 740837 690000) 0 nil])
([nil nil ((1189 . 1198)) nil (26415 20301 740837 349000) 0 nil])
([nil nil ((1198 . 1212)) nil (26415 20301 740837 68000) 0 nil])
([nil nil ((1212 . 1232)) nil (26415 20301 740836 798000) 0 nil])
([nil nil ((#("Tuple[int,int]" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-2-face) fontified t) 6 9 (face py-builtins-face fontified t) 9 10 (fontified t) 10 13 (face py-builtins-face fontified t) 13 14 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1154) (undo-tree-id1362 . -14) (undo-tree-id1363 . -13) (undo-tree-id1364 . -14) 1168) nil (26415 20301 740836 247000) 0 nil])
([nil nil ((#("state: " 0 7 (fontified t)) . -1147) (undo-tree-id1359 . -7) (undo-tree-id1360 . -7) (undo-tree-id1361 . -7) 1154) nil (26415 20301 740834 814000) 0 nil])
([nil nil ((1147 . 1154)) nil (26415 20301 740833 422000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -1153) (undo-tree-id1358 . -1) 1154) nil (26415 20301 740832 820000) 0 nil])
([nil nil ((1153 . 1157)) nil (26415 20301 740831 738000) 0 nil])
([nil nil ((1157 . 1158)) nil (26415 20301 740831 308000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1156) (undo-tree-id1356 . -1) (#(":" 0 1 (fontified t)) . -1157) (undo-tree-id1357 . -1) 1158) nil (26415 20301 740830 787000) 0 nil])
([nil nil ((1156 . 1158)) nil (26415 20301 740829 594000) 0 nil])
([nil nil ((1158 . 1159)) nil (26415 20301 740829 174000) 0 nil])
([nil nil ((1159 . 1163)) nil (26415 20301 740828 753000) 0 nil])
([nil nil ((1160 . 1163) (#("int" 0 3 (fontified nil)) . -1160) (1160 . 1163) (#("int" 0 3 (face py-builtins-face fontified t)) . -1160) (undo-tree-id1352 . -3) (undo-tree-id1353 . -3) (undo-tree-id1354 . -3) (undo-tree-id1355 . -3) 1163) nil (26415 20301 740828 102000) 0 nil])
([nil nil ((1227 . 1236)) nil (26415 20301 740826 178000) 0 nil])
([nil nil ((1236 . 1246)) nil (26415 20301 740825 787000) 0 nil])
([nil nil ((1241 . 1252) (#("st" 0 2 (fontified nil)) . -1241) (1241 . 1243) (#("stateUpdate" 0 11 (fontified nil)) . -1241) (1241 . 1252) (#("state" 0 5 (fontified t)) . -1241) (undo-tree-id1348 . -5) (undo-tree-id1349 . -5) (undo-tree-id1350 . -5) (undo-tree-id1351 . -5) 1246) nil (26415 20301 740824 805000) 0 nil])
([nil nil ((1252 . 1259)) nil (26415 20301 740820 507000) 0 nil])
([nil nil ((1253 . 1264) (#("dea" 0 3 (fontified nil)) . -1253) (1253 . 1256) (#("dealer_hand" 0 11 (fontified nil)) . -1253) (1253 . 1264) (#("dealer" 0 6 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1253) (undo-tree-id1315 . -6) (undo-tree-id1316 . -6) (undo-tree-id1317 . -5) (undo-tree-id1318 . -5) (undo-tree-id1319 . -5) (undo-tree-id1320 . -5) (undo-tree-id1321 . -5) (undo-tree-id1322 . -5) (undo-tree-id1323 . -5) (undo-tree-id1324 . -5) (undo-tree-id1325 . -5) (undo-tree-id1326 . -5) (undo-tree-id1327 . -5) (undo-tree-id1328 . -5) (undo-tree-id1329 . -6) (undo-tree-id1330 . -6) (undo-tree-id1331 . -6) (undo-tree-id1332 . -6) (undo-tree-id1333 . -6) (undo-tree-id1334 . -6) (undo-tree-id1335 . -6) (undo-tree-id1336 . -6) (undo-tree-id1337 . -6) (undo-tree-id1338 . -6) (undo-tree-id1339 . -6) (undo-tree-id1340 . -6) (undo-tree-id1341 . -6) (undo-tree-id1342 . -6) (undo-tree-id1343 . -6) (undo-tree-id1344 . -6) (undo-tree-id1345 . -6) (undo-tree-id1346 . -6) (undo-tree-id1347 . -6) 1259) nil (26415 20301 740819 245000) 0 nil])
([nil nil ((1264 . 1265)) nil (26415 20301 740792 414000) 0 nil])
([nil nil ((2404 . 2413) (t 26415 20301 744197 742000)) nil (26415 21209 647877 108000) 0 nil])
([nil nil ((2413 . 2427)) nil (26415 21209 647876 757000) 0 nil])
([nil nil ((2427 . 2428)) nil (26415 21209 647876 507000) 0 nil])
([nil nil ((2428 . 2443)) nil (26415 21209 647876 6000) 0 nil])
([nil nil ((2443 . 2444)) nil (26415 21209 647875 685000) 0 nil])
([nil nil ((2444 . 2453)) nil (26415 21209 647875 435000) 0 nil])
([nil nil ((2453 . 2469)) nil (26415 21209 647875 14000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2468) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) 2469) nil (26415 21209 647874 553000) 0 nil])
([nil nil ((2468 . 2469)) nil (26415 21209 647872 860000) 0 nil])
([nil nil ((2469 . 2484)) nil (26415 21209 647872 559000) 0 nil])
([nil nil ((#("}" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2483) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) 2484) nil (26415 21209 647871 828000) 0 nil])
([nil nil ((2483 . 2485)) nil (26415 21209 647861 618000) 0 nil])
([nil nil ((2485 . 2486)) nil (26415 21209 647858 72000) 0 nil])
([nil nil ((2476 . 2481) (t 26415 21209 651368 625000)) nil (26415 21212 794973 405000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2481) (undo-tree-id1407 . 1) (undo-tree-id1408 . -1) 2482 (t 26415 21212 798401 219000)) nil (26415 21221 71755 695000) 0 nil])
([nil nil ((2481 . 2482)) nil (26415 21221 71753 962000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2476) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . 1)) nil (26415 21221 71753 0) 0 nil])
([nil nil ((2476 . 2477)) nil (26415 21221 71720 328000) 0 nil])
([nil nil ((120 . 122) (t 26415 21221 75487 28000)) nil (26415 23329 268417 327000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -121) (undo-tree-id1423 . -1) 122) nil (26415 23329 268416 716000) 0 nil])
([nil nil ((121 . 123)) nil (26415 23329 268416 5000) 0 nil])
([nil nil ((121 . 122)) nil (26415 23329 268415 764000) 0 nil])
([nil nil ((124 . 125)) nil (26415 23329 268415 73000) 0 nil])
([nil nil ((125 . 130)) nil (26415 23329 268414 843000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 129) (undo-tree-id1422 . -1) 130) nil (26415 23329 268414 422000) 0 nil])
([nil nil ((129 . 130)) nil (26415 23329 268413 871000) 0 nil])
([nil nil ((130 . 134)) nil (26415 23329 268413 590000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-comment-face fontified t)) . -131) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -132) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -133) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) 134) nil (26415 23329 268412 829000) 0 nil])
([nil nil ((131 . 146)) nil (26415 23329 268408 90000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -144) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -145) (undo-tree-id1412 . -1) 146) nil (26415 23329 268407 278000) 0 nil])
([nil nil ((144 . 159)) nil (26415 23329 268396 47000) 0 nil])
([nil nil ((159 . 171)) nil (26415 23329 268392 70000) 0 nil])
([nil nil ((208 . 213) (t 26415 23329 270738 865000)) nil (26415 31382 672180 264000) 0 nil])
([nil nil ((213 . 214)) nil (26415 31382 672179 563000) 0 nil])
([nil nil ((214 . 226)) nil (26415 31382 672179 132000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -221) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (#("g" 0 1 (fontified t)) . -222) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (#("e" 0 1 (fontified t)) . -223) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (#("n" 0 1 (fontified t)) . -224) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (#("t" 0 1 (fontified t)) . -225) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) 226) nil (26415 31382 672177 409000) 0 nil])
([nil nil ((221 . 229)) nil (26415 31382 672149 947000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified nil)) . -221) (undo-tree-id1509 . -1) (#("A" 0 1 (face font-lock-string-face fontified nil)) . -222) (undo-tree-id1510 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -223) (undo-tree-id1511 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -224) (undo-tree-id1512 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -225) (undo-tree-id1513 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -226) (undo-tree-id1514 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -227) (undo-tree-id1515 . -1) (#("," 0 1 (fontified t)) . -228) (undo-tree-id1516 . -1) 229 (t 26415 31382 675370 869000)) nil (26415 31418 664332 108000) 0 nil])
([nil nil ((220 . 221) (#("  " 0 1 (fontified nil) 1 2 (face font-lock-string-face fontified nil)) . 220) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) 221) nil (26415 31418 664328 982000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -219) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) 220) nil (26415 31418 664326 207000) 0 nil])
([nil nil ((218 . 219) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . 218) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) 219) nil (26415 31418 664323 933000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -215) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (#("t" 0 1 (fontified t)) . -216) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (#("r" 0 1 (face py-builtins-face fontified t)) . -217) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) 218) nil (26415 31418 664319 655000) 0 nil])
([nil nil ((214 . 215) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . 214) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) 215) nil (26415 31418 664314 124000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -209) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (#("a" 0 1 (fontified t)) . -210) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (#("m" 0 1 (fontified t)) . -211) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (#("e" 0 1 (fontified t)) . -212) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (#(":" 0 1 (fontified t)) . -213) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) 214) nil (26415 31418 664308 233000) 0 nil])
([nil nil ((208 . 209) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . 208) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) 209) nil (26415 31418 664295 529000) 0 nil])
([nil nil ((228 . 233)) nil (26415 31418 664284 158000) 0 nil])
([nil nil ((233 . 234)) nil (26415 31418 664283 757000) 0 nil])
([nil nil ((234 . 249)) nil (26415 31418 664283 376000) 0 nil])
([nil nil ((339 . 340)) nil (26415 31418 664283 45000) 0 nil])
([nil nil ((339 . 347)) nil (26415 31418 664282 554000) 0 nil])
([nil nil ((347 . 363)) nil (26415 31418 664278 16000) 0 nil])
([nil nil ((2502 . 2510) (#("        " 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2502) (t 26415 31418 666856 569000)) nil (26415 32419 11933 588000) 0 nil])
([nil nil ((2510 . 2511)) nil (26415 32419 11932 286000) 0 nil])
([nil nil ((2511 . 2512)) nil (26415 32419 11927 687000) 0 nil])
([nil nil ((2544 . 2552) (#("        " 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2544) (t 26415 32419 15549 790000)) nil (26415 32422 200495 453000) 0 nil])
([nil nil ((2552 . 2553)) nil (26415 32422 200494 220000) 0 nil])
([nil nil ((2553 . 2554)) nil (26415 32422 200489 622000) 0 nil])
([nil nil ((2601 . 2602) (t 26415 32422 204588 971000)) nil (26415 32437 801748 959000) 0 nil])
([nil nil ((2602 . 2603)) nil (26415 32437 801748 578000) 0 nil])
([nil nil ((2661 . 2669) (#("            " 0 12 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 2661) (undo-tree-id1522 . -10) (undo-tree-id1523 . -10) 2671) nil (26415 32437 801747 947000) 0 nil])
([nil nil ((2661 . 2665) (#("        " 0 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 2661) (undo-tree-id1520 . -8) (undo-tree-id1521 . -8) 2669) nil (26415 32437 801746 13000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 2661) (undo-tree-id1519 . -4) 2665) nil (26415 32437 801744 220000) 0 nil])
([nil nil ((2661 . 2669)) nil (26415 32437 801743 268000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2601) (#("#" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2601)) nil (26415 32437 801742 496000) 0 nil])
([nil nil ((2659 . 2671) (#("        " 0 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 2659) (undo-tree-id1517 . -8) (undo-tree-id1518 . -8) 2667) nil (26415 32437 801741 845000) 0 nil])
([nil nil ((2671 . 2672)) nil (26415 32437 801729 802000) 0 nil])
([nil nil ((2672 . 2673)) nil (26415 32437 801729 281000) 0 nil])
([nil nil ((2593 . 2601) (#("        " 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2593)) nil (26415 32437 801728 360000) 0 nil])
([nil nil ((2601 . 2602)) nil (26415 32437 801727 809000) 0 nil])
([nil nil ((2602 . 2603)) nil (26415 32437 801722 469000) 0 nil])
([nil nil ((2732 . 2740) (t 26415 32437 804780 588000)) nil (26415 32450 150550 461000) 0 nil])
([nil nil ((2740 . 2749)) nil (26415 32450 150549 8000) 0 nil])
([nil nil ((2749 . 2770)) nil (26415 32450 150547 926000) 0 nil])
([nil nil ((2770 . 2785)) nil (26415 32450 150543 367000) 0 nil])
([nil nil ((#("        print(\"ERROR - rewardUpdate NOT IMPLEMENTED\")" 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 8 13 (face py-builtins-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 14 52 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2732) (undo-tree-id1537 . -36) (undo-tree-id1538 . -37) (undo-tree-id1539 . -37) (undo-tree-id1540 . -53) (undo-tree-id1541 . -53) (t 26415 32450 153932 216000)) nil (26415 34541 821491 1000) 0 nil])
([nil nil ((2732 . 2740)) nil (26415 34541 821487 925000) 0 nil])
([nil nil ((2740 . 2748)) nil (26415 34541 821487 274000) 0 nil])
([nil nil ((2745 . 2751) (#("po" 0 2 (fontified nil)) . -2745) (2745 . 2747) (#("policy" 0 6 (fontified nil)) . -2745) (2745 . 2751) (#("pol" 0 3 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2745) (undo-tree-id1533 . -3) (undo-tree-id1534 . -3) (undo-tree-id1535 . -3) (undo-tree-id1536 . -3) 2748) nil (26415 34541 821485 540000) 0 nil])
([nil nil ((2751 . 2758)) nil (26415 34541 821482 194000) 0 nil])
([nil nil ((2758 . 2759)) nil (26415 34541 821481 372000) 0 nil])
([nil nil ((#("        self.policy.update(" 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 8 12 (face py-object-reference-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 12 13 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 13 26 (fontified t match-data (0 3 0 1 1 2 2 3)) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 3 0 1 1 2 2 3))) . 2732) (undo-tree-id1528 . -20) (undo-tree-id1529 . -26) (undo-tree-id1530 . -26) (undo-tree-id1531 . -26) (undo-tree-id1532 . -27)) nil (26415 34541 821480 451000) 0 nil])
([nil nil ((2732 . 2740)) nil (26415 34541 821475 692000) 0 nil])
([nil nil ((2740 . 2749)) nil (26415 34541 821474 690000) 0 nil])
([nil nil ((2749 . 2758)) nil (26415 34541 821473 968000) 0 nil])
([nil nil ((2758 . 2763)) nil (26415 34541 821473 257000) 0 nil])
([nil nil ((2758 . 2764) (#("st" 0 2 (fontified nil)) . -2758) (2758 . 2760) (#("states" 0 6 (fontified nil)) . -2758) (2758 . 2764) (#("state" 0 5 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2758) (undo-tree-id1524 . -5) (undo-tree-id1525 . -5) (undo-tree-id1526 . -5) (undo-tree-id1527 . -5) 2763) nil (26415 34541 821472 55000) 0 nil])
([nil nil ((2764 . 2765)) nil (26415 34541 821459 501000) 0 nil])
([nil nil ((2765 . 2778)) nil (26415 34541 821455 534000) 0 nil])
([nil nil ((2780 . 2788) (#("    " 0 4 (fontified t)) . 2780) 2785 (t 26415 34541 826588 121000)) nil (26415 34598 975738 26000) 0 nil])
([nil nil ((2780 . 2784) (#("        " 0 8 (fontified t)) . 2780) 2789) nil (26415 34598 975737 435000) 0 nil])
([nil nil ((2778 . 2789)) nil (26415 34598 975737 74000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2783) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (#("o" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2784) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (#("l" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2785) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2786) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (#("c" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2787) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (#("y" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2788) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) 2789) nil (26415 34598 975735 882000) 0 nil])
([nil nil ((2783 . 2786)) nil (26415 34598 975724 119000) 0 nil])
([nil nil ((2783 . 2789) (#("po" 0 2 (fontified nil)) . -2783) (2783 . 2785) (#("policy" 0 6 (fontified nil)) . -2783) (2783 . 2789) (#("pol" 0 3 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2783) (undo-tree-id1542 . -3) (undo-tree-id1543 . -3) (undo-tree-id1544 . -3) (undo-tree-id1545 . -3) 2786) nil (26415 34598 975723 158000) 0 nil])
([nil nil ((2789 . 2797)) nil (26415 34598 975708 971000) 0 nil])
([nil nil ((2797 . 2811)) nil (26415 34598 975701 236000) 0 nil])
([nil nil ((2810 . 2817) (t 26415 34598 979173 847000)) nil (26415 34623 809637 280000) 0 nil])
([nil nil ((2811 . 2817) (#("rew" 0 3 (fontified nil)) . -2811) (2811 . 2814) (#("reward" 0 6 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2811) (undo-tree-id1639 . -6) (undo-tree-id1640 . -6) (undo-tree-id1641 . -6) (undo-tree-id1642 . -6) 2817) nil (26415 34623 809636 669000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2804) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2805) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (#("w" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2806) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2807) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (#("r" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2808) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2809) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (#("=" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2810) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2811) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2812) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (#("w" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2813) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2814) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2815) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2816) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) 2817) nil (26415 34623 809632 912000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 2803) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) 2804) nil (26415 34623 809608 977000) 0 nil])
([nil nil ((#("," 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2802) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) 2803) nil (26415 34623 809605 631000) 0 nil])
([nil nil ((2802 . 2804)) nil (26415 34623 809602 234000) 0 nil])
([nil nil ((2804 . 2815)) nil (26415 34623 809601 884000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2814) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) 2815) nil (26415 34623 809601 162000) 0 nil])
([nil nil ((2814 . 2819)) nil (26415 34623 809588 128000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 3 0 1 1 2 2 3))) . -2818) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) 2819 (t 26415 34623 813390 505000)) nil (26415 34625 268696 551000) 0 nil])
([nil nil ((2749 . 2757) (t 26415 34625 272403 350000)) nil (26415 34656 475808 203000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2761) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2762) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2763) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (#("f" 0 1 (face py-object-reference-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2764) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2765) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2766) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2767) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2768) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2769) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (#("e" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2770) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2771) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (#(":" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2772) (undo-tree-id1864 . -1) 2773) nil (26415 34656 475806 560000) 0 nil])
([nil nil ((2761 . 2776)) nil (26415 34656 475795 820000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2771) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2772) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2773) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2774) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2775) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) 2776) nil (26415 34656 475794 778000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2770) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) 2771) nil (26415 34656 475723 624000) 0 nil])
([nil nil ((#("," 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2769) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) 2770) nil (26415 34656 475721 630000) 0 nil])
([nil nil ((2769 . 2785)) nil (26415 34656 475719 536000) 0 nil])
([nil nil ((2785 . 2790)) nil (26415 34656 475719 266000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2789) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) 2790) nil (26415 34656 475718 865000) 0 nil])
([nil nil ((2789 . 2792)) nil (26415 34656 475717 823000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2783) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (#("c" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2784) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2785) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2786) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (#("o" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2787) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (#("n" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2788) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2789) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2790) (undo-tree-id1803 . -1) (#(";" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2791) (undo-tree-id1804 . -1) 2792) nil (26415 34656 475716 50000) 0 nil])
([nil nil ((2783 . 2791)) nil (26415 34656 475700 610000) 0 nil])
([nil nil ((2783 . 2795) (#("sta" 0 3 (fontified nil)) . -2783) (2783 . 2786) (#("stateActions" 0 12 (fontified nil)) . -2783) (2783 . 2795) (#("stateAct" 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2783) (undo-tree-id1696 . -8) (undo-tree-id1697 . -8) (undo-tree-id1698 . -5) (undo-tree-id1699 . -5) (undo-tree-id1700 . -5) (undo-tree-id1701 . -5) (undo-tree-id1702 . -5) (undo-tree-id1703 . -5) (undo-tree-id1704 . -5) (undo-tree-id1705 . -5) (undo-tree-id1706 . -5) (undo-tree-id1707 . -6) (undo-tree-id1708 . -6) (undo-tree-id1709 . -6) (undo-tree-id1710 . -6) (undo-tree-id1711 . -6) (undo-tree-id1712 . -6) (undo-tree-id1713 . -6) (undo-tree-id1714 . -6) (undo-tree-id1715 . -6) (undo-tree-id1716 . -6) (undo-tree-id1717 . -6) (undo-tree-id1718 . -6) (undo-tree-id1719 . -6) (undo-tree-id1720 . -6) (undo-tree-id1721 . -6) (undo-tree-id1722 . -6) (undo-tree-id1723 . -6) (undo-tree-id1724 . -6) (undo-tree-id1725 . -6) (undo-tree-id1726 . -6) (undo-tree-id1727 . -6) (undo-tree-id1728 . -6) (undo-tree-id1729 . -7) (undo-tree-id1730 . -7) (undo-tree-id1731 . -7) (undo-tree-id1732 . -7) (undo-tree-id1733 . -7) (undo-tree-id1734 . -7) (undo-tree-id1735 . -7) (undo-tree-id1736 . -7) (undo-tree-id1737 . -7) (undo-tree-id1738 . -7) (undo-tree-id1739 . -7) (undo-tree-id1740 . -7) (undo-tree-id1741 . -7) (undo-tree-id1742 . -7) (undo-tree-id1743 . -7) (undo-tree-id1744 . -7) (undo-tree-id1745 . -8) (undo-tree-id1746 . -8) (undo-tree-id1747 . -8) (undo-tree-id1748 . -8) (undo-tree-id1749 . -8) (undo-tree-id1750 . -8) (undo-tree-id1751 . -8) (undo-tree-id1752 . -8) (undo-tree-id1753 . -8) (undo-tree-id1754 . -8) (undo-tree-id1755 . -8) (undo-tree-id1756 . -8) (undo-tree-id1757 . -8) (undo-tree-id1758 . -8) (undo-tree-id1759 . -8) (undo-tree-id1760 . -8) (undo-tree-id1761 . -8) (undo-tree-id1762 . -8) (undo-tree-id1763 . -8) (undo-tree-id1764 . -8) (undo-tree-id1765 . -8) (undo-tree-id1766 . -8) (undo-tree-id1767 . -8) (undo-tree-id1768 . -8) (undo-tree-id1769 . -8) (undo-tree-id1770 . -8) (undo-tree-id1771 . -8) (undo-tree-id1772 . -8) (undo-tree-id1773 . -8) (undo-tree-id1774 . -8) 2791) nil (26415 34656 475698 807000) 0 nil])
([nil nil ((2795 . 2796)) nil (26415 34656 475655 856000) 0 nil])
([nil nil ((2796 . 2797)) nil (26415 34656 475651 197000) 0 nil])
([nil nil ((2731 . 2740) (t 26415 34656 479681 168000)) nil (26415 34717 737869 627000) 0 nil])
([nil nil ((2740 . 2761)) nil (26415 34717 737869 86000) 0 nil])
([nil nil ((2761 . 2763)) nil (26415 34717 737868 535000) 0 nil])
([nil nil ((2758 . 2769) (#("st" 0 2 (fontified nil)) . -2758) (2758 . 2760) (#("state_count" 0 11 (fontified nil)) . -2758) (2758 . 2769) (#("state" 0 5 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2758) (undo-tree-id1865 . -5) (undo-tree-id1866 . -5) (undo-tree-id1867 . -5) (undo-tree-id1868 . -5) 2763) nil (26415 34717 737865 198000) 0 nil])
([nil nil ((2769 . 2770) (t 26415 34717 741242 344000)) nil (26415 34718 648380 817000) 0 nil])
([nil nil ((2732 . 2740) (#("        " 0 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 2732) (t 26415 34718 652250 837000)) nil (26415 59464 916900 251000) 0 nil])
([nil nil ((2740 . 2741)) nil (26415 59464 916898 818000) 0 nil])
([nil current ((2741 . 2742)) nil (26415 59464 916893 999000) 0 nil])
nil
