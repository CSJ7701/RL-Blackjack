(undo-tree-save-format-version . 1)
"1a1a2866e2a8fee5e67e9ea48098becb72a3447e"
[nil nil nil nil (26402 27753 651159 965000) 0 nil]
([nil nil ((nil rear-nonsticky nil 441 . 442) (nil fontified nil 1 . 442) (1 . 442) (t 26402 27556 972767 906000)) nil (26402 27753 651155 597000) 0 nil])
([nil nil ((1 . 3) (t 26402 27753 651749 25000)) nil (26402 27763 199359 14000) 0 nil])
([nil nil ((1 . 8)) nil (26402 27763 199357 842000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -6) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("g" 0 1 (fontified t)) . -7) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) \...) nil (26402 27763 199356 830000) 0 nil])
([nil nil ((6 . 24)) nil (26402 27763 199353 384000) 0 nil])
([nil nil ((19 . 24) (#("Age" 0 3 (fontified nil)) . -19) (19 . 22) (#("Agent" 0 5 (fontified t)) . -19) (undo-tree-id0 . -5) (undo-tree-id1 . -5) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) \...) nil (26402 27763 199348 885000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -74) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -75) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#("t" 0 1 (face py-builtins-face fontified t)) . -76) (undo-tree-id233 . -1) \...) nil (26402 28847 434725 858000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 73) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 74) nil (26402 28847 434722 301000) 0 nil])
([nil nil ((#("        \"\"\"
        Initialize the table with a specified number of agents.
        
        :param num_agents: Number of agents (players) at the table.
        \"\"\"
        self.agents = [Agent() for _ in range(num_agents)]
    
    def reset(self):
        \"\"\"
        Reset all agents' hands for a new round.
        \"\"\"
        for agent in self.agents:
            agent.resetHand()
" 0 8 (fontified t) 8 9 (face font-lock-string-face syntax-table (15) fontified t) 9 10 (face font-lock-string-face syntax-table nil fontified t) 10 11 (face font-lock-string-face syntax-table nil fontified t) 11 161 (face font-lock-string-face fontified t) 161 162 (face font-lock-string-face syntax-table nil fontified t) 162 163 (face font-lock-string-face syntax-table nil fontified t) 163 164 (face font-lock-string-face syntax-table (15) fontified t) 164 173 (fontified t) 173 177 (face py-object-reference-face fontified t) 177 178 (fontified t) 178 184 (face py-variable-name-face fontified t) 184 185 (fontified t) 185 186 (face font-lock-operator-face fontified t) 186 187 (fontified t) 187 188 (face (rainbow-delimiters-depth-1-face) fontified t) 188 193 (fontified t) 193 194 (face (rainbow-delimiters-depth-2-face) fontified t) 194 195 (face (rainbow-delimiters-depth-2-face) fontified t) 195 196 (fontified t) 196 199 (face font-lock-keyword-face fontified t) 199 200 (fontified t) 200 201 (face py-builtins-face fontified t) 201 202 (fontified t) 202 204 (face font-lock-keyword-face fontified t) 204 205 (fontified t) 205 210 (face py-builtins-face fontified t) 210 211 (face (rainbow-delimiters-depth-2-face) fontified t) 211 221 (fontified t) 221 222 (face (rainbow-delimiters-depth-2-face) fontified t) 222 223 (face (rainbow-delimiters-depth-1-face) fontified t) 223 233 (fontified t) 233 236 (face py-def-class-face fontified t) 236 237 (fontified t) 237 242 (face py-def-face fontified t) 242 243 (face (rainbow-delimiters-depth-1-face) fontified t) 243 247 (face py-object-reference-face fontified t) 247 248 (face (rainbow-delimiters-depth-1-face) fontified t) 248 258 (fontified t) 258 259 (face font-lock-string-face syntax-table (15) fontified t) 259 260 (face font-lock-string-face syntax-table nil fontified t) 260 261 (face font-lock-string-face syntax-table nil fontified t) 261 319 (face font-lock-string-face fontified t) 319 320 (face font-lock-string-face syntax-table nil fontified t) 320 321 (face font-lock-string-face syntax-table nil fontified t) 321 322 (face font-lock-string-face syntax-table (15) fontified t) 322 331 (fontified t) 331 334 (face font-lock-keyword-face fontified t) 334 341 (fontified t) 341 343 (face font-lock-keyword-face fontified t) 343 344 (fontified t) 344 348 (face py-object-reference-face fontified t) 348 384 (fontified t) 384 385 (face (rainbow-delimiters-depth-1-face) fontified t) 385 386 (face (rainbow-delimiters-depth-1-face) fontified t) 386 387 (fontified t rear-nonsticky t)) . 76) (undo-tree-id219 . -387) (undo-tree-id220 . -387) (undo-tree-id221 . -387) (undo-tree-id222 . -387) (undo-tree-id223 . -387)) nil (26402 28847 434720 718000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -70) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#("s" 0 1 (fontified t)) . -71) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#(":" 0 1 (fontified t)) . -72) (undo-tree-id216 . -1) \...) nil (26402 28847 434718 784000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -62) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("u" 0 1 (fontified t)) . -63) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("m" 0 1 (fontified t)) . -64) (undo-tree-id192 . -1) \...) nil (26402 28847 434713 224000) 0 nil])
([nil nil ((62 . 66)) nil (26402 28847 434706 651000) 0 nil])
([nil nil ((66 . 67)) nil (26402 28847 434706 361000) 0 nil])
([nil nil ((67 . 80)) nil (26402 28847 434706 70000) 0 nil])
([nil nil ((80 . 81)) nil (26402 28847 434705 569000) 0 nil])
([nil nil ((81 . 86)) nil (26402 28847 434705 299000) 0 nil])
([nil nil ((86 . 88)) nil (26402 28847 434705 159000) 0 nil])
([nil nil ((24 . 50) (82 . 82) (82 . 88) (#("Dea" 0 3 (fontified nil)) . 82) (82 . 85) (#("Dealer" 0 6 (fontified t)) . -82) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) \...) nil (26402 28847 434704 658000) 0 nil])
([nil nil ((50 . 51)) nil (26402 28847 434703 175000) 0 nil])
([nil nil ((51 . 60)) nil (26402 28847 434702 904000) 0 nil])
([nil nil ((56 . 60) (#("shoe" 0 4 (fontified nil)) . -56) (56 . 60) (#("Shoe" 0 4 (fontified nil)) . -56) (56 . 60) (#("shoe" 0 4 (fontified t)) . -56) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) \...) nil (26402 28847 434702 103000) 0 nil])
([nil nil ((60 . 72)) nil (26402 28847 434700 199000) 0 nil])
([nil nil ((68 . 72) (#("Sho" 0 3 (fontified nil)) . -68) (68 . 71) (#("Shoe" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -68) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) \...) nil (26402 28847 434696 673000) 0 nil])
([nil nil ((139 . 147) (t 26402 28847 435938 222000)) nil (26402 29022 256710 589000) 0 nil])
([nil nil ((147 . 150)) nil (26402 29022 256710 288000) 0 nil])
([nil nil ((150 . 159)) nil (26402 29022 256710 38000) 0 nil])
([nil nil ((159 . 167)) nil (26402 29022 256709 707000) 0 nil])
([nil nil ((167 . 188)) nil (26402 29022 256709 466000) 0 nil])
([nil nil ((188 . 205)) nil (26402 29022 256709 206000) 0 nil])
([nil nil ((205 . 214)) nil (26402 29022 256709 66000) 0 nil])
([nil nil ((214 . 217)) nil (26402 29022 256708 725000) 0 nil])
([nil nil ((217 . 226)) nil (26402 29022 256708 575000) 0 nil])
([nil nil ((226 . 237)) nil (26402 29022 256708 324000) 0 nil])
([nil nil ((237 . 238)) nil (26402 29022 256708 174000) 0 nil])
([nil nil ((238 . 243)) nil (26402 29022 256707 904000) 0 nil])
([nil nil ((243 . 255)) nil (26402 29022 256707 663000) 0 nil])
([nil nil ((255 . 259) (#("Shoe" 0 4 (fontified nil)) . -255) (255 . 259)) nil (26402 29022 256707 272000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t match-data (0 0))) . -255) (undo-tree-id298 . -1) (#("h" 0 1 (fontified t match-data (0 0))) . -256) (undo-tree-id299 . -1) (#("o" 0 1 (fontified t match-data (0 0))) . -257) (undo-tree-id300 . -1) (#("e" 0 1 (fontified t match-data (0 0))) . -258) (undo-tree-id301 . -1) 259) nil (26402 29022 256706 401000) 0 nil])
([nil nil ((255 . 264)) nil (26402 29022 256704 718000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -239) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("i" 0 1 (fontified t)) . -240) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#("s" 0 1 (fontified t)) . -241) (undo-tree-id294 . -1) (undo-tree-id295 . -1) \...) nil (26402 29022 256704 16000) 0 nil])
([nil nil ((239 . 243)) nil (26402 29022 256699 989000) 0 nil])
([nil nil ((239 . 243) (#("lis" 0 3 (fontified nil)) . -239) (239 . 242) (#("list" 0 4 (face py-builtins-face fontified t)) . -239) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) 243) nil (26402 29022 256699 558000) 0 nil])
([nil nil ((264 . 280)) nil (26402 29022 256698 265000) 0 nil])
([nil nil ((276 . 280) (#("sho" 0 3 (fontified nil)) . -276) (276 . 279) (#("shoe" 0 4 (fontified t)) . -276) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) 280) nil (26402 29022 256697 835000) 0 nil])
([nil nil ((280 . 289)) nil (26402 29022 256695 901000) 0 nil])
([nil nil ((289 . 309)) nil (26402 29022 256695 640000) 0 nil])
([nil nil ((303 . 309) (#("dea" 0 3 (fontified nil)) . -303) (303 . 306) (#("dealer" 0 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -303) (undo-tree-id277 . -6) (undo-tree-id278 . -6) (undo-tree-id279 . -6) (undo-tree-id280 . -6) 309) nil (26402 29022 256694 849000) 0 nil])
([nil nil ((309 . 318)) nil (26402 29022 256693 296000) 0 nil])
([nil nil ((318 . 335)) nil (26402 29022 256693 46000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 \...))) . -333) (undo-tree-id275 . -1) (#("n" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 \...))) . -334) (undo-tree-id276 . -1) 335) nil (26402 29022 256692 494000) 0 nil])
([nil nil ((333 . 338)) nil (26402 29022 256690 982000) 0 nil])
([nil nil ((338 . 339)) nil (26402 29022 256690 711000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 \...))) . -338) (undo-tree-id274 . -1) 339) nil (26402 29022 256690 320000) 0 nil])
([nil nil ((338 . 339)) nil (26402 29022 256689 519000) 0 nil])
([nil nil ((341 . 349) (#("        " 0 8 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 \...))) . 340) (undo-tree-id273 . -8) (339 . 349)) nil (26402 29022 256689 118000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 \...))) . 345) (undo-tree-id272 . -4) 349) nil (26402 29022 256688 347000) 0 nil])
([nil nil ((345 . 348)) nil (26402 29022 256687 916000) 0 nil])
([nil nil ((348 . 364)) nil (26402 29022 256687 685000) 0 nil])
([nil nil ((364 . 365)) nil (26402 29022 256687 545000) 0 nil])
([nil nil ((365 . 379)) nil (26402 29022 256687 315000) 0 nil])
([nil nil ((379 . 380)) nil (26402 29022 256687 184000) 0 nil])
([nil nil ((380 . 389)) nil (26402 29022 256686 934000) 0 nil])
([nil nil ((389 . 392)) nil (26402 29022 256686 804000) 0 nil])
([nil nil ((392 . 401)) nil (26402 29022 256686 553000) 0 nil])
([nil nil ((401 . 402)) nil (26402 29022 256686 413000) 0 nil])
([nil nil ((402 . 423)) nil (26402 29022 256686 163000) 0 nil])
([nil nil ((423 . 427)) nil (26402 29022 256686 32000) 0 nil])
([nil nil ((427 . 436)) nil (26402 29022 256685 692000) 0 nil])
([nil nil ((436 . 439)) nil (26402 29022 256685 561000) 0 nil])
([nil nil ((439 . 448)) nil (26402 29022 256685 301000) 0 nil])
([nil nil ((448 . 466)) nil (26402 29022 256685 161000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 \...))) . -465) (undo-tree-id271 . -1) 466) nil (26402 29022 256684 780000) 0 nil])
([nil nil ((465 . 468)) nil (26402 29022 256684 309000) 0 nil])
([nil nil ((468 . 473)) nil (26402 29022 256684 59000) 0 nil])
([nil nil ((475 . 483) (#("        " 0 8 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 \...))) . 474) (undo-tree-id270 . -8) (473 . 483)) nil (26402 29022 256683 477000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 \...))) . 479) (undo-tree-id269 . -4) 483) nil (26402 29022 256682 856000) 0 nil])
([nil nil ((479 . 495)) nil (26402 29022 256682 275000) 0 nil])
([nil nil ((495 . 508)) nil (26402 29022 256681 955000) 0 nil])
([nil nil ((508 . 509)) nil (26402 29022 256681 724000) 0 nil])
([nil nil ((509 . 518)) nil (26402 29022 256681 384000) 0 nil])
([nil nil ((518 . 521)) nil (26402 29022 256681 113000) 0 nil])
([nil nil ((521 . 530)) nil (26402 29022 256680 843000) 0 nil])
([nil nil ((530 . 551)) nil (26402 29022 256680 612000) 0 nil])
([nil nil ((551 . 556)) nil (26402 29022 256680 332000) 0 nil])
([nil nil ((556 . 565)) nil (26402 29022 256680 61000) 0 nil])
([nil nil ((565 . 568)) nil (26402 29022 256679 821000) 0 nil])
([nil nil ((568 . 577)) nil (26402 29022 256679 680000) 0 nil])
([nil nil ((577 . 593)) nil (26402 29022 256679 260000) 0 nil])
([nil nil ((589 . 598) (#("de" 0 2 (fontified nil)) . -589) (589 . 591) (#("dealTable" 0 9 (fontified nil)) . -589) (589 . 598) (#("deal" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 \...))) . -589) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) \...) nil (26402 29022 256678 478000) 0 nil])
([nil nil ((598 . 604)) nil (26402 29022 256676 404000) 0 nil])
([nil nil ((606 . 614) (#("        " 0 8 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . 605) (undo-tree-id264 . -8) (604 . 614)) nil (26402 29022 256676 94000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 610) (undo-tree-id263 . -4) 614) nil (26402 29022 256675 302000) 0 nil])
([nil nil ((610 . 623)) nil (26402 29022 256674 881000) 0 nil])
([nil nil ((623 . 637)) nil (26402 29022 256674 641000) 0 nil])
([nil nil ((637 . 638)) nil (26402 29022 256674 491000) 0 nil])
([nil nil ((638 . 647)) nil (26402 29022 256674 240000) 0 nil])
([nil nil ((647 . 652)) nil (26402 29022 256674 10000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -651) (undo-tree-id262 . -1) 652) nil (26402 29022 256673 509000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 650) (undo-tree-id261 . -1) 651) nil (26402 29022 256672 637000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face syntax-table nil fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -649) (undo-tree-id260 . -1) 650) nil (26402 29022 256671 695000) 0 nil])
([nil nil ((649 . 650)) nil (26402 29022 256671 54000) 0 nil])
([nil nil ((650 . 659)) nil (26402 29022 256670 784000) 0 nil])
([nil nil ((659 . 664)) nil (26402 29022 256670 523000) 0 nil])
([nil nil ((664 . 685)) nil (26402 29022 256670 232000) 0 nil])
([nil nil ((685 . 706)) nil (26402 29022 256669 752000) 0 nil])
([nil nil ((706 . 715)) nil (26402 29022 256669 491000) 0 nil])
([nil nil ((715 . 718)) nil (26402 29022 256669 201000) 0 nil])
([nil nil ((720 . 728) (#("        " 0 8 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . 719) (undo-tree-id259 . -8) (718 . 728)) nil (26402 29022 256668 770000) 0 nil])
([nil nil ((728 . 749)) nil (26402 29022 256667 858000) 0 nil])
([nil nil ((749 . 752)) nil (26402 29022 256667 608000) 0 nil])
([nil nil ((752 . 753)) nil (26402 29022 256667 127000) 0 nil])
([nil nil ((753 . 766)) nil (26402 29022 256666 285000) 0 nil])
([nil nil ((766 . 772)) nil (26402 29022 256665 544000) 0 nil])
([nil nil ((772 . 782)) nil (26402 29022 256665 263000) 0 nil])
([nil nil ((782 . 795)) nil (26402 29022 256664 983000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 791) (undo-tree-id258 . -4) 795) nil (26402 29022 256664 522000) 0 nil])
([nil nil ((784 . 792) (#("        " 0 8 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . 783) (undo-tree-id257 . -8) (791 . 792)) nil (26402 29022 256663 650000) 0 nil])
([nil nil ((792 . 793)) nil (26402 29022 256662 929000) 0 nil])
([nil nil ((793 . 797)) nil (26402 29022 256662 668000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -795) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -796) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) 797) nil (26402 29022 256661 696000) 0 nil])
([nil nil ((795 . 797)) nil (26402 29022 256657 158000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -795) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -796) (undo-tree-id250 . -1) 797) nil (26402 29022 256656 747000) 0 nil])
([nil nil ((795 . 816)) nil (26402 29022 256654 864000) 0 nil])
([nil nil ((816 . 826)) nil (26402 29022 256654 593000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -825) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) 826) nil (26402 29022 256654 132000) 0 nil])
([nil nil ((825 . 826)) nil (26402 29022 256652 679000) 0 nil])
([nil nil ((826 . 839)) nil (26402 29022 256652 399000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 835) (undo-tree-id243 . -4) 839) nil (26402 29022 256651 848000) 0 nil])
([nil nil ((835 . 851)) nil (26402 29022 256651 227000) 0 nil])
([nil nil ((847 . 855) (#("pl" 0 2 (fontified nil)) . -847) (847 . 849) (#("playTurn" 0 8 (fontified nil)) . -847) (847 . 855) (#("play" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -847) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) \...) nil (26402 29022 256650 235000) 0 nil])
([nil nil ((855 . 858)) nil (26402 29022 256647 820000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -855) (undo-tree-id236 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -856) (undo-tree-id237 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -857) (undo-tree-id238 . -1) 858) nil (26402 29022 256646 919000) 0 nil])
([nil nil ((855 . 857)) nil (26402 29022 256637 100000) 0 nil])
([nil nil ((857 . 858)) nil (26402 29022 256633 223000) 0 nil])
([nil nil ((859 . 867) (#("        " 0 8 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . 858) (undo-tree-id403 . -8) (857 . 867) (t 26402 29022 257564 886000)) nil (26402 29064 918565 867000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 863) (undo-tree-id402 . -4) 867) nil (26402 29064 918564 986000) 0 nil])
([nil nil ((863 . 872)) nil (26402 29064 918564 384000) 0 nil])
([nil nil ((872 . 886)) nil (26402 29064 918564 44000) 0 nil])
([nil nil ((886 . 887)) nil (26402 29064 918563 793000) 0 nil])
([nil nil ((887 . 896)) nil (26402 29064 918563 483000) 0 nil])
([nil nil ((896 . 900)) nil (26402 29064 918563 242000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 899) (undo-tree-id401 . -1) 900) nil (26402 29064 918562 761000) 0 nil])
([nil nil ((899 . 908)) nil (26402 29064 918562 60000) 0 nil])
([nil nil ((908 . 929)) nil (26402 29064 918561 830000) 0 nil])
([nil nil ((929 . 939)) nil (26402 29064 918561 579000) 0 nil])
([nil nil ((939 . 948)) nil (26402 29064 918561 349000) 0 nil])
([nil nil ((939 . 940)) nil (26402 29064 918560 738000) 0 nil])
([nil nil ((949 . 952)) nil (26402 29064 918560 477000) 0 nil])
([nil nil ((952 . 961)) nil (26402 29064 918560 56000) 0 nil])
([nil nil ((961 . 973)) nil (26402 29064 918559 746000) 0 nil])
([nil nil ((966 . 978) (#("cu" 0 2 (fontified nil)) . -966) (966 . 968) (#("current_turn" 0 12 (fontified nil)) . -966) (966 . 978) (#("current" 0 7 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -966) (undo-tree-id397 . -7) (undo-tree-id398 . -7) (undo-tree-id399 . -7) (undo-tree-id400 . -7) \...) nil (26402 29064 918559 105000) 0 nil])
([nil nil ((978 . 982)) nil (26402 29064 918557 562000) 0 nil])
([nil nil ((982 . 991)) nil (26402 29064 918557 321000) 0 nil])
([nil nil ((991 . 994)) nil (26402 29064 918556 991000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 \...))) . -991) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (#("f" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 \...))) . -992) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) \...) nil (26402 29064 918556 269000) 0 nil])
([nil nil ((991 . 1002)) nil (26402 29064 918552 592000) 0 nil])
([nil nil ((1002 . 1012)) nil (26402 29064 918552 352000) 0 nil])
([nil nil ((1010 . 1016) (#("ag" 0 2 (fontified nil)) . -1010) (1010 . 1012) (#("agents" 0 6 (fontified nil)) . -1010) (1010 . 1016) (#("ag" 0 2 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 \...))) . -1010) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) \...) nil (26402 29064 918551 711000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 \...))) . -1000) (undo-tree-id379 . -1) (#(" " 0 1 (fontified nil)) . 1001) (1001 . 1002) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 \...))) . 1001) (undo-tree-id380 . -1) 1002) nil (26402 29064 918549 597000) 0 nil])
([nil nil ((1000 . 1001)) nil (26402 29064 918541 702000) 0 nil])
([nil nil ((1015 . 1016)) nil (26402 29064 918541 471000) 0 nil])
([nil nil ((1016 . 1029)) nil (26402 29064 918541 321000) 0 nil])
([nil nil ((1029 . 1033)) nil (26402 29064 918541 171000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1032) (undo-tree-id378 . -1) 1033) nil (26402 29064 918540 710000) 0 nil])
([nil nil ((1032 . 1039)) nil (26402 29064 918540 259000) 0 nil])
([nil nil ((1035 . 1044) (#("re" 0 2 (fontified nil)) . -1035) (1035 . 1037) (#("resetHand" 0 9 (fontified nil)) . -1035) (1035 . 1044) (#("rese" 0 4 (fontified t match-data (0 2 0 1 1 2))) . -1035) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) \...) nil (26402 29064 918539 488000) 0 nil])
([nil nil ((1044 . 1046)) nil (26402 29064 918537 935000) 0 nil])
([nil nil ((1046 . 1059)) nil (26402 29064 918537 534000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1055) (undo-tree-id373 . -4) 1059) nil (26402 29064 918537 123000) 0 nil])
([nil nil ((1055 . 1069)) nil (26402 29064 918536 382000) 0 nil])
([nil nil ((1067 . 1072) (#("re" 0 2 (fontified nil)) . -1067) (1067 . 1069) (#("reset" 0 5 (fontified nil)) . -1067) (1067 . 1072) (#("re" 0 2 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1067) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -1) (undo-tree-id305 . -1) \...) nil (26402 29064 918534 228000) 0 nil])
([nil nil ((1072 . 1074)) nil (26402 29064 918224 664000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -778) (undo-tree-id523 . -1) 779 (t 26402 29064 919964 630000)) nil (26402 29256 76664 919000) 0 nil])
([nil nil ((778 . 779)) nil (26402 29256 76664 227000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 779)) nil (26402 29256 76663 666000) 0 nil])
([nil nil ((779 . 780)) nil (26402 29256 76663 526000) 0 nil])
([nil nil ((1075 . 1084)) nil (26402 29256 76663 376000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1863 . 1864) (nil fontified nil 1084 . 1864) (1084 . 1864)) nil (26402 29256 76663 55000) 0 nil])
([nil nil ((1076 . 1080) (#("        " 0 8 (fontified t)) . 1076) (undo-tree-id430 . -8) (undo-tree-id431 . -8) (undo-tree-id432 . -8) (undo-tree-id433 . -8) (undo-tree-id434 . -8) (undo-tree-id435 . -8) (undo-tree-id436 . -8) (undo-tree-id437 . -8) \...) nil (26402 29256 76661 392000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1076) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) \...) nil (26402 29256 76629 452000) 0 nil])
([nil nil ((#("([\"2\", \"A\", \"5\", \"10\", \"6\", \"7\", \"4\", \"9\", \"10\", \"J\", \"Q\", \"K\"])" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t) 2 5 (face font-lock-string-face fontified t) 5 7 (fontified t) 7 10 (face font-lock-string-face fontified t) 10 12 (fontified t) 12 15 (face font-lock-string-face fontified t) 15 17 (fontified t) 17 21 (face font-lock-string-face fontified t) 21 23 (fontified t) 23 26 (face font-lock-string-face fontified t) 26 28 (fontified t) 28 31 (face font-lock-string-face fontified t) 31 33 (fontified t) 33 36 (face font-lock-string-face fontified t) 36 38 (fontified t) 38 41 (face font-lock-string-face fontified t) 41 43 (fontified t) 43 47 (face font-lock-string-face fontified t) 47 49 (fontified t) 49 52 (face font-lock-string-face fontified t) 52 54 (fontified t) 54 57 (face font-lock-string-face fontified t) 57 59 (fontified t) 59 62 (face font-lock-string-face fontified t) 62 63 (face (rainbow-delimiters-depth-2-face) fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1146) (undo-tree-id524 . -64) (undo-tree-id525 . -64) (undo-tree-id526 . -64) (undo-tree-id527 . -64) (undo-tree-id528 . -64) (undo-tree-id529 . -64) (undo-tree-id530 . -64) (undo-tree-id531 . -64) (undo-tree-id532 . -64) \...) nil (26402 29266 380202 916000) 0 nil])
([nil nil ((1146 . 1148)) nil (26402 29266 379946 31000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t)) . -1331) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) \...) nil (26402 29274 394412 799000) 0 nil])
([nil nil ((568 . 577) (t 26402 29274 395939 415000)) nil (26402 29368 992853 263000) 0 nil])
([nil nil ((577 . 595)) nil (26402 29368 992852 922000) 0 nil])
([nil nil ((595 . 601) (#("agents" 0 6 (fontified nil)) . -595) (595 . 601)) nil (26402 29368 992852 601000) 0 nil])
([nil nil ((601 . 602)) nil (26402 29368 992852 151000) 0 nil])
([nil nil ((603 . 615) (#("        " 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 \...))) . 603) 636) nil (26402 29368 992851 850000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -631) (undo-tree-id1099 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -632) (undo-tree-id1100 . -1) (#("b" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -633) (undo-tree-id1101 . -1) (#("l" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -634) (undo-tree-id1102 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -635) (undo-tree-id1103 . -1) \...) nil (26402 29368 992850 698000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -632) (undo-tree-id1095 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -633) (undo-tree-id1096 . -1) (#("l" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -634) (undo-tree-id1097 . -1) (#("f" 0 1 (face py-object-reference-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -635) (undo-tree-id1098 . -1) 636) nil (26402 29368 992847 963000) 0 nil])
([nil nil ((632 . 637)) nil (26402 29368 992845 959000) 0 nil])
([nil nil ((632 . 637) (#("age" 0 3 (fontified nil)) . -632) (632 . 635) (#("agent" 0 5 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -632) (undo-tree-id926 . -5) (undo-tree-id927 . -5) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) \...) nil (26402 29368 992841 0) 0 nil])
([nil nil ((638 . 651) (t 26402 29368 994836 475000)) nil (26402 29374 188862 979000) 0 nil])
([nil nil ((651 . 672)) nil (26402 29374 188861 797000) 0 nil])
([nil nil ((672 . 674)) nil (26402 29374 188857 78000) 0 nil])
([nil nil ((674 . 687) (t 26402 29374 190885 822000)) nil (26402 29388 346114 719000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 683) (undo-tree-id1377 . -4) 687) nil (26402 29388 346114 208000) 0 nil])
([nil nil ((683 . 699)) nil (26402 29388 346113 437000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -696) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) \...) nil (26402 29388 346111 182000) 0 nil])
([nil nil ((696 . 698)) nil (26402 29388 345948 536000) 0 nil])
([nil nil ((695 . 706) (#("dra" 0 3 (fontified nil)) . -695) (695 . 698) (#("drawInitial" 0 11 (fontified nil)) . -695) (695 . 706) (#("dra" 0 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -695) (undo-tree-id1104 . -3) (undo-tree-id1105 . -3) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) \...) nil (26402 29388 345945 881000) 0 nil])
([nil nil ((706 . 708)) nil (26402 29388 345881 830000) 0 nil])
([nil nil ((675 . 676) (t 26402 29388 348020 312000)) nil (26402 29398 96076 76000) 0 nil])
([nil nil ((675 . 687)) nil (26402 29398 96075 74000) 0 nil])
([nil nil ((675 . 683) (#("            " 0 12 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 675) (undo-tree-id1378 . -12) 687) nil (26402 29398 96074 132000) 0 nil])
([nil nil ((683 . 684)) nil (26402 29398 96065 25000) 0 nil])
([nil nil ((684 . 690)) nil (26402 29398 96064 314000) 0 nil])
([nil nil ((690 . 702)) nil (26402 29398 96059 354000) 0 nil])
([nil nil ((1605 . 1614) (t 26402 29398 98112 972000)) nil (26402 29446 312560 169000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1610) (undo-tree-id1409 . -4) 1614) nil (26402 29446 312559 267000) 0 nil])
([nil nil ((1610 . 1623)) nil (26402 29446 312557 885000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -1622) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) 1623) nil (26402 29446 312557 43000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-string-face fontified t)) . -1618) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -1619) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1620) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -1621) \...) nil (26402 29446 312552 64000) 0 nil])
([nil nil ((1618 . 1630)) nil (26402 29446 312546 924000) 0 nil])
([nil nil ((1630 . 1637)) nil (26402 29446 312546 453000) 0 nil])
([nil nil ((1637 . 1638)) nil (26402 29446 312546 122000) 0 nil])
([nil nil ((1638 . 1651)) nil (26402 29446 312545 601000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -1647) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1648) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) \...) nil (26402 29446 312543 678000) 0 nil])
([nil nil ((1647 . 1652)) nil (26402 29446 312532 767000) 0 nil])
([nil nil ((1647 . 1656) (#("che" 0 3 (fontified nil)) . -1647) (1647 . 1650) (#("checkHand" 0 9 (fontified nil)) . -1647) (1647 . 1656) (#("check" 0 5 (face font-lock-string-face fontified t)) . -1647) (undo-tree-id1379 . -5) (undo-tree-id1380 . -5) (undo-tree-id1381 . -5) (undo-tree-id1382 . -5) \...) nil (26402 29446 312531 144000) 0 nil])
([nil nil ((1656 . 1661)) nil (26402 29446 312517 729000) 0 nil])
([nil nil ((1659 . 1661)) nil (26402 29446 312512 239000) 0 nil])
([nil nil ((#(" \"Value:\", dealer.calculateHand(" 0 1 (fontified t) 1 9 (face font-lock-string-face fontified t) 9 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t)) . 1809) (undo-tree-id1426 . -32) 1841 (t 26402 29446 313571 607000)) nil (26402 29634 667001 9000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1809)) nil (26402 29634 667000 257000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1804 . 1805) (nil fontified nil 1804 . 1805) (nil fontified nil 1782 . 1804) (nil fontified nil 1774 . 1782) (nil fontified nil 1773 . 1774) (1773 . 1805)) nil (26402 29634 667000 27000) 0 nil])
([nil nil ((1805 . 1808)) nil (26402 29634 666999 496000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1843) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) 1844) nil (26402 29634 666999 125000) 0 nil])
([nil nil ((#(" \"Value:\", agent.calculateHand()" 0 1 (fontified t) 1 2 (face font-lock-string-face fontified t) 2 8 (face font-lock-string-face fontified t) 8 9 (face font-lock-string-face fontified t) 9 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t)) . 1945) (undo-tree-id1423 . -32)) nil (26402 29634 666997 643000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1935 . 1936) (nil fontified nil 1935 . 1936) (nil fontified nil 1934 . 1935) (nil fontified nil 1913 . 1934) (nil fontified nil 1912 . 1913) (nil fontified nil 1906 . 1912) (nil fontified nil 1905 . 1906) (nil fontified nil 1904 . 1905) (1904 . 1936)) nil (26402 29634 666996 751000) 0 nil])
([nil nil ((1936 . 1938)) nil (26402 29634 666995 859000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1978) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) \...) nil (26402 29634 666992 373000) 0 nil])
([nil nil ((#("\"Value:\", dealer.calculateHand()" 0 8 (face font-lock-string-face fontified t) 8 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) rear-nonsticky t fontified t) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t)) . 1774) (undo-tree-id1437 . -32) 1806 (t 26402 29634 669367 862000)) nil (26402 29683 998967 631000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1831 . 1832) (nil fontified nil 1831 . 1832) (nil fontified nil 1830 . 1831) (nil fontified nil 1808 . 1830) (nil fontified nil 1800 . 1808) (1800 . 1832)) nil (26402 29683 998966 479000) 0 nil])
([nil nil ((1832 . 1834)) nil (26402 29683 998965 868000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1774) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (#(" " 0 1 (fontified nil)) . 1775) (1775 . 1776) (#(" " 0 1 (fontified t)) . 1775) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) 1776) nil (26402 29683 998965 157000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1773) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) 1774) nil (26402 29683 998962 822000) 0 nil])
([nil nil ((#("\"Value:\", agent.calculateHand()" 0 1 (face font-lock-string-face fontified t) 1 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t) 8 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-2-face) fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . 1904) (undo-tree-id1428 . -28) (undo-tree-id1429 . -31) 1935) nil (26402 29683 998961 89000) 0 nil])
([nil nil ((nil fontified nil 1965 . 1966) (nil fontified nil 1964 . 1965) (nil fontified nil 1943 . 1964) (nil fontified nil 1942 . 1943) (nil fontified nil 1936 . 1942) (nil fontified nil 1935 . 1936) (1935 . 1966)) nil (26402 29683 998959 506000) 0 nil])
([nil nil ((1935 . 1936)) nil (26402 29683 998958 865000) 0 nil])
([nil nil ((1967 . 1968)) nil (26402 29683 998958 384000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1903) (#("," 0 1 (fontified t)) . 1903) (#(" " 0 1 (fontified t)) . 1903) (undo-tree-id1427 . -1)) nil (26402 29683 998954 607000) 0 nil])
([nil nil ((1794 . 1795) (t 26402 29684 839 375000)) nil (26402 29697 30761 752000) 0 nil])
([nil nil ((1831 . 1837) (t 26402 29697 32964 2000)) nil (26402 29721 241080 419000) 0 nil])
([nil nil ((1972 . 1975)) nil (26402 29721 241079 858000) 0 nil])
([nil nil ((1975 . 1978)) nil (26402 29721 241075 580000) 0 nil])
([nil nil ((885 . 898) (t 26402 29721 243195 599000)) nil (26402 54497 814741 843000) 0 nil])
([nil nil ((898 . 904)) nil (26402 54497 814741 302000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 903) (undo-tree-id1520 . -1) 904) nil (26402 54497 814740 811000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -898) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -899) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) \...) nil (26402 54497 814738 567000) 0 nil])
([nil nil ((898 . 919)) nil (26402 54497 814732 114000) 0 nil])
([nil nil ((919 . 932) (#("calculateHand" 0 13 (fontified nil)) . -919) (919 . 932)) nil (26402 54497 814731 613000) 0 nil])
([nil nil ((932 . 934)) nil (26402 54497 814731 143000) 0 nil])
([nil nil ((913 . 914)) nil (26402 54497 814730 872000) 0 nil])
([nil nil ((935 . 951)) nil (26402 54497 814730 451000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 0))) . -938) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (#("a" 0 1 (fontified t match-data (0 0))) . -939) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) \...) nil (26402 54497 814728 518000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 0))) . -937) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) 938) nil (26402 54497 814707 478000) 0 nil])
([nil nil ((937 . 946)) nil (26402 54497 814705 414000) 0 nil])
([nil nil ((942 . 948) (#("de" 0 2 (fontified nil)) . -942) (942 . 944) (#("Dealer" 0 6 (fontified nil)) . -942) (942 . 948) (#("deal" 0 4 (fontified t match-data (0 0))) . -942) (undo-tree-id1445 . -4) (undo-tree-id1446 . -4) (undo-tree-id1447 . -4) (undo-tree-id1448 . -4) \...) nil (26402 54497 814704 643000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -942) (undo-tree-id1439 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -943) (undo-tree-id1440 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -944) (undo-tree-id1441 . -1) (#("l" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -945) (undo-tree-id1442 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -946) (undo-tree-id1443 . -1) \...) nil (26402 54497 814701 847000) 0 nil])
([nil nil ((942 . 946)) nil (26402 54497 814697 810000) 0 nil])
([nil nil ((946 . 949)) nil (26402 54497 814697 449000) 0 nil])
([nil nil ((949 . 962)) nil (26402 54497 814697 169000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t match-data (0 0))) . -961) (undo-tree-id1438 . -1) 962) nil (26402 54497 814696 527000) 0 nil])
([nil nil ((961 . 962)) nil (26402 54497 814686 548000) 0 nil])
([nil nil ((962 . 969)) nil (26402 54497 814682 571000) 0 nil])
([nil nil ((997 . 1009) (t 26402 54497 816864 60000)) nil (26402 54504 135199 725000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1008) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) \...) nil (26402 55407 820057 802000) 0 nil])
([nil nil ((1008 . 1009)) nil (26402 55407 819982 520000) 0 nil])
([nil nil ((997 . 1009) (#("currentState" 0 12 (fontified nil)) . -997) (997 . 1009) (#("currentState" 0 12 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -997) (undo-tree-id1521 . -12) (undo-tree-id1522 . -12) (undo-tree-id1523 . -11) (undo-tree-id1524 . -11) (undo-tree-id1525 . -11) (undo-tree-id1526 . -11) \...) nil (26402 55407 819976 329000) 0 nil])
([nil nil ((1434 . 1439) (t 26402 55407 821730 80000)) nil (26402 55442 958542 235000) 0 nil])
([nil nil ((1439 . 1442)) nil (26402 55442 958541 213000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1439) (undo-tree-id1909 . -1) (#("p" 0 1 (fontified t)) . -1440) (undo-tree-id1910 . -1) (#(";" 0 1 (fontified t)) . -1441) (undo-tree-id1911 . -1) 1442) nil (26402 55442 958540 41000) 0 nil])
([nil nil ((1439 . 1449)) nil (26402 55442 958537 486000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -1448) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) 1449) nil (26402 55442 958536 414000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 1446) (undo-tree-id1900 . -2) (undo-tree-id1901 . -2) (undo-tree-id1902 . -2) (undo-tree-id1903 . -2) (undo-tree-id1904 . -2) 1448) nil (26402 55442 958533 408000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -1444) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1445) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) \...) nil (26402 55442 958527 798000) 0 nil])
([nil nil ((1444 . 1451)) nil (26402 55442 958521 766000) 0 nil])
([nil nil ((51 . 69) (1448 . 1448) (1448 . 1458) (#("Mon" 0 3 (fontified nil)) . 1448) (1448 . 1451) (#("MonteCarlo" 0 10 (fontified nil)) . -1448) (1448 . 1458) (#("Mon" 0 3 (fontified t)) . -1448) (undo-tree-id1886 . -3) (undo-tree-id1887 . -3) \...) nil (26402 55442 958520 384000) 0 nil])
([nil nil ((1476 . 1478)) nil (26402 55442 958515 635000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1477) (undo-tree-id1885 . -1) 1478) nil (26402 55442 958514 603000) 0 nil])
([nil nil ((#("MonteCarlo(" 0 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1466) (undo-tree-id1883 . -11) (undo-tree-id1884 . -11) 1477) nil (26402 55442 958512 559000) 0 nil])
([nil nil ((1466 . 1478)) nil (26402 55442 958497 591000) 0 nil])
([nil nil ((51 . 67)) nil (26402 55442 958492 752000) 0 nil])
([nil nil ((1546 . 1548) (t 26402 55442 960987 370000)) nil (26402 55450 522936 627000) 0 nil])
([nil nil ((1546 . 1552) (#("po" 0 2 (fontified nil)) . -1546) (1546 . 1548) (#("policy" 0 6 (fontified nil)) . -1546) (1546 . 1552) (#("po" 0 2 (fontified t)) . -1546) (undo-tree-id1994 . -2) (undo-tree-id1995 . -2) (undo-tree-id1996 . -2) (undo-tree-id1997 . -2) \...) nil (26402 55450 522935 375000) 0 nil])
([nil nil ((1575 . 1577)) nil (26402 55450 522932 910000) 0 nil])
([nil nil ((1575 . 1581) (#("po" 0 2 (fontified nil)) . -1575) (1575 . 1577) (#("policy" 0 6 (fontified nil)) . -1575) (1575 . 1581) (#("po" 0 2 (fontified t)) . -1575) (undo-tree-id1912 . -2) (undo-tree-id1913 . -2) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) \...) nil (26402 55450 522928 432000) 0 nil])
([nil nil ((885 . 893) (t 26403 28729 853614 908000)) nil (26403 29476 393914 64000) 0 nil])
([nil nil ((1129 . 1137) (#("        " 0 8 (fontified nil)) . 1128) (undo-tree-id73 . -8) (1127 . 1137)) nil (26403 29476 393913 407000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1133) (undo-tree-id72 . -4) 1137) nil (26403 29476 393912 256000) 0 nil])
([nil nil ((1133 . 1148)) nil (26403 29476 393911 392000) 0 nil])
([nil nil ((1148 . 1155)) nil (26403 29476 393910 997000) 0 nil])
([nil nil ((1155 . 1158)) nil (26403 29476 393910 599000) 0 nil])
([nil nil ((1158 . 1159)) nil (26403 29476 393910 244000) 0 nil])
([nil nil ((1159 . 1168)) nil (26403 29476 393909 799000) 0 nil])
([nil nil ((1168 . 1171)) nil (26403 29476 393909 320000) 0 nil])
([nil nil ((1171 . 1180)) nil (26403 29476 393908 826000) 0 nil])
([nil nil ((1180 . 1194)) nil (26403 29476 393908 386000) 0 nil])
([nil nil ((1194 . 1198)) nil (26403 29476 393907 996000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -1195) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -1196) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1197) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 1198) nil (26403 29476 393906 964000) 0 nil])
([nil nil ((1195 . 1210)) nil (26403 29476 393903 806000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -1207) (undo-tree-id63 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -1208) (undo-tree-id64 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1209) (undo-tree-id65 . -1) 1210) nil (26403 29476 393903 99000) 0 nil])
([nil nil ((1207 . 1218)) nil (26403 29476 393899 766000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -1216) (undo-tree-id61 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -1217) (undo-tree-id62 . -1) 1218) nil (26403 29476 393899 4000) 0 nil])
([nil nil ((1216 . 1219)) nil (26403 29476 393897 641000) 0 nil])
([nil nil ((1219 . 1228)) nil (26403 29476 393897 241000) 0 nil])
([nil nil ((1228 . 1229)) nil (26403 29476 393896 848000) 0 nil])
([nil nil ((1229 . 1235)) nil (26403 29476 393896 416000) 0 nil])
([nil nil ((1235 . 1236)) nil (26403 29476 393896 22000) 0 nil])
([nil nil ((1236 . 1240)) nil (26403 29476 393895 608000) 0 nil])
([nil nil ((1240 . 1241)) nil (26403 29476 393895 223000) 0 nil])
([nil nil ((1241 . 1246)) nil (26403 29476 393894 808000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -1244) (undo-tree-id59 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -1245) (undo-tree-id60 . -1) 1246) nil (26403 29476 393894 202000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 1243) (undo-tree-id58 . -1) 1244) nil (26403 29476 393892 723000) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-string-face fontified t)) . -1242) (undo-tree-id57 . -1) 1243) nil (26403 29476 393891 803000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 1241) (undo-tree-id56 . -1) 1242) nil (26403 29476 393890 802000) 0 nil])
([nil nil ((1241 . 1246)) nil (26403 29476 393889 483000) 0 nil])
([nil nil ((1246 . 1259)) nil (26403 29476 393888 943000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -1258) (undo-tree-id55 . -1) 1259) nil (26403 29476 393888 156000) 0 nil])
([nil nil ((1258 . 1259)) nil (26403 29476 393886 434000) 0 nil])
([nil nil ((1259 . 1268)) nil (26403 29476 393885 870000) 0 nil])
([nil nil ((1268 . 1288)) nil (26403 29476 393885 280000) 0 nil])
([nil nil ((1288 . 1294)) nil (26403 29476 393884 474000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 1293) (undo-tree-id54 . -1) 1294) nil (26403 29476 393883 432000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -1288) (undo-tree-id49 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -1289) (undo-tree-id50 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1290) (undo-tree-id51 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -1291) (undo-tree-id52 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -1292) (undo-tree-id53 . -1) 1293) nil (26403 29476 393881 124000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1155) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -1156) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("t" 0 1 (face py-builtins-face fontified t)) . -1157) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 1158) nil (26403 29476 393875 208000) 0 nil])
([nil nil ((1155 . 1159)) nil (26403 29476 393870 365000) 0 nil])
([nil nil ((1155 . 1159) (#("Non" 0 3 (fontified nil)) . -1155) (1155 . 1158) (#("None" 0 4 (face py-pseudo-keyword-face fontified t)) . -1155) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) 1159) nil (26403 29476 393869 520000) 0 nil])
([nil nil ((#("        :return: int: -1 if dealer wins" 0 39 (face font-lock-string-face fontified t)) . 1221) (undo-tree-id33 . -21)) nil (26403 29476 393867 354000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-string-face fontified t)) . 1221)) nil (26403 29476 393865 981000) 0 nil])
([nil nil ((#("                       1 if " 0 28 (face font-lock-string-face fontified t)) . 1221)) nil (26403 29476 393865 190000) 0 nil])
([nil nil ((1221 . 1229)) nil (26403 29477 543130 52000) 0 nil])
([nil nil ((1220 . 1221)) nil (26403 29495 566449 325000) 0 nil] [nil nil ((#("

    def checkWin(self) -> None:
        \"\"\"
        " 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t) 6 9 (face py-def-class-face fontified t) 9 10 (fontified t) 10 18 (face py-def-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 23 (face py-object-reference-face fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t) 24 28 (fontified t) 28 32 (face py-pseudo-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 32 34 (fontified t) 34 42 (fontified t) 42 43 (face font-lock-string-face syntax-table (15) fontified t) 43 44 (face font-lock-string-face syntax-table nil fontified t) 44 45 (face font-lock-string-face syntax-table nil fontified t) 45 46 (face font-lock-string-face fontified t) 46 54 (face font-lock-string-face fontified t)) . 1127) (undo-tree-id0 . -28) (undo-tree-id1 . -28) (undo-tree-id2 . -46) (undo-tree-id3 . -54) (undo-tree-id4 . -54) (undo-tree-id5 . -54) (undo-tree-id6 . -54) (undo-tree-id7 . -54) (undo-tree-id8 . -54) (undo-tree-id9 . -54) (undo-tree-id10 . -54) (undo-tree-id11 . -54) (undo-tree-id12 . -54) (undo-tree-id13 . -54) (undo-tree-id14 . -54) (undo-tree-id15 . -54) (undo-tree-id16 . -54) (undo-tree-id17 . -54) (undo-tree-id18 . -54) (undo-tree-id19 . -54) (undo-tree-id20 . -54) (undo-tree-id21 . -54) (undo-tree-id22 . -54) (undo-tree-id23 . -54) (undo-tree-id24 . -54) (undo-tree-id25 . -54) (undo-tree-id26 . -54) (undo-tree-id27 . -54) (undo-tree-id28 . -28) (undo-tree-id29 . -54) (undo-tree-id30 . -54) (undo-tree-id31 . -54) (undo-tree-id32 . -54) 1181) ((1127 . 1181)) (26403 29476 393860 498000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 1220) (undo-tree-id77 . -1) 1221) nil (26403 29495 566448 464000) 0 nil])
nil
([nil nil ((1220 . 1229)) nil (26403 29495 566447 28000) 0 nil])
([nil nil ((1229 . 1241)) nil (26403 29495 566446 346000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -1240) (undo-tree-id76 . -1) 1241) nil (26403 29495 566445 710000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 1239) (undo-tree-id75 . -1) 1240) nil (26403 29495 566444 10000) 0 nil])
([nil nil ((1239 . 1250)) nil (26403 29495 566442 242000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . -1249) (undo-tree-id74 . -1) 1250) nil (26403 29495 566440 883000) 0 nil])
([nil nil ((1249 . 1256)) nil (26403 29495 566432 546000) 0 nil])
([nil nil ((1256 . 1267)) nil (26403 29495 566431 775000) 0 nil])
([nil nil ((1267 . 1276)) nil (26403 29495 566430 671000) 0 nil])
([nil nil ((1276 . 1279)) nil (26403 29495 566426 333000) 0 nil])
([nil nil ((1279 . 1288) (t 26403 29495 688658 756000)) nil (26403 32045 76595 663000) 0 nil])
([nil nil ((1288 . 1300)) nil (26403 32045 76595 141000) 0 nil])
([nil nil ((1295 . 1304) (#("ch" 0 2 (fontified nil)) . -1295) (1295 . 1297) (#("checkHand" 0 9 (fontified nil)) . -1295) (1295 . 1304) (#("check" 0 5 (fontified t)) . -1295) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) 1300) nil (26403 32045 76594 308000) 0 nil])
([nil nil ((1304 . 1306)) nil (26403 32045 76591 182000) 0 nil])
([nil nil ((1280 . 1288) (#("        " 0 8 (fontified t)) . 1280)) nil (26403 32045 76590 621000) 0 nil])
([nil nil ((1288 . 1295)) nil (26403 32045 76590 100000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1294) (undo-tree-id78 . -1) 1295) nil (26403 32045 76589 392000) 0 nil])
([nil nil ((1294 . 1302)) nil (26403 32045 76580 177000) 0 nil])
([nil nil ((784 . 787) (#("Turn" 0 4 (face py-def-face fontified t)) . 784) (789 . 792) 784 (2098 . 2101) (#("Turn" 0 4 (fontified t)) . 2098) (2103 . 2106) 2094) nil (26403 32045 76574 474000) 0 nil])
([nil nil ((1322 . 1331) (t 26403 32045 199157 784000)) nil (26403 32224 111783 12000) 0 nil])
([nil nil ((1331 . 1336)) nil (26403 32224 111782 177000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1333) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1334) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("_" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1335) (undo-tree-id197 . -1) 1336) nil (26403 32224 111781 106000) 0 nil])
([nil nil ((1333 . 1341)) nil (26403 32224 111777 136000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1331) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("g" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1332) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("e" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1333) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1334) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1335) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("_" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1336) (undo-tree-id186 . -1) (#("h" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1337) (undo-tree-id187 . -1) (#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1338) (undo-tree-id188 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1339) (undo-tree-id189 . -1) (#("d" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1340) (undo-tree-id190 . -1) 1341) nil (26403 32224 111775 231000) 0 nil])
([nil nil ((1323 . 1331) (#("        " 0 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 1323) (undo-tree-id170 . -8)) nil (26403 32224 111763 181000) 0 nil])
([nil nil ((1331 . 1335)) nil (26403 32224 111762 262000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1334) (undo-tree-id169 . -1) 1335) nil (26403 32224 111761 684000) 0 nil])
([nil nil ((1334 . 1343)) nil (26403 32224 111760 582000) 0 nil])
([nil nil ((1343 . 1362)) nil (26403 32224 111760 164000) 0 nil])
([nil nil ((1362 . 1363)) nil (26403 32224 111759 756000) 0 nil])
([nil nil ((1363 . 1376)) nil (26403 32224 111759 324000) 0 nil])
([nil nil ((1356 . 1361)) nil (26403 32224 111758 901000) 0 nil])
([nil nil ((#("        i=0" 0 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 8 9 (face py-variable-name-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 9 10 (face font-lock-operator-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 10 11 (face py-number-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 1323)) nil (26403 32224 111758 426000) 0 nil])
([nil nil ((1323 . 1331)) nil (26403 32224 111757 765000) 0 nil])
([nil nil ((1331 . 1347)) nil (26403 32224 111757 201000) 0 nil])
([nil nil ((1394 . 1415)) nil (26403 32224 111756 402000) 0 nil])
([nil nil ((1415 . 1424)) nil (26403 32224 111755 642000) 0 nil])
([nil nil ((1419 . 1432) (#("cal" 0 3 (fontified nil)) . -1419) (1419 . 1422) (#("calculateHand" 0 13 (fontified nil)) . -1419) (1419 . 1432) (#("calcu" 0 5 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1419) (undo-tree-id82 . -5) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -5) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -5) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (undo-tree-id165 . -5) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) 1424) nil (26403 32224 111751 916000) 0 nil])
([nil nil ((1432 . 1435)) nil (26403 32224 111560 473000) 0 nil])
([nil nil ((1436 . 1448) (#("        " 0 8 (fontified t)) . 1436) (t 26403 32224 235291 197000)) nil (26403 32978 651179 737000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1444) (undo-tree-id14 . -4) 1448) nil (26403 32978 651178 618000) 0 nil])
([nil nil ((1444 . 1447)) nil (26403 32978 651177 699000) 0 nil])
([nil nil ((1447 . 1464)) nil (26403 32978 651177 281000) 0 nil])
([nil nil ((1464 . 1465)) nil (26403 32978 651176 879000) 0 nil])
([nil nil ((1465 . 1478)) nil (26403 32978 651176 272000) 0 nil])
([nil nil ((1478 . 1479)) nil (26403 32978 651175 685000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1478) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 1479) nil (26403 32978 651174 904000) 0 nil])
([nil nil ((1478 . 1497)) nil (26403 32978 651172 953000) 0 nil])
([nil nil ((1497 . 1498)) nil (26403 32978 651172 183000) 0 nil])
([nil nil ((1498 . 1499)) nil (26403 32978 651171 531000) 0 nil])
([nil nil ((1499 . 1516)) nil (26403 32978 651171 104000) 0 nil])
([nil nil ((1516 . 1537)) nil (26403 32978 651170 530000) 0 nil])
([nil nil ((1537 . 1558)) nil (26403 32978 651169 687000) 0 nil])
([nil nil ((1558 . 1572)) nil (26403 32978 651168 940000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -1571) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 1572) nil (26403 32978 651167 946000) 0 nil])
([nil nil ((1571 . 1574)) nil (26403 32978 651165 823000) 0 nil])
([nil nil ((1574 . 1591)) nil (26403 32978 651164 969000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1587) (undo-tree-id8 . -4) 1591) nil (26403 32978 651163 929000) 0 nil])
([nil nil ((1575 . 1591) (#("            " 0 12 (fontified t)) . 1575) (undo-tree-id4 . -12) (undo-tree-id5 . -12) (undo-tree-id6 . -12) (undo-tree-id7 . -12) 1587) nil (26403 32978 651162 560000) 0 nil])
([nil nil ((1591 . 1597)) nil (26403 32978 651160 154000) 0 nil])
([nil nil ((1591 . 1597) (#("ret" 0 3 (fontified nil)) . -1591) (1591 . 1594) (#("return" 0 6 (face font-lock-keyword-face fontified t)) . -1591) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6) 1597) nil (26403 32978 651159 184000) 0 nil])
([nil nil ((1597 . 1614)) nil (26403 32978 651156 22000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1610) (undo-tree-id0 . -4) 1614) nil (26403 32978 651152 957000) 0 nil])
([nil nil ((1587 . 1588) (t 26403 32978 773364 262000)) nil (26403 35219 302439 525000) 0 nil])
([nil nil ((1575 . 1591) (#("            " 0 12 (fontified t)) . 1575) (undo-tree-id62 . -12) 1587) nil (26403 35219 302438 493000) 0 nil])
([nil nil ((1596 . 1602) (#("return" 0 6 (face font-lock-keyword-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1596) (undo-tree-id61 . -6) 1602) nil (26403 35219 302437 369000) 0 nil])
([nil nil ((1592 . 1608) (#("    " 0 4 (fontified t)) . 1592) (undo-tree-id59 . -4) (undo-tree-id60 . -4)) nil (26403 35219 302436 262000) 0 nil])
([nil nil ((1591 . 1592)) nil (26403 35219 302434 960000) 0 nil])
([nil nil ((1592 . 1593)) nil (26403 35219 302434 243000) 0 nil])
([nil nil ((1593 . 1602)) nil (26403 35219 302433 88000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-comment-face fontified t)) . -1598) (undo-tree-id55 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -1599) (undo-tree-id56 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -1600) (undo-tree-id57 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1601) (undo-tree-id58 . -1) 1602) nil (26403 35219 302431 855000) 0 nil])
([nil nil ((1598 . 1605)) nil (26403 35219 302428 739000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 1604) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 1605) nil (26403 35219 302427 812000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -1598) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("g" 0 1 (face font-lock-comment-face fontified t)) . -1599) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1600) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -1601) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1602) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1603) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 1604) nil (26403 35219 302425 508000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 1597) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 1598) nil (26403 35219 302415 154000) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-comment-face fontified t)) . -1593) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1594) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -1595) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -1596) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 1597) nil (26403 35219 302412 239000) 0 nil])
([nil nil ((1593 . 1614)) nil (26403 35219 302405 398000) 0 nil])
([nil nil ((1614 . 1626)) nil (26403 35219 302404 737000) 0 nil])
([nil nil ((1322 . 1331)) nil (26403 35219 302403 855000) 0 nil])
([nil nil ((#("        agent_hands = []" 0 8 (fontified t) 8 19 (face py-variable-name-face fontified t) 19 20 (fontified t) 20 21 (face font-lock-operator-face fontified t) 21 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1332)) nil (26403 35219 302402 961000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1332)) nil (26403 35219 302402 19000) 0 nil])
([nil nil ((#("        for agent in self.agents:" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 18 (fontified t) 18 20 (face font-lock-keyword-face fontified t) 20 21 (fontified t) 21 25 (face py-object-reference-face fontified t) 25 33 (fontified t)) . 1332)) nil (26403 35219 302401 88000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1332)) nil (26403 35219 302400 333000) 0 nil])
([nil nil ((#("            agent_hands.append(agent.calculateHand())" 0 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-2-face) fontified t) 51 52 (face (rainbow-delimiters-depth-2-face) fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1332)) nil (26403 35219 302399 503000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1332)) nil (26403 35219 302398 599000) 0 nil])
([nil nil ((#("        if dealer_hand == 21:" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 26 (fontified t) 26 28 (face py-number-face fontified t) 28 29 (fontified t)) . 1332)) nil (26403 35219 302397 687000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1332)) nil (26403 35219 302396 930000) 0 nil])
([nil nil ((#("            if 21 in agent_hands:" 0 12 (fontified t) 12 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 17 (face py-number-face fontified t) 17 18 (fontified t) 18 20 (face font-lock-keyword-face fontified t) 20 33 (fontified t)) . 1332)) nil (26403 35219 302395 968000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1332)) nil (26403 35219 302395 370000) 0 nil])
([nil nil ((#("                print(\"DRAW for one of the agents (Figure out which one)\")" 0 16 (fontified t) 16 21 (face py-builtins-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 73 (face font-lock-string-face fontified t) 73 74 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1332) (undo-tree-id19 . -22)) nil (26403 35219 302394 713000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1332)) nil (26403 35219 302393 484000) 0 nil])
([nil nil ((#("                # Update the agent's reward somehow" 0 16 (fontified t) 16 51 (face font-lock-comment-face fontified t)) . 1332) (undo-tree-id15 . -48) (undo-tree-id16 . -18) (undo-tree-id17 . -18) (undo-tree-id18 . -48)) nil (26403 35219 302392 364000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1332)) nil (26403 35219 302381 172000) 0 nil])
([nil nil ((#("                return" 0 16 (fontified t) 16 22 (face font-lock-keyword-face fontified t)) . 1332)) nil (26403 35219 302379 798000) 0 nil])
([nil nil ((1332 . 1340)) nil (26403 35219 302379 68000) 0 nil])
([nil nil ((1340 . 1359)) nil (26403 35219 302378 332000) 0 nil])
([nil nil ((1359 . 1360)) nil (26403 35219 302377 601000) 0 nil])
([nil nil ((1353 . 1358)) nil (26403 35219 302376 702000) 0 nil])
([nil nil ((1365 . 1378)) nil (26403 35219 302375 551000) 0 nil])
([nil nil ((1378 . 1381)) nil (26403 35219 302371 414000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1378) (undo-tree-id79 . -1) (#("." 0 1 (fontified t)) . -1379) (undo-tree-id80 . -1) (#("." 0 1 (fontified t)) . -1380) (undo-tree-id81 . -1) 1381 (t 26403 35219 431093 598000)) nil (26403 35235 261311 966000) 0 nil])
([nil nil ((1378 . 1383)) nil (26403 35235 261309 913000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1378) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("h" 0 1 (fontified t)) . -1379) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("r" 0 1 (fontified t)) . -1380) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("o" 0 1 (fontified t)) . -1381) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("w" 0 1 (fontified t)) . -1382) (undo-tree-id78 . -1) 1383) nil (26403 35235 261308 684000) 0 nil])
([nil nil ((1378 . 1389)) nil (26403 35235 261268 266000) 0 nil])
([nil nil ((1384 . 1394) (#("Val" 0 3 (fontified nil)) . -1384) (1384 . 1387) (#("ValueError" 0 10 (fontified nil)) . -1384) (1384 . 1394) (#("Value" 0 5 (fontified t)) . -1384) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) 1389) nil (26403 35235 261266 238000) 0 nil])
([nil nil ((1394 . 1412)) nil (26403 35235 261255 63000) 0 nil])
([nil nil ((1412 . 1413)) nil (26403 35235 261251 130000) 0 nil])
([nil nil ((#("    table.add(Agent(policy))" 0 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1862) (undo-tree-id1 . -28) (undo-tree-id2 . -28) (undo-tree-id3 . -28) (undo-tree-id4 . -28) (undo-tree-id5 . -28) (undo-tree-id6 . -28) (undo-tree-id7 . -28) (undo-tree-id8 . -28) (undo-tree-id9 . -28) (undo-tree-id10 . -28) (undo-tree-id11 . -28) (undo-tree-id12 . -28) (undo-tree-id13 . -28) (undo-tree-id14 . -28) (undo-tree-id15 . -28) (undo-tree-id16 . -28) (undo-tree-id17 . -28) (undo-tree-id18 . -28) (undo-tree-id19 . -28) (undo-tree-id20 . -28) (undo-tree-id21 . -28) (undo-tree-id22 . -28) (undo-tree-id23 . -28) (undo-tree-id24 . -28) (undo-tree-id25 . -28) (undo-tree-id26 . -28) (undo-tree-id27 . -28) (undo-tree-id28 . -28) (undo-tree-id29 . -28) (undo-tree-id30 . -28) (undo-tree-id31 . -28) (undo-tree-id32 . -28) (undo-tree-id33 . -28) (undo-tree-id34 . -28) (undo-tree-id35 . -28) (undo-tree-id36 . -28) (undo-tree-id37 . -28) (undo-tree-id38 . -28) (undo-tree-id39 . -28) (undo-tree-id40 . -28) (undo-tree-id41 . -28) (undo-tree-id42 . -28) (undo-tree-id43 . -28) (undo-tree-id44 . -28) (undo-tree-id45 . -28) (undo-tree-id46 . -28) (undo-tree-id47 . -28) (undo-tree-id48 . -28) (undo-tree-id49 . -28) (undo-tree-id50 . -28) (undo-tree-id51 . -28) (undo-tree-id52 . -28) (undo-tree-id53 . -28) (undo-tree-id54 . -28) (undo-tree-id55 . -28) (undo-tree-id56 . -28) (undo-tree-id57 . -28) (undo-tree-id58 . -28) (undo-tree-id59 . -28) (undo-tree-id60 . -28) (undo-tree-id61 . -28) (undo-tree-id62 . -28) (undo-tree-id63 . -28) (undo-tree-id64 . -28) (undo-tree-id65 . -28) (undo-tree-id66 . -28) (undo-tree-id67 . -28) (undo-tree-id68 . -28) (undo-tree-id69 . -28) (undo-tree-id70 . -28) (undo-tree-id71 . -28) (undo-tree-id72 . -28) (undo-tree-id73 . -28) (undo-tree-id74 . -28) (undo-tree-id75 . -28) (undo-tree-id76 . -28) (undo-tree-id77 . -28) (undo-tree-id78 . -28) (undo-tree-id79 . -28) (undo-tree-id80 . -28) (undo-tree-id81 . -28) (t 26404 54495 812661 760000)) nil (26415 16666 738874 490000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1862) (undo-tree-id0 . -1)) nil (26415 16666 738840 65000) 0 nil])
([nil nil ((886 . 895) (t 26415 16666 742638 778000)) nil (26415 17437 626740 733000) 0 nil])
([nil nil ((895 . 916)) nil (26415 17437 626740 412000) 0 nil])
([nil nil ((916 . 931)) nil (26415 17437 626739 741000) 0 nil])
([nil nil ((926 . 939) (#("ca" 0 2 (fontified nil)) . -926) (926 . 928) (#("calculateHand" 0 13 (fontified nil)) . -926) (926 . 939) (#("calcu" 0 5 (fontified t)) . -926) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (undo-tree-id102 . -5) (undo-tree-id103 . -5) 931) nil (26415 17437 626738 889000) 0 nil])
([nil nil ((939 . 941)) nil (26415 17437 626736 655000) 0 nil])
([nil nil ((941 . 950)) nil (26415 17437 626736 194000) 0 nil])
([nil nil ((950 . 971)) nil (26415 17437 626735 773000) 0 nil])
([nil nil ((971 . 974)) nil (26415 17437 626735 393000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -972) (undo-tree-id98 . -1) (#("." 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -973) (undo-tree-id99 . -1) 974) nil (26415 17437 626734 962000) 0 nil])
([nil nil ((972 . 975)) nil (26415 17437 626733 950000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -974) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 975) nil (26415 17437 626733 519000) 0 nil])
([nil nil ((974 . 983)) nil (26415 17437 626731 535000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -981) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -982) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) 983) nil (26415 17437 626730 804000) 0 nil])
([nil nil ((981 . 984)) nil (26415 17437 626726 797000) 0 nil])
([nil nil ((981 . 994) (#("ca" 0 2 (fontified nil)) . -981) (981 . 983) (#("calculateHand" 0 13 (fontified nil)) . -981) (981 . 994) (#("cal" 0 3 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -981) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) 984) nil (26415 17437 626725 294000) 0 nil])
([nil nil ((994 . 995)) nil (26415 17437 626709 584000) 0 nil])
([nil nil ((995 . 1000)) nil (26415 17437 626700 407000) 0 nil])
([nil nil ((1000 . 1009) (t 26415 17437 630625 319000)) nil (26415 18358 637149 860000) 0 nil])
([nil nil ((1009 . 1030)) nil (26415 18358 637148 968000) 0 nil])
([nil nil ((1030 . 1051)) nil (26415 18358 637148 597000) 0 nil])
([nil nil ((1051 . 1052)) nil (26415 18358 637147 846000) 0 nil])
([nil nil ((1052 . 1060)) nil (26415 18358 637146 834000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 1059) (undo-tree-id537 . -1) 1060) nil (26415 18358 637146 133000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1058) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) 1059) nil (26415 18358 637145 111000) 0 nil])
([nil nil ((1058 . 1079)) nil (26415 18358 637142 626000) 0 nil])
([nil nil ((1079 . 1090)) nil (26415 18358 637142 25000) 0 nil])
([nil nil ((1090 . 1099)) nil (26415 18358 637141 494000) 0 nil])
([nil nil ((1099 . 1113)) nil (26415 18358 637140 782000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1112) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) 1113) nil (26415 18358 637140 161000) 0 nil])
([nil nil ((1112 . 1117)) nil (26415 18358 637138 288000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1116) (undo-tree-id527 . -1) 1117) nil (26415 18358 637136 975000) 0 nil])
([nil nil ((1116 . 1117)) nil (26415 18358 637135 973000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1116) (undo-tree-id526 . -1) 1117) nil (26415 18358 637135 563000) 0 nil])
([nil nil ((1116 . 1123)) nil (26415 18358 637134 420000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1119) (undo-tree-id522 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1120) (undo-tree-id523 . -1) (#("n" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1121) (undo-tree-id524 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1122) (undo-tree-id525 . -1) 1123) nil (26415 18358 637133 539000) 0 nil])
([nil nil ((1119 . 1123)) nil (26415 18358 637130 493000) 0 nil])
([nil nil ((1123 . 1124)) nil (26415 18358 637129 952000) 0 nil])
([nil nil ((1124 . 1137)) nil (26415 18358 637129 501000) 0 nil])
([nil nil ((1137 . 1142)) nil (26415 18358 637128 780000) 0 nil])
([nil nil ((1142 . 1148)) nil (26415 18358 637128 149000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1143) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1144) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1145) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1146) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1147) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) 1148) nil (26415 18358 637126 826000) 0 nil])
([nil nil ((#("            agent." 0 18 (fontified t match-data (0 3 0 1 1 2 2 3))) . 1125) (undo-tree-id498 . -18) (undo-tree-id499 . -18) (undo-tree-id500 . -18) (undo-tree-id501 . -18)) nil (26415 18358 637118 260000) 0 nil])
([nil nil ((1125 . 1137)) nil (26415 18358 637116 186000) 0 nil])
([nil nil ((1137 . 1140)) nil (26415 18358 637115 615000) 0 nil])
([nil nil ((1140 . 1153)) nil (26415 18358 637115 104000) 0 nil])
([nil nil ((1153 . 1154)) nil (26415 18358 637114 453000) 0 nil])
([nil nil ((1154 . 1173)) nil (26415 18358 637114 72000) 0 nil])
([nil nil ((#("    def checkWin(self) -> None:
        \"\"\"
        Checks whether someone has won or lost.
        Updates an agent's policy accordingly.
        \"\"\"
        dealer_hand = dealer.checkHand()
        
        for agent in self.agents:
            raise ValueError(\"NOt Implemented\")
            
" 0 4 (fontified t) 4 7 (face py-def-class-face fontified t) 7 8 (fontified t) 8 16 (face py-def-face fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 21 (face py-object-reference-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 26 (fontified t) 26 30 (face py-pseudo-keyword-face fontified t) 30 40 (fontified t) 40 41 (face font-lock-string-face syntax-table (15) fontified t) 41 42 (face font-lock-string-face syntax-table nil fontified t) 42 43 (face font-lock-string-face syntax-table nil fontified t) 43 147 (face font-lock-string-face fontified t) 147 148 (face font-lock-string-face syntax-table nil fontified t) 148 149 (face font-lock-string-face syntax-table nil fontified t) 149 150 (face font-lock-string-face syntax-table (15) fontified t) 150 159 (fontified t) 159 170 (face py-variable-name-face fontified t) 170 171 (fontified t) 171 172 (face font-lock-operator-face fontified t) 172 189 (fontified t) 189 190 (face (rainbow-delimiters-depth-1-face) fontified t) 190 191 (face (rainbow-delimiters-depth-1-face) fontified t) 191 209 (fontified t) 209 212 (face font-lock-keyword-face fontified t) 212 219 (fontified t) 219 221 (face font-lock-keyword-face fontified t) 221 222 (fontified t) 222 226 (face py-object-reference-face fontified t) 226 247 (fontified t) 247 252 (face font-lock-keyword-face fontified t) 252 253 (fontified t) 253 263 (face py-exception-name-face fontified t) 263 264 (face (rainbow-delimiters-depth-1-face) fontified t) 264 281 (face font-lock-string-face fontified t) 281 282 (face (rainbow-delimiters-depth-1-face) fontified t) 282 296 (fontified t)) . 1418) (undo-tree-id492 . -296) (undo-tree-id493 . -234) (undo-tree-id494 . -234) (undo-tree-id495 . -234) (undo-tree-id496 . -296) (undo-tree-id497 . -296)) nil (26415 18358 637113 391000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1417) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) 1418) nil (26415 18358 637111 56000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t)) . -1599) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (#("a" 0 1 (fontified t)) . -1600) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#("n" 0 1 (fontified t)) . -1601) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#("d" 0 1 (fontified t)) . -1602) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) 1603) nil (26415 18358 637101 358000) 0 nil])
([nil nil ((#("            # Agent state update" 0 12 (fontified t match-data (0 3 0 1 1 2 2 3)) 12 32 (face font-lock-comment-face fontified t match-data (0 3 0 1 1 2 2 3))) . 1141) (undo-tree-id546 . -32) (undo-tree-id547 . -32) (undo-tree-id548 . -32) (t 26415 18358 640221 965000)) nil (26415 19973 356376 266000) 0 nil])
([nil nil ((#("            ..." 0 15 (fontified t match-data (0 3 0 1 1 2 2 3))) . 1125)) nil (26415 19973 356374 463000) 0 nil])
([nil nil ((1125 . 1137)) nil (26415 19973 356374 203000) 0 nil])
([nil nil ((1137 . 1148)) nil (26415 19973 356373 782000) 0 nil])
([nil nil ((1143 . 1154) (#("st" 0 2 (fontified nil)) . -1143) (1143 . 1145) (#("stateUpdate" 0 11 (fontified nil)) . -1143) (1143 . 1154) (#("state" 0 5 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1143) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . -5) 1148) nil (26415 19973 356372 399000) 0 nil])
([nil nil ((1154 . 1163)) nil (26415 19973 356369 884000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1162) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) 1163) nil (26415 19973 356368 903000) 0 nil])
([nil nil ((1162 . 1171)) nil (26415 19973 356353 704000) 0 nil])
([nil nil ((1171 . 1172)) nil (26415 19973 356349 706000) 0 nil])
([nil nil ((1173 . 1185) (t 26415 19973 359097 18000)) nil (26415 20011 849688 115000) 0 nil])
([nil nil ((1173 . 1181) (#("            " 0 12 (fontified t match-data (0 3 0 1 1 2 2 3))) . 1173) (undo-tree-id577 . -12) 1185) nil (26415 20011 849687 594000) 0 nil])
([nil nil ((1181 . 1195)) nil (26415 20011 849687 33000) 0 nil])
([nil nil ((1184 . 1200) (#("deal" 0 4 (fontified nil)) . -1184) (1184 . 1188) (#("dealer_hand_full" 0 16 (fontified nil)) . -1184) (1184 . 1200) (#("dealer_hand" 0 11 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1184) (undo-tree-id573 . -11) (undo-tree-id574 . -11) (undo-tree-id575 . -11) (undo-tree-id576 . -11) 1195) nil (26415 20011 849686 271000) 0 nil])
([nil nil ((1200 . 1206)) nil (26415 20011 849684 488000) 0 nil])
([nil nil ((1206 . 1207)) nil (26415 20011 849684 197000) 0 nil])
([nil nil ((1207 . 1220)) nil (26415 20011 849683 957000) 0 nil])
([nil nil ((1220 . 1241)) nil (26415 20011 849683 646000) 0 nil])
([nil nil ((1241 . 1244)) nil (26415 20011 849683 396000) 0 nil])
([nil nil ((1244 . 1245)) nil (26415 20011 849683 85000) 0 nil])
([nil nil ((1245 . 1262)) nil (26415 20011 849682 835000) 0 nil])
([nil nil ((1262 . 1267)) nil (26415 20011 849682 474000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1266) (undo-tree-id572 . -1) 1267) nil (26415 20011 849681 973000) 0 nil])
([nil nil ((1266 . 1273)) nil (26415 20011 849681 192000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1270) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (#("r" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1271) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (#("d" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1272) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) 1273) nil (26415 20011 849680 490000) 0 nil])
([nil nil ((1270 . 1277)) nil (26415 20011 849675 882000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1274) (undo-tree-id557 . -1) (#("u" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1275) (undo-tree-id558 . -1) (#("p" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1276) (undo-tree-id559 . -1) 1277) nil (26415 20011 849675 230000) 0 nil])
([nil nil ((1274 . 1277)) nil (26415 20011 849673 948000) 0 nil])
([nil nil ((1268 . 1280) (#("re" 0 2 (fontified nil)) . -1268) (1268 . 1270) (#("rewardUpdate" 0 12 (fontified nil)) . -1268) (1268 . 1280) (#("rewardUpd" 0 9 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1268) (undo-tree-id553 . -6) (undo-tree-id554 . -9) (undo-tree-id555 . -6) (undo-tree-id556 . -9) 1277) nil (26415 20011 849673 147000) 0 nil])
([nil nil ((1280 . 1286)) nil (26415 20011 849670 682000) 0 nil])
([nil nil ((1286 . 1291)) nil (26415 20011 849670 411000) 0 nil])
([nil nil ((1287 . 1298) (#("dr" 0 2 (fontified nil)) . -1287) (1287 . 1289) (#("draw_reward" 0 11 (fontified nil)) . -1287) (1287 . 1298) (#("draw" 0 4 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1287) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) 1291) nil (26415 20011 849669 540000) 0 nil])
([nil nil ((1298 . 1299)) nil (26415 20013 965065 511000) 0 nil])
([nil nil ((1245 . 1262)) nil (26415 20040 11237 849000) 0 nil] [nil nil ((#("            for agent in self.agents:" 0 12 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 12 15 (face font-lock-keyword-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 15 22 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 22 24 (face font-lock-keyword-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 24 25 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 25 29 (face py-object-reference-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 29 37 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . 1208)) ((1208 . 1245)) (26415 20013 512898 151000) 0 nil])
([nil nil ((1262 . 1273)) nil (26415 20040 11237 358000) 0 nil])
([nil nil ((1208 . 1220)) ((#("            " 0 12 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . 1208) (undo-tree-id588 . -12) (undo-tree-id589 . -12) (undo-tree-id590 . -12) (undo-tree-id591 . -12) (undo-tree-id592 . -12) (undo-tree-id593 . -12) (undo-tree-id594 . -12) (undo-tree-id595 . -12) (undo-tree-id596 . -12) (undo-tree-id597 . -12) (undo-tree-id598 . -12) (undo-tree-id599 . -12) (undo-tree-id600 . -12) (undo-tree-id601 . -12) (undo-tree-id602 . -12) (undo-tree-id603 . -12) (undo-tree-id604 . -12) (undo-tree-id605 . -12) (undo-tree-id606 . -12) (undo-tree-id607 . -12)) (26415 20012 880928 665000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . 1272) (undo-tree-id802 . -1) 1273) nil (26415 20040 11236 967000) 0 nil])
([nil nil ((1220 . 1232)) ((#("if agent in " 0 2 (face font-lock-keyword-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 2 9 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 9 11 (face font-lock-keyword-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 11 12 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . 1220) (undo-tree-id578 . -11) (undo-tree-id579 . -9) (undo-tree-id580 . -11) (undo-tree-id581 . -12) (undo-tree-id582 . -12) (undo-tree-id583 . -12) (undo-tree-id584 . -12) (undo-tree-id585 . -12) (undo-tree-id586 . -12) (undo-tree-id587 . -12)) (26415 20011 849654 902000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1270) (undo-tree-id800 . -1) (#("n" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1271) (undo-tree-id801 . -1) 1272) nil (26415 20040 11235 915000) 0 nil])
nil
([nil nil ((1270 . 1274)) nil (26415 20040 11234 914000) 0 nil])
([nil nil ((1274 . 1281)) nil (26415 20040 11234 593000) 0 nil])
([nil nil ((1274 . 1289) (#("ini" 0 3 (fontified nil)) . -1274) (1274 . 1277) (#("initial_winners" 0 15 (fontified nil)) . -1274) (1274 . 1289) (#("initial" 0 7 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1274) (undo-tree-id796 . -7) (undo-tree-id797 . -7) (undo-tree-id798 . -7) (undo-tree-id799 . -7) 1281) nil (26415 20040 11233 872000) 0 nil])
([nil nil ((1289 . 1290)) nil (26415 20040 11232 58000) 0 nil])
([nil nil ((1291 . 1311) (#("                " 0 16 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . 1291) 1335) nil (26415 20040 11231 447000) 0 nil])
([nil nil ((1348 . 1369)) nil (26415 20040 11230 906000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1365) (undo-tree-id795 . -4) 1369) nil (26415 20040 11230 505000) 0 nil])
([nil nil ((1365 . 1369)) nil (26415 20040 11229 694000) 0 nil])
([nil nil ((1369 . 1370)) nil (26415 20040 11229 423000) 0 nil])
([nil nil ((1370 . 1391)) nil (26415 20040 11229 153000) 0 nil])
([nil nil ((1391 . 1397)) nil (26415 20040 11228 882000) 0 nil])
([nil nil ((1397 . 1403)) nil (26415 20040 11228 531000) 0 nil])
([nil nil ((1397 . 1409) (#("re" 0 2 (fontified nil)) . -1397) (1397 . 1399) (#("rewardUpdate" 0 12 (fontified nil)) . -1397) (1397 . 1409) (#("reward" 0 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1397) (undo-tree-id791 . -6) (undo-tree-id792 . -6) (undo-tree-id793 . -6) (undo-tree-id794 . -6) 1403) nil (26415 20040 11227 590000) 0 nil])
([nil nil ((1409 . 1419)) nil (26415 20040 11137 981000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1418) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) 1419) nil (26415 20040 11136 969000) 0 nil])
([nil nil ((1418 . 1420)) nil (26415 20040 11122 491000) 0 nil])
([nil nil ((1416 . 1427) (#("loss" 0 4 (fontified nil)) . -1416) (1416 . 1420) (#("loss_reward" 0 11 (fontified nil)) . -1416) (1416 . 1427) (#("loss" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1416) (undo-tree-id608 . -2) (undo-tree-id609 . -4) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (undo-tree-id615 . -2) (undo-tree-id616 . -2) (undo-tree-id617 . -2) (undo-tree-id618 . -2) (undo-tree-id619 . -2) (undo-tree-id620 . -2) (undo-tree-id621 . -2) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -2) (undo-tree-id627 . -2) (undo-tree-id628 . -2) (undo-tree-id629 . -2) (undo-tree-id630 . -2) (undo-tree-id631 . -2) (undo-tree-id632 . -2) (undo-tree-id633 . -2) (undo-tree-id634 . -2) (undo-tree-id635 . -2) (undo-tree-id636 . -2) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) (undo-tree-id651 . -2) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -2) (undo-tree-id657 . -2) (undo-tree-id658 . -2) (undo-tree-id659 . -2) (undo-tree-id660 . -2) (undo-tree-id661 . -2) (undo-tree-id662 . -2) (undo-tree-id663 . -2) (undo-tree-id664 . -2) (undo-tree-id665 . -2) (undo-tree-id666 . -2) (undo-tree-id667 . -2) (undo-tree-id668 . -2) (undo-tree-id669 . -2) (undo-tree-id670 . -2) (undo-tree-id671 . -2) (undo-tree-id672 . -2) (undo-tree-id673 . -2) (undo-tree-id674 . -2) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -2) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -3) (undo-tree-id688 . -3) (undo-tree-id689 . -3) (undo-tree-id690 . -3) (undo-tree-id691 . -3) (undo-tree-id692 . -3) (undo-tree-id693 . -3) (undo-tree-id694 . -3) (undo-tree-id695 . -3) (undo-tree-id696 . -3) (undo-tree-id697 . -3) (undo-tree-id698 . -3) (undo-tree-id699 . -3) (undo-tree-id700 . -3) (undo-tree-id701 . -3) (undo-tree-id702 . -3) (undo-tree-id703 . -3) (undo-tree-id704 . -3) (undo-tree-id705 . -3) (undo-tree-id706 . -3) (undo-tree-id707 . -3) (undo-tree-id708 . -3) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (undo-tree-id732 . -4) (undo-tree-id733 . -4) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -4) (undo-tree-id741 . -4) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) 1420) nil (26415 20040 11120 57000) 0 nil])
([nil nil ((1427 . 1428)) nil (26415 20040 11053 341000) 0 nil])
([nil nil ((1428 . 1449) (t 26415 20040 13902 945000)) nil (26415 20141 29711 844000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1445) (undo-tree-id1161 . -4) 1449) nil (26415 20141 29711 383000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1441) (undo-tree-id1160 . -4) 1445) nil (26415 20141 29710 692000) 0 nil])
([nil nil ((1441 . 1447)) nil (26415 20141 29709 950000) 0 nil])
([nil nil ((1441 . 1447) (#("ret" 0 3 (fontified nil)) . -1441) (1441 . 1444) (#("return" 0 6 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1441) (undo-tree-id1156 . -6) (undo-tree-id1157 . -6) (undo-tree-id1158 . -6) (undo-tree-id1159 . -6) 1447) nil (26415 20141 29709 429000) 0 nil])
([nil nil ((#("
        for agent in self.agents:
            currentState = (agent.calculateHand(), self.dealer.calculateHand(True))
            agent.playTurn(currentState)

        # After all the agents have played
        self.dealer.playTurn()" 0 9 (fontified t) 9 12 (face font-lock-keyword-face fontified t) 12 19 (fontified t) 19 21 (face font-lock-keyword-face fontified t) 21 22 (fontified t) 22 26 (face py-object-reference-face fontified t) 26 47 (fontified t) 47 59 (face py-variable-name-face fontified t) 59 60 (fontified t) 60 61 (face font-lock-operator-face fontified t) 61 62 (fontified t) 62 63 (face (rainbow-delimiters-depth-1-face) fontified t) 63 82 (fontified t) 82 83 (face (rainbow-delimiters-depth-2-face) fontified t) 83 84 (face (rainbow-delimiters-depth-2-face) fontified t) 84 86 (fontified t) 86 90 (face py-object-reference-face fontified t) 90 111 (fontified t) 111 112 (face (rainbow-delimiters-depth-2-face) fontified t) 112 116 (face py-pseudo-keyword-face fontified t) 116 117 (face (rainbow-delimiters-depth-2-face) fontified t) 117 118 (face (rainbow-delimiters-depth-1-face) fontified t) 118 145 (fontified t) 145 146 (face (rainbow-delimiters-depth-1-face) fontified t) 146 158 (fontified t) 158 159 (face (rainbow-delimiters-depth-1-face) fontified t) 159 169 (fontified t) 169 204 (face font-lock-comment-face fontified t) 204 212 (fontified t) 212 216 (face py-object-reference-face fontified t) 216 232 (fontified t) 232 233 (face (rainbow-delimiters-depth-1-face) fontified t) 233 234 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1456) (undo-tree-id1154 . -212) (undo-tree-id1155 . -234) 1690) nil (26415 20141 29707 927000) 0 nil])
([nil nil ((1456 . 1466)) nil (26415 20141 29702 246000) 0 nil])
([nil nil ((1461 . 1476) (#("ini" 0 3 (fontified nil)) . -1461) (1461 . 1464) (#("initial_winners" 0 15 (fontified nil)) . -1461) (1461 . 1476) (#("initi" 0 5 (fontified t)) . -1461) (undo-tree-id1150 . -5) (undo-tree-id1151 . -5) (undo-tree-id1152 . -5) (undo-tree-id1153 . -5) 1466) nil (26415 20141 29701 535000) 0 nil])
([nil nil ((1476 . 1477)) nil (26415 20141 29699 100000) 0 nil])
([nil nil ((1477 . 1490)) nil (26415 20141 29698 809000) 0 nil])
([nil nil ((1490 . 1511)) nil (26415 20141 29698 168000) 0 nil])
([nil nil ((1511 . 1513)) nil (26415 20141 29697 677000) 0 nil])
([nil nil ((1503 . 1518) (#("initi" 0 5 (fontified nil)) . -1503) (1503 . 1508) (#("initial_winners" 0 15 (fontified nil)) . -1503) (1503 . 1518) (#("initial_wi" 0 10 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1503) (undo-tree-id1146 . -10) (undo-tree-id1147 . -10) (undo-tree-id1148 . -10) (undo-tree-id1149 . -10) 1513) nil (26415 20141 29696 866000) 0 nil])
([nil nil ((1518 . 1519)) nil (26415 20141 29695 353000) 0 nil])
([nil nil ((1519 . 1536)) nil (26415 20141 29695 183000) 0 nil])
([nil nil ((1536 . 1544)) nil (26415 20141 29694 912000) 0 nil])
([nil nil ((1544 . 1546)) nil (26415 20141 29694 611000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) . -1544) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (#("w" 0 1 (fontified t match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) . -1545) (undo-tree-id1145 . -1) 1546) nil (26415 20141 29694 30000) 0 nil])
([nil nil ((1544 . 1548)) nil (26415 20141 29692 397000) 0 nil])
([nil nil ((1542 . 1554) (#("re" 0 2 (fontified nil)) . -1542) (1542 . 1544) (#("rewardUpdate" 0 12 (fontified nil)) . -1542) (1542 . 1554) (#("reward" 0 6 (fontified t match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) . -1542) (undo-tree-id1137 . -6) (undo-tree-id1138 . -6) (undo-tree-id1139 . -6) (undo-tree-id1140 . -6) 1548) nil (26415 20141 29691 756000) 0 nil])
([nil nil ((1554 . 1564)) nil (26415 20141 29690 484000) 0 nil])
([nil nil ((1561 . 1571) (#("wi" 0 2 (fontified nil)) . -1561) (1561 . 1563) (#("win_reward" 0 10 (fontified nil)) . -1561) (1561 . 1571) (#("win" 0 3 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1561) (undo-tree-id1133 . -3) (undo-tree-id1134 . -3) (undo-tree-id1135 . -3) (undo-tree-id1136 . -3) 1564) nil (26415 20141 29689 812000) 0 nil])
([nil nil ((1571 . 1572)) nil (26415 20141 29688 259000) 0 nil])
([nil nil ((1572 . 1589)) nil (26415 20141 29687 979000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . 1585) (undo-tree-id1132 . -4) 1589) nil (26415 20141 29687 578000) 0 nil])
([nil nil ((1585 . 1591)) nil (26415 20141 29687 17000) 0 nil])
([nil nil ((1585 . 1591) (#("ret" 0 3 (fontified nil)) . -1585) (1585 . 1588) (#("return" 0 6 (face font-lock-keyword-face fontified t match-data (0 3 0 1 1 2 2 3))) . -1585) (undo-tree-id1128 . -6) (undo-tree-id1129 . -6) (undo-tree-id1130 . -6) (undo-tree-id1131 . -6) 1591) nil (26415 20141 29686 316000) 0 nil])
([nil nil ((1591 . 1604)) nil (26415 20141 29648 565000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1600) (undo-tree-id1127 . -4) 1604) nil (26415 20141 29648 134000) 0 nil])
([nil nil ((1593 . 1601) (#("        " 0 8 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1592) (undo-tree-id1126 . -8) (1600 . 1601)) nil (26415 20141 29647 402000) 0 nil])
([nil nil ((1601 . 1622)) nil (26415 20141 29646 791000) 0 nil])
([nil nil ((1622 . 1625)) nil (26415 20141 29646 511000) 0 nil])
([nil nil ((1625 . 1626)) nil (26415 20141 29646 210000) 0 nil])
([nil nil ((1626 . 1639)) nil (26415 20141 29645 910000) 0 nil])
([nil nil ((1639 . 1654)) nil (26415 20141 29645 609000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1653) (undo-tree-id1125 . -1) 1654) nil (26415 20141 29645 198000) 0 nil])
([nil nil ((1653 . 1656)) nil (26415 20141 29644 617000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1651) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1652) (undo-tree-id1121 . -1) (#("H" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1653) (undo-tree-id1122 . -1) (#("I" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1654) (undo-tree-id1123 . -1) (#("T" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1655) (undo-tree-id1124 . -1) 1656) nil (26415 20141 29643 505000) 0 nil])
([nil nil ((1651 . 1652)) nil (26415 20141 29640 890000) 0 nil])
([nil nil ((1 . 28) (1646 . 1646) (1646 . 1652) (#("Action" 0 6 (fontified nil)) . 1646) (1646 . 1652) (#("Action" 0 6 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1646) (undo-tree-id1113 . -6) (undo-tree-id1114 . -6) (undo-tree-id1115 . -6) (undo-tree-id1116 . -6) 1652) nil (26415 20141 29640 129000) 0 nil])
([nil nil ((1679 . 1683)) nil (26415 20141 29638 686000) 0 nil])
([nil nil ((1680 . 1683) (#("HI" 0 2 (fontified nil)) . -1680) (1680 . 1682) (#("HIT" 0 3 (fontified t)) . -1680) (undo-tree-id1109 . -3) (undo-tree-id1110 . -3) (undo-tree-id1111 . -3) (undo-tree-id1112 . -3) 1683) nil (26415 20141 29638 145000) 0 nil])
([nil nil ((1683 . 1696)) nil (26415 20141 29636 482000) 0 nil])
([nil nil ((1696 . 1709)) nil (26415 20141 29636 191000) 0 nil])
([nil nil ((1709 . 1720)) nil (26415 20141 29635 921000) 0 nil])
([nil nil ((1719 . 1724) (#("S" 0 1 (fontified nil)) . -1719) (1719 . 1720) (#("STAND" 0 5 (fontified nil)) . -1719) (1719 . 1724) (#("S" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1719) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) 1720) nil (26415 20141 29635 189000) 0 nil])
([nil nil ((1724 . 1725)) nil (26415 20141 29632 524000) 0 nil])
([nil nil ((1725 . 1742)) nil (26415 20141 29632 264000) 0 nil])
([nil nil ((1742 . 1761)) nil (26415 20141 29631 993000) 0 nil])
([nil nil ((1757 . 1765) (#("pl" 0 2 (fontified nil)) . -1757) (1757 . 1759) (#("playTurn" 0 8 (fontified nil)) . -1757) (1757 . 1765) (#("play" 0 4 (fontified t match-data (0 1 0 1))) . -1757) (undo-tree-id1101 . -4) (undo-tree-id1102 . -4) (undo-tree-id1103 . -4) (undo-tree-id1104 . -4) 1761) nil (26415 20141 29631 222000) 0 nil])
([nil nil ((1765 . 1766)) nil (26415 20141 29629 579000) 0 nil])
([nil nil ((1766 . 1777)) nil (26415 20141 29629 268000) 0 nil])
([nil nil ((1766 . 1782) (#("dea" 0 3 (fontified nil)) . -1766) (1766 . 1769) (#("dealer_hand_hide" 0 16 (fontified nil)) . -1766) (1766 . 1782) (#("dealer_hand" 0 11 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1766) (undo-tree-id803 . -11) (undo-tree-id804 . -11) (undo-tree-id805 . -3) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -4) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -5) (undo-tree-id816 . -5) (undo-tree-id817 . -5) (undo-tree-id818 . -5) (undo-tree-id819 . -5) (undo-tree-id820 . -5) (undo-tree-id821 . -5) (undo-tree-id822 . -5) (undo-tree-id823 . -5) (undo-tree-id824 . -5) (undo-tree-id825 . -5) (undo-tree-id826 . -5) (undo-tree-id827 . -5) (undo-tree-id828 . -5) (undo-tree-id829 . -5) (undo-tree-id830 . -5) (undo-tree-id831 . -5) (undo-tree-id832 . -5) (undo-tree-id833 . -5) (undo-tree-id834 . -5) (undo-tree-id835 . -5) (undo-tree-id836 . -5) (undo-tree-id837 . -5) (undo-tree-id838 . -6) (undo-tree-id839 . -6) (undo-tree-id840 . -6) (undo-tree-id841 . -6) (undo-tree-id842 . -6) (undo-tree-id843 . -6) (undo-tree-id844 . -6) (undo-tree-id845 . -6) (undo-tree-id846 . -6) (undo-tree-id847 . -6) (undo-tree-id848 . -6) (undo-tree-id849 . -6) (undo-tree-id850 . -6) (undo-tree-id851 . -6) (undo-tree-id852 . -6) (undo-tree-id853 . -6) (undo-tree-id854 . -6) (undo-tree-id855 . -6) (undo-tree-id856 . -6) (undo-tree-id857 . -6) (undo-tree-id858 . -6) (undo-tree-id859 . -6) (undo-tree-id860 . -6) (undo-tree-id861 . -6) (undo-tree-id862 . -6) (undo-tree-id863 . -6) (undo-tree-id864 . -6) (undo-tree-id865 . -6) (undo-tree-id866 . -6) (undo-tree-id867 . -6) (undo-tree-id868 . -6) (undo-tree-id869 . -6) (undo-tree-id870 . -6) (undo-tree-id871 . -6) (undo-tree-id872 . -6) (undo-tree-id873 . -6) (undo-tree-id874 . -6) (undo-tree-id875 . -6) (undo-tree-id876 . -6) (undo-tree-id877 . -6) (undo-tree-id878 . -6) (undo-tree-id879 . -6) (undo-tree-id880 . -6) (undo-tree-id881 . -6) (undo-tree-id882 . -6) (undo-tree-id883 . -6) (undo-tree-id884 . -6) (undo-tree-id885 . -6) (undo-tree-id886 . -6) (undo-tree-id887 . -6) (undo-tree-id888 . -6) (undo-tree-id889 . -6) (undo-tree-id890 . -6) (undo-tree-id891 . -6) (undo-tree-id892 . -6) (undo-tree-id893 . -6) (undo-tree-id894 . -6) (undo-tree-id895 . -6) (undo-tree-id896 . -6) (undo-tree-id897 . -6) (undo-tree-id898 . -6) (undo-tree-id899 . -6) (undo-tree-id900 . -6) (undo-tree-id901 . -6) (undo-tree-id902 . -6) (undo-tree-id903 . -6) (undo-tree-id904 . -6) (undo-tree-id905 . -6) (undo-tree-id906 . -6) (undo-tree-id907 . -6) (undo-tree-id908 . -6) (undo-tree-id909 . -6) (undo-tree-id910 . -6) (undo-tree-id911 . -7) (undo-tree-id912 . -7) (undo-tree-id913 . -7) (undo-tree-id914 . -7) (undo-tree-id915 . -7) (undo-tree-id916 . -7) (undo-tree-id917 . -7) (undo-tree-id918 . -7) (undo-tree-id919 . -7) (undo-tree-id920 . -7) (undo-tree-id921 . -7) (undo-tree-id922 . -7) (undo-tree-id923 . -7) (undo-tree-id924 . -7) (undo-tree-id925 . -7) (undo-tree-id926 . -7) (undo-tree-id927 . -7) (undo-tree-id928 . -7) (undo-tree-id929 . -7) (undo-tree-id930 . -7) (undo-tree-id931 . -7) (undo-tree-id932 . -7) (undo-tree-id933 . -7) (undo-tree-id934 . -7) (undo-tree-id935 . -7) (undo-tree-id936 . -7) (undo-tree-id937 . -7) (undo-tree-id938 . -7) (undo-tree-id939 . -7) (undo-tree-id940 . -7) (undo-tree-id941 . -8) (undo-tree-id942 . -8) (undo-tree-id943 . -8) (undo-tree-id944 . -8) (undo-tree-id945 . -8) (undo-tree-id946 . -8) (undo-tree-id947 . -8) (undo-tree-id948 . -8) (undo-tree-id949 . -8) (undo-tree-id950 . -8) (undo-tree-id951 . -8) (undo-tree-id952 . -8) (undo-tree-id953 . -8) (undo-tree-id954 . -8) (undo-tree-id955 . -8) (undo-tree-id956 . -8) (undo-tree-id957 . -8) (undo-tree-id958 . -8) (undo-tree-id959 . -8) (undo-tree-id960 . -8) (undo-tree-id961 . -8) (undo-tree-id962 . -8) (undo-tree-id963 . -8) (undo-tree-id964 . -9) (undo-tree-id965 . -9) (undo-tree-id966 . -9) (undo-tree-id967 . -9) (undo-tree-id968 . -9) (undo-tree-id969 . -9) (undo-tree-id970 . -9) (undo-tree-id971 . -9) (undo-tree-id972 . -9) (undo-tree-id973 . -9) (undo-tree-id974 . -9) (undo-tree-id975 . -9) (undo-tree-id976 . -9) (undo-tree-id977 . -9) (undo-tree-id978 . -9) (undo-tree-id979 . -9) (undo-tree-id980 . -9) (undo-tree-id981 . -9) (undo-tree-id982 . -9) (undo-tree-id983 . -9) (undo-tree-id984 . -9) (undo-tree-id985 . -9) (undo-tree-id986 . -9) (undo-tree-id987 . -10) (undo-tree-id988 . -10) (undo-tree-id989 . -10) (undo-tree-id990 . -10) (undo-tree-id991 . -10) (undo-tree-id992 . -10) (undo-tree-id993 . -10) (undo-tree-id994 . -10) (undo-tree-id995 . -10) (undo-tree-id996 . -10) (undo-tree-id997 . -10) (undo-tree-id998 . -10) (undo-tree-id999 . -10) (undo-tree-id1000 . -10) (undo-tree-id1001 . -10) (undo-tree-id1002 . -10) (undo-tree-id1003 . -10) (undo-tree-id1004 . -10) (undo-tree-id1005 . -10) (undo-tree-id1006 . -10) (undo-tree-id1007 . -10) (undo-tree-id1008 . -10) (undo-tree-id1009 . -10) (undo-tree-id1010 . -10) (undo-tree-id1011 . -10) (undo-tree-id1012 . -10) (undo-tree-id1013 . -10) (undo-tree-id1014 . -10) (undo-tree-id1015 . -10) (undo-tree-id1016 . -10) (undo-tree-id1017 . -11) (undo-tree-id1018 . -11) (undo-tree-id1019 . -11) (undo-tree-id1020 . -11) (undo-tree-id1021 . -11) (undo-tree-id1022 . -11) (undo-tree-id1023 . -11) (undo-tree-id1024 . -11) (undo-tree-id1025 . -11) (undo-tree-id1026 . -11) (undo-tree-id1027 . -11) (undo-tree-id1028 . -11) (undo-tree-id1029 . -11) (undo-tree-id1030 . -11) (undo-tree-id1031 . -11) (undo-tree-id1032 . -11) (undo-tree-id1033 . -11) (undo-tree-id1034 . -11) (undo-tree-id1035 . -11) (undo-tree-id1036 . -11) (undo-tree-id1037 . -11) (undo-tree-id1038 . -11) (undo-tree-id1039 . -11) (undo-tree-id1040 . -11) (undo-tree-id1041 . -11) (undo-tree-id1042 . -11) (undo-tree-id1043 . -11) (undo-tree-id1044 . -11) (undo-tree-id1045 . -11) (undo-tree-id1046 . -11) (undo-tree-id1047 . -11) (undo-tree-id1048 . -11) (undo-tree-id1049 . -11) (undo-tree-id1050 . -11) (undo-tree-id1051 . -11) (undo-tree-id1052 . -11) (undo-tree-id1053 . -11) (undo-tree-id1054 . -11) (undo-tree-id1055 . -11) (undo-tree-id1056 . -11) (undo-tree-id1057 . -11) (undo-tree-id1058 . -11) (undo-tree-id1059 . -11) (undo-tree-id1060 . -11) (undo-tree-id1061 . -11) (undo-tree-id1062 . -11) (undo-tree-id1063 . -11) (undo-tree-id1064 . -11) (undo-tree-id1065 . -11) (undo-tree-id1066 . -11) (undo-tree-id1067 . -11) (undo-tree-id1068 . -11) (undo-tree-id1069 . -11) (undo-tree-id1070 . -11) (undo-tree-id1071 . -11) (undo-tree-id1072 . -11) (undo-tree-id1073 . -11) (undo-tree-id1074 . -11) (undo-tree-id1075 . -11) (undo-tree-id1076 . -11) (undo-tree-id1077 . -11) (undo-tree-id1078 . -11) (undo-tree-id1079 . -11) (undo-tree-id1080 . -11) (undo-tree-id1081 . -11) (undo-tree-id1082 . -11) (undo-tree-id1083 . -11) (undo-tree-id1084 . -11) (undo-tree-id1085 . -11) (undo-tree-id1086 . -11) (undo-tree-id1087 . -11) (undo-tree-id1088 . -11) (undo-tree-id1089 . -11) (undo-tree-id1090 . -11) (undo-tree-id1091 . -11) (undo-tree-id1092 . -11) (undo-tree-id1093 . -11) (undo-tree-id1094 . -11) (undo-tree-id1095 . -11) (undo-tree-id1096 . -11) (undo-tree-id1097 . -11) (undo-tree-id1098 . -11) (undo-tree-id1099 . -11) (undo-tree-id1100 . -11) 1777) nil (26415 20141 29624 980000) 0 nil])
([nil nil ((1782 . 1783)) nil (26415 20141 29268 257000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1781) (undo-tree-id1401 . -1) 1782 (t 26415 20141 33120 980000)) nil (26415 20440 65358 253000) 0 nil])
([nil nil ((1781 . 1782)) nil (26415 20440 65357 382000) 0 nil])
([nil nil ((1783 . 1800)) nil (26415 20440 65357 121000) 0 nil])
([nil nil ((1800 . 1821)) nil (26415 20440 65356 771000) 0 nil])
([nil nil ((1820 . 1823) (#("H" 0 1 (fontified nil)) . -1820) (1820 . 1821) (#("HIT" 0 3 (fontified nil)) . -1820) (1820 . 1823) (#("H" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1820) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) 1821) nil (26415 20440 65355 989000) 0 nil])
([nil nil ((1823 . 1824)) nil (26415 20440 65354 546000) 0 nil])
([nil nil ((1824 . 1845)) nil (26415 20440 65354 296000) 0 nil])
([nil nil ((1845 . 1849)) nil (26415 20440 65354 66000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t match-data (0 1 0 1))) . -1847) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (#("l" 0 1 (fontified t match-data (0 1 0 1))) . -1848) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) 1849) nil (26415 20440 65353 54000) 0 nil])
([nil nil ((1847 . 1868)) nil (26415 20440 65348 956000) 0 nil])
([nil nil ((1868 . 1889)) nil (26415 20440 65348 695000) 0 nil])
([nil nil ((1889 . 1894)) nil (26415 20440 65348 445000) 0 nil])
([nil nil ((1894 . 1901)) nil (26415 20440 65348 184000) 0 nil])
([nil nil ((1898 . 1911) (#("ca" 0 2 (fontified nil)) . -1898) (1898 . 1900) (#("calculateHand" 0 13 (fontified nil)) . -1898) (1898 . 1911) (#("cal" 0 3 (fontified t match-data (0 1 0 1))) . -1898) (undo-tree-id1385 . -3) (undo-tree-id1386 . -3) (undo-tree-id1387 . -3) (undo-tree-id1388 . -3) 1901) nil (26415 20440 65347 323000) 0 nil])
([nil nil ((1911 . 1918)) nil (26415 20440 65345 920000) 0 nil])
([nil nil ((1918 . 1919)) nil (26415 20440 65345 680000) 0 nil])
([nil nil ((1868 . 1889)) nil (26415 20440 65345 399000) 0 nil])
([nil nil ((1889 . 1900)) nil (26415 20440 65345 149000) 0 nil])
([nil nil ((1895 . 1906) (#("st" 0 2 (fontified nil)) . -1895) (1895 . 1897) (#("stateUpdate" 0 11 (fontified nil)) . -1895) (1895 . 1906) (#("state" 0 5 (fontified t match-data (0 1 0 1))) . -1895) (undo-tree-id1381 . -5) (undo-tree-id1382 . -5) (undo-tree-id1383 . -5) (undo-tree-id1384 . -5) 1900) nil (26415 20440 65344 407000) 0 nil])
([nil nil ((1906 . 1913)) nil (26415 20440 65342 935000) 0 nil])
([nil nil ((1907 . 1923) (#("dea" 0 3 (fontified nil)) . -1907) (1907 . 1910) (#("dealer_hand_hide" 0 16 (fontified nil)) . -1907) (1907 . 1923) (#("dealer" 0 6 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1907) (undo-tree-id1377 . -6) (undo-tree-id1378 . -6) (undo-tree-id1379 . -6) (undo-tree-id1380 . -6) 1913) nil (26415 20440 65342 213000) 0 nil])
([nil nil ((1923 . 1924)) nil (26415 20440 65340 590000) 0 nil])
([nil nil ((1976 . 2000)) nil (26415 20440 65340 99000) 0 nil])
([nil nil ((2000 . 2011)) nil (26415 20440 65339 829000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2009) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (#("d" 0 1 (fontified t)) . -2010) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) 2011) nil (26415 20440 65339 248000) 0 nil])
([nil nil ((2009 . 2010)) nil (26415 20440 65336 883000) 0 nil])
([nil nil ((2010 . 2011)) nil (26415 20440 65336 603000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2008) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (#("w" 0 1 (fontified t)) . -2009) (undo-tree-id1367 . -1) (#("a" 0 1 (fontified t)) . -2010) (undo-tree-id1368 . -1) 2011) nil (26415 20440 65335 831000) 0 nil])
([nil nil ((2008 . 2012)) nil (26415 20440 65332 335000) 0 nil])
([nil nil ((2006 . 2018) (#("re" 0 2 (fontified nil)) . -2006) (2006 . 2008) (#("rewardUpdate" 0 12 (fontified nil)) . -2006) (2006 . 2018) (#("reward" 0 6 (fontified t)) . -2006) (undo-tree-id1359 . -6) (undo-tree-id1360 . -6) (undo-tree-id1361 . -6) (undo-tree-id1362 . -6) 2012) nil (26415 20440 65331 834000) 0 nil])
([nil nil ((2018 . 2029)) nil (26415 20440 65330 221000) 0 nil])
([nil nil ((2025 . 2036) (#("lo" 0 2 (fontified nil)) . -2025) (2025 . 2027) (#("loss_reward" 0 11 (fontified nil)) . -2025) (2025 . 2036) (#("loss" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2025) (undo-tree-id1355 . -4) (undo-tree-id1356 . -4) (undo-tree-id1357 . -4) (undo-tree-id1358 . -4) 2029) nil (26415 20440 65329 339000) 0 nil])
([nil nil ((2036 . 2037)) nil (26415 20440 65327 335000) 0 nil])
([nil nil ((2037 . 2062)) nil (26415 20440 65327 45000) 0 nil])
([nil nil ((2062 . 2067)) nil (26415 20440 65326 774000) 0 nil])
([nil nil ((2062 . 2067) (#("bre" 0 3 (fontified nil)) . -2062) (2062 . 2065) (#("break" 0 5 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2062) (undo-tree-id1351 . -5) (undo-tree-id1352 . -5) (undo-tree-id1353 . -5) (undo-tree-id1354 . -5) 2067) nil (26415 20440 65326 123000) 0 nil])
([nil nil ((2067 . 2088)) nil (26415 20440 65324 520000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 2084) (undo-tree-id1350 . -4) 2088) nil (26415 20440 65324 39000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 2080) (undo-tree-id1349 . -4) 2084) nil (26415 20440 65323 87000) 0 nil])
([nil nil ((2080 . 2091)) nil (26415 20440 65322 316000) 0 nil])
([nil nil ((2086 . 2097) (#("st" 0 2 (fontified nil)) . -2086) (2086 . 2088) (#("stateUpdate" 0 11 (fontified nil)) . -2086) (2086 . 2097) (#("state" 0 5 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2086) (undo-tree-id1345 . -5) (undo-tree-id1346 . -5) (undo-tree-id1347 . -5) (undo-tree-id1348 . -5) 2091) nil (26415 20440 65321 564000) 0 nil])
([nil nil ((2097 . 2104)) nil (26415 20440 65219 412000) 0 nil])
([nil nil ((2098 . 2114) (#("dea" 0 3 (fontified nil)) . -2098) (2098 . 2101) (#("dealer_hand_hide" 0 16 (fontified nil)) . -2098) (2098 . 2114) (#("dealer" 0 6 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -2098) (undo-tree-id1162 . -6) (undo-tree-id1163 . -6) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -2) (undo-tree-id1175 . -2) (undo-tree-id1176 . -2) (undo-tree-id1177 . -2) (undo-tree-id1178 . -2) (undo-tree-id1179 . -2) (undo-tree-id1180 . -2) (undo-tree-id1181 . -2) (undo-tree-id1182 . -2) (undo-tree-id1183 . -2) (undo-tree-id1184 . -2) (undo-tree-id1185 . -2) (undo-tree-id1186 . -2) (undo-tree-id1187 . -2) (undo-tree-id1188 . -2) (undo-tree-id1189 . -2) (undo-tree-id1190 . -2) (undo-tree-id1191 . -2) (undo-tree-id1192 . -2) (undo-tree-id1193 . -2) (undo-tree-id1194 . -2) (undo-tree-id1195 . -2) (undo-tree-id1196 . -2) (undo-tree-id1197 . -2) (undo-tree-id1198 . -2) (undo-tree-id1199 . -2) (undo-tree-id1200 . -2) (undo-tree-id1201 . -2) (undo-tree-id1202 . -2) (undo-tree-id1203 . -2) (undo-tree-id1204 . -2) (undo-tree-id1205 . -2) (undo-tree-id1206 . -2) (undo-tree-id1207 . -2) (undo-tree-id1208 . -2) (undo-tree-id1209 . -2) (undo-tree-id1210 . -2) (undo-tree-id1211 . -2) (undo-tree-id1212 . -2) (undo-tree-id1213 . -3) (undo-tree-id1214 . -3) (undo-tree-id1215 . -3) (undo-tree-id1216 . -3) (undo-tree-id1217 . -3) (undo-tree-id1218 . -3) (undo-tree-id1219 . -3) (undo-tree-id1220 . -3) (undo-tree-id1221 . -3) (undo-tree-id1222 . -3) (undo-tree-id1223 . -3) (undo-tree-id1224 . -3) (undo-tree-id1225 . -3) (undo-tree-id1226 . -3) (undo-tree-id1227 . -3) (undo-tree-id1228 . -3) (undo-tree-id1229 . -3) (undo-tree-id1230 . -3) (undo-tree-id1231 . -3) (undo-tree-id1232 . -3) (undo-tree-id1233 . -3) (undo-tree-id1234 . -3) (undo-tree-id1235 . -3) (undo-tree-id1236 . -3) (undo-tree-id1237 . -3) (undo-tree-id1238 . -3) (undo-tree-id1239 . -3) (undo-tree-id1240 . -3) (undo-tree-id1241 . -3) (undo-tree-id1242 . -3) (undo-tree-id1243 . -3) (undo-tree-id1244 . -3) (undo-tree-id1245 . -3) (undo-tree-id1246 . -3) (undo-tree-id1247 . -3) (undo-tree-id1248 . -3) (undo-tree-id1249 . -3) (undo-tree-id1250 . -3) (undo-tree-id1251 . -3) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -5) (undo-tree-id1283 . -5) (undo-tree-id1284 . -5) (undo-tree-id1285 . -5) (undo-tree-id1286 . -5) (undo-tree-id1287 . -5) (undo-tree-id1288 . -5) (undo-tree-id1289 . -5) (undo-tree-id1290 . -5) (undo-tree-id1291 . -5) (undo-tree-id1292 . -5) (undo-tree-id1293 . -5) (undo-tree-id1294 . -5) (undo-tree-id1295 . -5) (undo-tree-id1296 . -5) (undo-tree-id1297 . -5) (undo-tree-id1298 . -5) (undo-tree-id1299 . -5) (undo-tree-id1300 . -5) (undo-tree-id1301 . -5) (undo-tree-id1302 . -5) (undo-tree-id1303 . -5) (undo-tree-id1304 . -5) (undo-tree-id1305 . -6) (undo-tree-id1306 . -6) (undo-tree-id1307 . -6) (undo-tree-id1308 . -6) (undo-tree-id1309 . -6) (undo-tree-id1310 . -6) (undo-tree-id1311 . -6) (undo-tree-id1312 . -6) (undo-tree-id1313 . -6) (undo-tree-id1314 . -6) (undo-tree-id1315 . -6) (undo-tree-id1316 . -6) (undo-tree-id1317 . -6) (undo-tree-id1318 . -6) (undo-tree-id1319 . -6) (undo-tree-id1320 . -6) (undo-tree-id1321 . -6) (undo-tree-id1322 . -6) (undo-tree-id1323 . -6) (undo-tree-id1324 . -6) (undo-tree-id1325 . -6) (undo-tree-id1326 . -6) (undo-tree-id1327 . -6) (undo-tree-id1328 . -6) (undo-tree-id1329 . -6) (undo-tree-id1330 . -6) (undo-tree-id1331 . -6) (undo-tree-id1332 . -6) (undo-tree-id1333 . -6) (undo-tree-id1334 . -6) (undo-tree-id1335 . -6) (undo-tree-id1336 . -6) (undo-tree-id1337 . -6) (undo-tree-id1338 . -6) (undo-tree-id1339 . -6) (undo-tree-id1340 . -6) (undo-tree-id1341 . -6) (undo-tree-id1342 . -6) (undo-tree-id1343 . -6) (undo-tree-id1344 . -6) 2104) nil (26415 20440 65216 537000) 0 nil])
([nil nil ((2114 . 2115)) nil (26415 20440 65135 835000) 0 nil])
([nil nil ((2117 . 2129) (#("            " 0 12 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2116) (undo-tree-id1420 . -12) (2115 . 2129) (t 26415 20440 69186 59000)) nil (26415 20474 832609 427000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 2125) (undo-tree-id1419 . -4) 2129) nil (26415 20474 832607 914000) 0 nil])
([nil nil ((2125 . 2134)) nil (26415 20474 832606 882000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2132) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2133) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) 2134) nil (26415 20474 832606 271000) 0 nil])
([nil nil ((2132 . 2145)) nil (26415 20474 832602 364000) 0 nil])
([nil nil ((2138 . 2151) (#("ca" 0 2 (fontified nil)) . -2138) (2138 . 2140) (#("calculateHand" 0 13 (fontified nil)) . -2138) (2138 . 2151) (#("calcula" 0 7 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2138) (undo-tree-id1407 . -7) (undo-tree-id1408 . -7) (undo-tree-id1409 . -7) (undo-tree-id1410 . -7) 2145) nil (26415 20474 832601 252000) 0 nil])
([nil nil ((2151 . 2161)) nil (26415 20474 832597 725000) 0 nil])
([nil nil ((2161 . 2173)) nil (26415 20474 832597 445000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -2172) (undo-tree-id1406 . -1) 2173) nil (26415 20474 832597 24000) 0 nil])
([nil nil ((2172 . 2185)) nil (26415 20474 832596 212000) 0 nil])
([nil nil ((2185 . 2186)) nil (26415 20474 832595 671000) 0 nil])
([nil nil ((2186 . 2199)) nil (26415 20474 832594 619000) 0 nil])
([nil nil ((2199 . 2213)) nil (26415 20474 832594 279000) 0 nil])
([nil nil ((2211 . 2219) (#("pl" 0 2 (fontified nil)) . -2211) (2211 . 2213) (#("playTurn" 0 8 (fontified nil)) . -2211) (2211 . 2219) (#("pl" 0 2 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -2211) (undo-tree-id1402 . -2) (undo-tree-id1403 . -2) (undo-tree-id1404 . -2) (undo-tree-id1405 . -2) 2213) nil (26415 20474 832593 217000) 0 nil])
([nil nil ((2219 . 2221)) nil (26415 20474 832580 212000) 0 nil])
([nil nil ((2223 . 2235) (#("            " 0 12 (fontified nil match-data (0 2 0 1 1 2))) . 2222) (undo-tree-id1582 . -12) (2221 . 2235) (t 26415 20474 837456 324000)) nil (26415 20616 417314 340000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 2 0 1 1 2))) . 2231) (undo-tree-id1581 . -4) 2235) nil (26415 20616 417313 478000) 0 nil])
([nil nil ((2231 . 2252)) nil (26415 20616 417312 837000) 0 nil])
([nil nil ((2252 . 2267)) nil (26415 20616 417312 567000) 0 nil])
([nil nil ((2263 . 2276) (#("ca" 0 2 (fontified nil)) . -2263) (2263 . 2265) (#("calculateHand" 0 13 (fontified nil)) . -2263) (2263 . 2276) (#("calc" 0 4 (fontified t match-data (0 2 0 1 1 2))) . -2263) (undo-tree-id1577 . -4) (undo-tree-id1578 . -4) (undo-tree-id1579 . -4) (undo-tree-id1580 . -4) 2267) nil (26415 20616 417311 905000) 0 nil])
([nil nil ((2276 . 2278)) nil (26415 20616 417309 140000) 0 nil])
([nil nil ((2278 . 2287)) nil (26415 20616 417308 970000) 0 nil])
([nil nil ((2287 . 2292)) nil (26415 20616 417308 829000) 0 nil])
([nil nil ((2292 . 2301)) nil (26415 20616 417308 609000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2300) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) 2301) nil (26415 20616 417307 657000) 0 nil])
([nil nil ((2300 . 2311)) nil (26415 20616 417306 174000) 0 nil])
([nil nil ((2311 . 2312)) nil (26415 20616 417305 884000) 0 nil])
([nil nil ((2312 . 2325)) nil (26415 20616 417305 613000) 0 nil])
([nil nil ((2325 . 2334)) nil (26415 20616 417305 463000) 0 nil])
([nil nil ((2331 . 2342) (#("st" 0 2 (fontified nil)) . -2331) (2331 . 2333) (#("stateUpdate" 0 11 (fontified nil)) . -2331) (2331 . 2342) (#("sta" 0 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2331) (undo-tree-id1569 . -3) (undo-tree-id1570 . -3) (undo-tree-id1571 . -3) (undo-tree-id1572 . -3) 2334) nil (26415 20616 417304 662000) 0 nil])
([nil nil ((2342 . 2355)) nil (26415 20616 417302 868000) 0 nil])
([nil nil ((2355 . 2361)) nil (26415 20616 417302 598000) 0 nil])
([nil nil ((2361 . 2374)) nil (26415 20616 417302 297000) 0 nil])
([nil nil ((2374 . 2381)) nil (26415 20616 417302 7000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2379) (undo-tree-id1567 . -1) (#("-" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2380) (undo-tree-id1568 . -1) 2381) nil (26415 20616 417301 586000) 0 nil])
([nil nil ((2379 . 2388)) nil (26415 20616 417300 283000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2387) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) 2388) nil (26415 20616 417299 682000) 0 nil])
([nil nil ((2387 . 2397)) nil (26415 20616 417298 29000) 0 nil])
([nil nil ((2393 . 2406) (#("cal" 0 3 (fontified nil)) . -2393) (2393 . 2396) (#("calculateHand" 0 13 (fontified nil)) . -2393) (2393 . 2406) (#("calc" 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2393) (undo-tree-id1559 . -4) (undo-tree-id1560 . -4) (undo-tree-id1561 . -4) (undo-tree-id1562 . -4) 2397) nil (26415 20616 417297 318000) 0 nil])
([nil nil ((2406 . 2408)) nil (26415 20616 417295 675000) 0 nil])
([nil nil ((2408 . 2421)) nil (26415 20616 417295 374000) 0 nil])
([nil nil ((2421 . 2439)) nil (26415 20616 417294 923000) 0 nil])
([nil nil ((2439 . 2440)) nil (26415 20616 417294 502000) 0 nil])
([nil nil ((2440 . 2457)) nil (26415 20616 417294 232000) 0 nil])
([nil nil ((2457 . 2469)) nil (26415 20616 417293 961000) 0 nil])
([nil nil ((2463 . 2475) (#("re" 0 2 (fontified nil)) . -2463) (2463 . 2465) (#("rewardUpdate" 0 12 (fontified nil)) . -2463) (2463 . 2475) (#("reward" 0 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2463) (undo-tree-id1555 . -6) (undo-tree-id1556 . -6) (undo-tree-id1557 . -6) (undo-tree-id1558 . -6) 2469) nil (26415 20616 417293 280000) 0 nil])
([nil nil ((2475 . 2476)) nil (26415 20616 417290 305000) 0 nil])
([nil nil ((2476 . 2486)) nil (26415 20616 417290 14000) 0 nil])
([nil nil ((2482 . 2493) (#("lo" 0 2 (fontified nil)) . -2482) (2482 . 2484) (#("loss_reward" 0 11 (fontified nil)) . -2482) (2482 . 2493) (#("loss" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2482) (undo-tree-id1551 . -4) (undo-tree-id1552 . -4) (undo-tree-id1553 . -4) (undo-tree-id1554 . -4) 2486) nil (26415 20616 417289 413000) 0 nil])
([nil nil ((2493 . 2494)) nil (26415 20616 417287 359000) 0 nil])
([nil nil ((2494 . 2511)) nil (26415 20616 417287 48000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2507) (undo-tree-id1550 . -4) 2511) nil (26415 20616 417286 648000) 0 nil])
([nil nil ((2507 . 2528)) nil (26415 20616 417286 107000) 0 nil])
([nil nil ((2528 . 2533)) nil (26415 20616 417285 906000) 0 nil])
([nil nil ((2533 . 2554)) nil (26415 20616 417285 626000) 0 nil])
([nil nil ((2554 . 2566)) nil (26415 20616 417285 335000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2563) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2564) (undo-tree-id1548 . -1) (#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2565) (undo-tree-id1549 . -1) 2566) nil (26415 20616 417284 333000) 0 nil])
([nil nil ((2563 . 2568)) nil (26415 20616 417282 139000) 0 nil])
([nil nil ((2568 . 2569)) nil (26415 20616 417281 839000) 0 nil])
([nil nil ((2569 . 2586)) nil (26415 20616 417281 548000) 0 nil])
([nil nil ((2586 . 2598)) nil (26415 20616 417281 248000) 0 nil])
([nil nil ((2592 . 2604) (#("re" 0 2 (fontified nil)) . -2592) (2592 . 2594) (#("rewardUpdate" 0 12 (fontified nil)) . -2592) (2592 . 2604) (#("reward" 0 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2592) (undo-tree-id1540 . -6) (undo-tree-id1541 . -6) (undo-tree-id1542 . -6) (undo-tree-id1543 . -6) 2598) nil (26415 20616 417280 546000) 0 nil])
([nil nil ((2604 . 2614)) nil (26415 20616 417278 953000) 0 nil])
([nil nil ((2611 . 2621) (#("wi" 0 2 (fontified nil)) . -2611) (2611 . 2613) (#("win_reward" 0 10 (fontified nil)) . -2611) (2611 . 2621) (#("win" 0 3 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2611) (undo-tree-id1536 . -3) (undo-tree-id1537 . -3) (undo-tree-id1538 . -3) (undo-tree-id1539 . -3) 2614) nil (26415 20616 417278 172000) 0 nil])
([nil nil ((2621 . 2622)) nil (26415 20616 417236 62000) 0 nil])
([nil nil ((2622 . 2639)) nil (26415 20616 417235 702000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . 2635) (undo-tree-id1535 . -4) 2639) nil (26415 20616 417235 291000) 0 nil])
([nil nil ((2635 . 2640)) nil (26415 20616 417234 690000) 0 nil])
([nil nil ((2640 . 2660)) nil (26415 20616 417234 429000) 0 nil])
([nil nil ((2654 . 2671) (#("deal" 0 4 (fontified nil)) . -2654) (2654 . 2658) (#("dealer_hand_final" 0 17 (fontified nil)) . -2654) (2654 . 2671) (#("dealer" 0 6 (fontified t match-data (0 3 0 1 1 2 2 3))) . -2654) (undo-tree-id1531 . -6) (undo-tree-id1532 . -6) (undo-tree-id1533 . -6) (undo-tree-id1534 . -6) 2660) nil (26415 20616 417233 558000) 0 nil])
([nil nil ((2671 . 2672)) nil (26415 20616 417231 885000) 0 nil])
([nil nil ((2672 . 2689)) nil (26415 20616 417231 614000) 0 nil])
([nil nil ((2689 . 2700)) nil (26415 20616 417231 344000) 0 nil])
([nil nil ((2700 . 2703)) nil (26415 20616 417231 43000) 0 nil])
([nil nil ((2695 . 2707) (#("re" 0 2 (fontified nil)) . -2695) (2695 . 2697) (#("rewardUpdate" 0 12 (fontified nil)) . -2695) (2695 . 2707) (#("rewardUp" 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2695) (undo-tree-id1527 . -8) (undo-tree-id1528 . -8) (undo-tree-id1529 . -8) (undo-tree-id1530 . -8) 2703) nil (26415 20616 417230 11000) 0 nil])
([nil nil ((2707 . 2718)) nil (26415 20616 417228 538000) 0 nil])
([nil nil ((2714 . 2725) (#("dr" 0 2 (fontified nil)) . -2714) (2714 . 2716) (#("draw_reward" 0 11 (fontified nil)) . -2714) (2714 . 2725) (#("draw" 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -2714) (undo-tree-id1523 . -4) (undo-tree-id1524 . -4) (undo-tree-id1525 . -4) (undo-tree-id1526 . -4) 2718) nil (26415 20616 417227 787000) 0 nil])
([nil nil ((2725 . 2726)) nil (26415 20616 417226 224000) 0 nil])
([nil nil ((2726 . 2743)) nil (26415 20616 417225 963000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2739) (undo-tree-id1522 . -4) 2743) nil (26415 20616 417225 543000) 0 nil])
([nil nil ((2739 . 2743)) nil (26415 20616 417224 841000) 0 nil])
([nil nil ((2743 . 2744)) nil (26415 20616 417224 551000) 0 nil])
([nil nil ((2744 . 2761)) nil (26415 20616 417224 60000) 0 nil])
([nil nil ((2761 . 2773)) nil (26415 20616 417223 769000) 0 nil])
([nil nil ((2767 . 2779) (#("re" 0 2 (fontified nil)) . -2767) (2767 . 2769) (#("rewardUpdate" 0 12 (fontified nil)) . -2767) (2767 . 2779) (#("reward" 0 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2767) (undo-tree-id1518 . -6) (undo-tree-id1519 . -6) (undo-tree-id1520 . -6) (undo-tree-id1521 . -6) 2773) nil (26415 20616 417222 737000) 0 nil])
([nil nil ((2779 . 2791)) nil (26415 20616 417221 44000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2790) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) 2791) nil (26415 20616 417220 473000) 0 nil])
([nil nil ((2790 . 2791)) nil (26415 20616 417214 351000) 0 nil])
([nil nil ((2786 . 2797) (#("lo" 0 2 (fontified nil)) . -2786) (2786 . 2788) (#("loss_reward" 0 11 (fontified nil)) . -2786) (2786 . 2797) (#("loss_" 0 5 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2786) (undo-tree-id1421 . -4) (undo-tree-id1422 . -5) (undo-tree-id1423 . -4) (undo-tree-id1424 . -4) (undo-tree-id1425 . -4) (undo-tree-id1426 . -4) (undo-tree-id1427 . -4) (undo-tree-id1428 . -4) (undo-tree-id1429 . -4) (undo-tree-id1430 . -4) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4) (undo-tree-id1433 . -4) (undo-tree-id1434 . -4) (undo-tree-id1435 . -4) (undo-tree-id1436 . -4) (undo-tree-id1437 . -4) (undo-tree-id1438 . -4) (undo-tree-id1439 . -4) (undo-tree-id1440 . -4) (undo-tree-id1441 . -4) (undo-tree-id1442 . -4) (undo-tree-id1443 . -4) (undo-tree-id1444 . -4) (undo-tree-id1445 . -4) (undo-tree-id1446 . -4) (undo-tree-id1447 . -4) (undo-tree-id1448 . -4) (undo-tree-id1449 . -4) (undo-tree-id1450 . -4) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) (undo-tree-id1453 . -4) (undo-tree-id1454 . -4) (undo-tree-id1455 . -4) (undo-tree-id1456 . -4) (undo-tree-id1457 . -4) (undo-tree-id1458 . -4) (undo-tree-id1459 . -4) (undo-tree-id1460 . -4) (undo-tree-id1461 . -4) (undo-tree-id1462 . -4) (undo-tree-id1463 . -4) (undo-tree-id1464 . -4) (undo-tree-id1465 . -5) (undo-tree-id1466 . -5) (undo-tree-id1467 . -5) (undo-tree-id1468 . -5) (undo-tree-id1469 . -5) (undo-tree-id1470 . -5) (undo-tree-id1471 . -5) (undo-tree-id1472 . -5) (undo-tree-id1473 . -5) (undo-tree-id1474 . -5) (undo-tree-id1475 . -5) (undo-tree-id1476 . -5) (undo-tree-id1477 . -5) (undo-tree-id1478 . -5) (undo-tree-id1479 . -5) (undo-tree-id1480 . -5) (undo-tree-id1481 . -5) (undo-tree-id1482 . -5) (undo-tree-id1483 . -5) (undo-tree-id1484 . -5) (undo-tree-id1485 . -5) (undo-tree-id1486 . -5) (undo-tree-id1487 . -5) (undo-tree-id1488 . -5) (undo-tree-id1489 . -5) (undo-tree-id1490 . -5) (undo-tree-id1491 . -5) (undo-tree-id1492 . -5) (undo-tree-id1493 . -5) (undo-tree-id1494 . -5) (undo-tree-id1495 . -5) (undo-tree-id1496 . -5) (undo-tree-id1497 . -5) (undo-tree-id1498 . -4) (undo-tree-id1499 . -5) (undo-tree-id1500 . -5) (undo-tree-id1501 . -5) (undo-tree-id1502 . -5) (undo-tree-id1503 . -5) 2791) nil (26415 20616 417212 348000) 0 nil])
([nil nil ((2797 . 2798)) nil (26415 20616 417168 485000) 0 nil])
([nil nil ((2800 . 2816) (#("                " 0 16 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 2799) (undo-tree-id1583 . -16) (undo-tree-id1584 . -16) (undo-tree-id1585 . -16) (undo-tree-id1586 . -16) (undo-tree-id1587 . -16) (undo-tree-id1588 . -16) (undo-tree-id1589 . -16) (undo-tree-id1590 . -16) (undo-tree-id1591 . -16) (undo-tree-id1592 . -16) (undo-tree-id1593 . -16) (undo-tree-id1594 . -16) (undo-tree-id1595 . -16) (undo-tree-id1596 . -16) (undo-tree-id1597 . -16) (undo-tree-id1598 . -16) (undo-tree-id1599 . -16) (undo-tree-id1600 . -16) (undo-tree-id1601 . -16) (undo-tree-id1602 . -16) (undo-tree-id1603 . -16) (undo-tree-id1604 . -16) (undo-tree-id1605 . -16) (undo-tree-id1606 . -16) (undo-tree-id1607 . -16) (undo-tree-id1608 . -16) (undo-tree-id1609 . -16) (undo-tree-id1610 . -16) (undo-tree-id1611 . -16) (undo-tree-id1612 . -16) (undo-tree-id1613 . -16) (2798 . 2816) (t 26415 20616 421630 958000)) nil (26415 20617 769659 556000) 0 nil])
([nil nil ((133 . 134) (t 26415 20617 774642 688000)) nil (26415 20694 262880 319000) 0 nil])
([nil nil ((134 . 142)) nil (26415 20694 262879 958000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -140) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (#("w" 0 1 (fontified t)) . -141) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) 142) nil (26415 20694 262879 307000) 0 nil])
([nil nil ((140 . 155)) nil (26415 20694 262876 231000) 0 nil])
([nil nil ((151 . 155) (#("tqd" 0 3 (fontified nil)) . -151) (151 . 154) (#("tqdm" 0 4 (fontified t)) . -151) (undo-tree-id1614 . -4) (undo-tree-id1615 . -4) (undo-tree-id1616 . -4) (undo-tree-id1617 . -4) (undo-tree-id1618 . -4) (undo-tree-id1619 . -4) (undo-tree-id1620 . -4) (undo-tree-id1621 . -4) (undo-tree-id1622 . -4) (undo-tree-id1623 . -4) (undo-tree-id1624 . -4) (undo-tree-id1625 . -4) (undo-tree-id1626 . -4) (undo-tree-id1627 . -4) (undo-tree-id1628 . -4) (undo-tree-id1629 . -4) (undo-tree-id1630 . -4) (undo-tree-id1631 . -4) (undo-tree-id1632 . -4) (undo-tree-id1633 . -4) (undo-tree-id1634 . -4) (undo-tree-id1635 . -4) (undo-tree-id1636 . -4) (undo-tree-id1637 . -4) (undo-tree-id1638 . -4) (undo-tree-id1639 . -4) (undo-tree-id1640 . -4) (undo-tree-id1641 . -4) (undo-tree-id1642 . -4) (undo-tree-id1643 . -4) (undo-tree-id1644 . -4) (undo-tree-id1645 . -4) (undo-tree-id1646 . -4) (undo-tree-id1647 . -4) (undo-tree-id1648 . -4) (undo-tree-id1649 . -4) (undo-tree-id1650 . -4) (undo-tree-id1651 . -4) (undo-tree-id1652 . -4) (undo-tree-id1653 . -4) (undo-tree-id1654 . -4) (undo-tree-id1655 . -4) (undo-tree-id1656 . -4) (undo-tree-id1657 . -4) (undo-tree-id1658 . -4) (undo-tree-id1659 . -4) (undo-tree-id1660 . -4) (undo-tree-id1661 . -4) (undo-tree-id1662 . -4) 155) nil (26415 20694 262872 454000) 0 nil])
([nil nil ((3210 . 3214) (#("    " 0 4 (fontified nil)) . 3209) (undo-tree-id1693 . -4) (3208 . 3214) (t 26415 20694 267319 688000)) nil (26415 20780 634761 945000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3210) (undo-tree-id1692 . -4) 3214) nil (26415 20780 634761 33000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3208) (undo-tree-id1690 . -1) (#("
" 0 1 (fontified t)) . -3209) (undo-tree-id1691 . -1) 3210) nil (26415 20780 634760 121000) 0 nil])
([nil nil ((3272 . 3276) (#("    " 0 4 (fontified nil)) . 3271) (undo-tree-id1688 . -4) (3271 . 3276) (#("    " 0 4 (fontified nil)) . 3270) (undo-tree-id1689 . -4) (3269 . 3275)) nil (26415 20780 634758 518000) 0 nil])
([nil nil ((3270 . 3274)) nil (26415 20780 634757 376000) 0 nil])
([nil nil ((3274 . 3278)) nil (26415 20780 634757 116000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -3277) (undo-tree-id1687 . -1) 3278) nil (26415 20780 634756 324000) 0 nil])
([nil nil ((3277 . 3283)) nil (26415 20780 634755 633000) 0 nil])
([nil nil ((3283 . 3289)) nil (26415 20780 634755 493000) 0 nil])
([nil nil ((#("3" 0 1 (face py-number-face fontified t)) . -3288) (undo-tree-id1686 . -1) 3289) nil (26415 20780 634754 811000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3287) (undo-tree-id1685 . -1) 3288) nil (26415 20780 634754 60000) 0 nil])
([nil nil ((3287 . 3289)) nil (26415 20780 634753 329000) 0 nil])
([nil nil ((3289 . 3294)) nil (26415 20780 634753 98000) 0 nil])
([nil nil ((3294 . 3305)) nil (26415 20780 634752 808000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -3304) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) 3305) nil (26415 20780 634752 397000) 0 nil])
([nil nil ((3304 . 3311)) nil (26415 20780 634748 720000) 0 nil])
([nil nil ((3311 . 3321)) nil (26415 20780 634748 449000) 0 nil])
([nil nil ((3314 . 3327) (#("epi" 0 3 (fontified nil)) . -3314) (3314 . 3317) (#("episode_count" 0 13 (fontified nil)) . -3314) (3314 . 3327) (#("episode" 0 7 (fontified t)) . -3314) (undo-tree-id1677 . -7) (undo-tree-id1678 . -7) (undo-tree-id1679 . -7) (undo-tree-id1680 . -7) 3321) nil (26415 20780 634747 878000) 0 nil])
([nil nil ((3327 . 3334)) nil (26415 20780 634745 223000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -3333) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) 3334) nil (26415 20780 634744 833000) 0 nil])
([nil nil ((3333 . 3352)) nil (26415 20780 634743 470000) 0 nil])
([nil nil ((3352 . 3362)) nil (26415 20780 634743 219000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -3361) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) 3362) nil (26415 20780 634742 699000) 0 nil])
([nil nil ((3361 . 3379)) nil (26415 20780 634741 156000) 0 nil])
([nil nil ((3379 . 3400)) nil (26415 20780 634740 544000) 0 nil])
([nil nil ((3400 . 3403)) nil (26415 20780 634740 124000) 0 nil])
([nil nil ((3403 . 3404)) nil (26415 20780 634739 863000) 0 nil])
([nil nil ((3404 . 3413)) nil (26415 20780 634739 12000) 0 nil])
([nil nil ((3413 . 3417)) nil (26415 20780 634738 711000) 0 nil])
([nil nil ((3417 . 3423)) nil (26415 20780 634738 380000) 0 nil])
([nil nil ((3419 . 3430) (#("de" 0 2 (fontified nil)) . -3419) (3419 . 3421) (#("dealInitial" 0 11 (fontified nil)) . -3419) (3419 . 3430) (#("deal" 0 4 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -3419) (undo-tree-id1669 . -4) (undo-tree-id1670 . -4) (undo-tree-id1671 . -4) (undo-tree-id1672 . -4) 3423) nil (26415 20780 634737 499000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3431)) nil (26415 20780 634726 518000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 3431)) nil (26415 20780 634726 187000) 0 nil])
([nil nil ((#("    # Deal initial cards" 0 4 (fontified t) 4 24 (face font-lock-comment-face fontified t)) . 3431)) nil (26415 20780 634725 566000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3431)) nil (26415 20780 634725 206000) 0 nil])
([nil nil ((#("    table.dealInitial()" 0 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3431)) nil (26415 20780 634724 454000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3431)) nil (26415 20781 663036 351000) 0 nil])
([nil nil ((apply 2 3432 3467 undo--wrap-and-run-primitive-undo 3432 3467 ((#("# " 0 2 (face font-lock-comment-face fontified t)) . -3436) 3432))) nil (26415 20805 518303 746000) 0 nil] [nil nil ((3629 . 3630)) ((#("-" 0 1 (fontified t)) . 3629) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1)) (26415 20780 634720 86000) 0 nil])
([nil nil ((apply -2 3432 3470 undo--wrap-and-run-primitive-undo 3432 3470 ((3436 . 3438)))) nil (26415 20805 518303 396000) 0 nil])
nil
([nil nil ((apply -2 3470 3517 undo--wrap-and-run-primitive-undo 3470 3517 ((3474 . 3476)))) nil (26415 20805 518303 15000) 0 nil])
([nil nil ((apply -2 3517 3575 undo--wrap-and-run-primitive-undo 3517 3575 ((3525 . 3527)))) nil (26415 20805 518302 414000) 0 nil])
([nil nil ((apply -2 3575 3635 undo--wrap-and-run-primitive-undo 3575 3635 ((3579 . 3581)))) nil (26415 20805 518298 627000) 0 nil])
([nil nil ((#("    # Agents and dealer play their turns" 0 4 (fontified t) 4 40 (face font-lock-comment-face fontified t)) . 3636) (t 26415 20805 523346 602000)) nil (26415 20824 321839 933000) 0 nil])
([nil nil ((3637 . 3645) (#("    " 0 4 (fontified t)) . 3637)) nil (26415 20824 321839 242000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3636)) nil (26415 20824 321838 330000) 0 nil])
([nil nil ((apply -2 3699 3789 undo--wrap-and-run-primitive-undo 3699 3789 ((3703 . 3705) 3699))) nil (26415 20824 321837 899000) 0 nil])
([nil nil ((apply -2 3789 3836 undo--wrap-and-run-primitive-undo 3789 3836 ((3793 . 3795)))) nil (26415 20824 321837 298000) 0 nil])
([nil nil ((apply -2 3836 3933 undo--wrap-and-run-primitive-undo 3836 3933 ((3844 . 3846)))) nil (26415 20824 321833 511000) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-string-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -3374) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) 3375 (t 26415 20824 327524 501000)) nil (26415 20935 792580 826000) 0 nil])
([nil nil ((3374 . 3375)) nil (26415 20935 792545 299000) 0 nil])
([nil nil ((#("    for _ in tqdm(range(episode_count), desc=\"Running Episodes...\", bar_format=\"{desc} ({n_fmt} of {total_fmt})\"):" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 9 (face py-builtins-face fontified t) 9 10 (fontified t) 10 12 (face font-lock-keyword-face fontified t) 12 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 23 (face py-builtins-face fontified t) 23 24 (face (rainbow-delimiters-depth-2-face) fontified t) 24 37 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 37 38 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 38 45 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 45 66 (face font-lock-string-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 66 79 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 79 112 (face font-lock-string-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 113 114 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 3290) (undo-tree-id1876 . -114) (t 26415 20935 797600 884000)) nil (26415 20960 980514 52000) 0 nil])
([nil nil ((3291 . 3295) (#("        " 0 8 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 3291)) nil (26415 20960 980513 271000) 0 nil])
([nil nil ((3518 . 3522) (#("        " 0 8 (fontified t)) . 3518) (undo-tree-id1875 . -4) 3522) nil (26415 20960 980512 549000) 0 nil])
([nil nil ((apply 2 3457 3514 undo--wrap-and-run-primitive-undo 3457 3514 ((#("# " 0 2 (face font-lock-comment-face fontified t)) . -3461)))) nil (26415 20960 980511 798000) 0 nil])
([nil nil ((apply 2 3399 3454 undo--wrap-and-run-primitive-undo 3399 3454 ((#("# " 0 2 (face font-lock-comment-face fontified t)) . -3407) 3399))) nil (26415 20960 980511 487000) 0 nil])
([nil nil ((apply 2 3352 3396 undo--wrap-and-run-primitive-undo 3352 3396 ((#("# " 0 2 (face font-lock-comment-face fontified t)) . -3356)))) nil (26415 20960 980511 237000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3352) 3360) nil (26415 20960 980510 846000) 0 nil])
([nil nil ((3352 . 3353)) nil (26415 20960 980510 515000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -3352) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) 3353) nil (26415 20960 980509 634000) 0 nil])
([nil nil ((3352 . 3356)) nil (26415 20960 980494 816000) 0 nil])
([nil nil ((3453 . 3461) (#("    " 0 4 (fontified t)) . 3453) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) (undo-tree-id1823 . -4) (undo-tree-id1824 . -4) (undo-tree-id1825 . -4) (undo-tree-id1826 . -4) (undo-tree-id1827 . -4) (undo-tree-id1828 . -4) (undo-tree-id1829 . -4) (undo-tree-id1830 . -4) 3457) nil (26415 20960 980493 834000) 0 nil])
([nil nil ((3453 . 3457) (#("        " 0 8 (fontified t)) . 3453) (undo-tree-id1753 . -8) (undo-tree-id1754 . -8) (undo-tree-id1755 . -8) (undo-tree-id1756 . -8) (undo-tree-id1757 . -8) (undo-tree-id1758 . -8) (undo-tree-id1759 . -8) (undo-tree-id1760 . -8) (undo-tree-id1761 . -8) (undo-tree-id1762 . -8) (undo-tree-id1763 . -8) (undo-tree-id1764 . -8) (undo-tree-id1765 . -8) (undo-tree-id1766 . -8) (undo-tree-id1767 . -8) (undo-tree-id1768 . -8) (undo-tree-id1769 . -8) (undo-tree-id1770 . -8) (undo-tree-id1771 . -8) (undo-tree-id1772 . -8) (undo-tree-id1773 . -8) (undo-tree-id1774 . -8) (undo-tree-id1775 . -8) (undo-tree-id1776 . -8) (undo-tree-id1777 . -8) (undo-tree-id1778 . -8) (undo-tree-id1779 . -8) (undo-tree-id1780 . -8) (undo-tree-id1781 . -8) (undo-tree-id1782 . -8) (undo-tree-id1783 . -8) (undo-tree-id1784 . -8) (undo-tree-id1785 . -8) (undo-tree-id1786 . -8) (undo-tree-id1787 . -8) (undo-tree-id1788 . -8) (undo-tree-id1789 . -8) (undo-tree-id1790 . -8) (undo-tree-id1791 . -8) (undo-tree-id1792 . -8) (undo-tree-id1793 . -8) (undo-tree-id1794 . -8) (undo-tree-id1795 . -8) (undo-tree-id1796 . -8) (undo-tree-id1797 . -8) (undo-tree-id1798 . -8) (undo-tree-id1799 . -8) (undo-tree-id1800 . -8) (undo-tree-id1801 . -8) (undo-tree-id1802 . -8) (undo-tree-id1803 . -8) (undo-tree-id1804 . -8) (undo-tree-id1805 . -8) (undo-tree-id1806 . -8) (undo-tree-id1807 . -8) (undo-tree-id1808 . -8) (undo-tree-id1809 . -8) (undo-tree-id1810 . -8) (undo-tree-id1811 . -8) (undo-tree-id1812 . -8) 3461) nil (26415 20960 980482 623000) 0 nil])
([nil nil ((apply 2 3571 3658 undo--wrap-and-run-primitive-undo 3571 3658 ((#("# " 0 2 (face font-lock-comment-face fontified t)) . -3575)))) nil (26415 20967 16724 664000) 0 nil])
([nil nil ((apply 2 3659 3703 undo--wrap-and-run-primitive-undo 3659 3703 ((#("# " 0 2 (face font-lock-comment-face fontified t)) . -3663)))) nil (26415 20967 16723 682000) 0 nil])
([nil nil ((apply 2 3704 3798 undo--wrap-and-run-primitive-undo 3704 3798 ((#("# " 0 2 (face font-lock-comment-face fontified t)) . -3712)))) nil (26415 20967 16718 482000) 0 nil])
([nil nil ((3312 . 3314) (t 26415 20967 21908 413000)) nil (26415 20988 889112 903000) 0 nil])
([nil nil ((3290 . 3294) (t 26415 20988 894125 244000)) nil (26415 21080 247450 565000) 0 nil])
([nil nil ((3294 . 3301)) nil (26415 21080 247450 264000) 0 nil])
([nil nil ((#("    while i" 0 4 (fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 11 (fontified t)) . 3290) (undo-tree-id1908 . -11) (undo-tree-id1909 . -10) (undo-tree-id1910 . -11) (undo-tree-id1911 . -11)) nil (26415 21080 247449 673000) 0 nil])
([nil nil ((3290 . 3294)) nil (26415 21080 247447 920000) 0 nil])
([nil nil ((3294 . 3298)) nil (26415 21080 247447 660000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3297) (undo-tree-id1907 . -1) 3298) nil (26415 21080 247446 938000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3294) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (#("f" 0 1 (fontified t)) . -3295) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (#("r" 0 1 (fontified t)) . -3296) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) 3297) nil (26415 21080 247445 656000) 0 nil])
([nil nil ((3294 . 3300)) nil (26415 21080 247440 646000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3299) (undo-tree-id1894 . -1) 3300) nil (26415 21080 247440 25000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3298) (undo-tree-id1893 . -1) 3299) nil (26415 21080 247438 813000) 0 nil])
([nil nil ((3298 . 3304)) nil (26415 21080 247436 28000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3303) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) 3304) nil (26415 21080 247435 386000) 0 nil])
([nil nil ((3303 . 3318)) nil (26415 21080 247433 393000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3316) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3317) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) 3318) nil (26415 21080 247432 761000) 0 nil])
([nil nil ((3316 . 3318)) nil (26415 21080 247430 427000) 0 nil])
([nil nil ((3309 . 3322) (#("epi" 0 3 (fontified nil)) . -3309) (3309 . 3312) (#("episode_count" 0 13 (fontified nil)) . -3309) (3309 . 3322) (#("episode_c" 0 9 (fontified t)) . -3309) (undo-tree-id1881 . -7) (undo-tree-id1882 . -9) (undo-tree-id1883 . -7) (undo-tree-id1884 . -9) 3318) nil (26415 21080 247429 786000) 0 nil])
([nil nil ((3322 . 3323)) nil (26415 21080 247427 201000) 0 nil])
([nil nil ((3323 . 3324)) nil (26415 21080 247426 880000) 0 nil])
([nil nil ((3325 . 3333) (#("    " 0 4 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 3325) 3348) nil (26415 21080 247426 399000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3392) 3419) nil (26415 21080 247425 818000) 0 nil])
([nil nil ((3392 . 3396)) nil (26415 21080 247425 488000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3392) (undo-tree-id1880 . -4) 3396) nil (26415 21080 247425 57000) 0 nil])
([nil nil ((3392 . 3396)) nil (26415 21080 247424 195000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3392) (undo-tree-id1879 . -4) 3396) nil (26415 21080 247423 244000) 0 nil])
([nil nil ((3392 . 3396)) nil (26415 21080 247422 372000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3392) (undo-tree-id1878 . -4) 3396) nil (26415 21080 247421 941000) 0 nil])
([nil nil ((3392 . 3396)) nil (26415 21080 247420 879000) 0 nil])
([nil nil ((3354 . 3362) (#("    " 0 4 (fontified t)) . 3354) (undo-tree-id1877 . -4) 3358) nil (26415 21080 247420 238000) 0 nil])
([nil nil ((3396 . 3404) (#("    " 0 4 (fontified t)) . 3396) 3404) nil (26415 21080 247410 920000) 0 nil])
([nil nil ((3445 . 3457) (#("        " 0 8 (fontified t)) . 3445) 3457) nil (26415 21080 247410 369000) 0 nil])
([nil nil ((3505 . 3513) (#("    " 0 4 (fontified t)) . 3505) 3521) nil (26415 21080 247409 728000) 0 nil])
([nil nil ((3568 . 3576) (#("    " 0 4 (fontified t)) . 3568) 3588) nil (26415 21080 247409 287000) 0 nil])
([nil nil ((3597 . 3605) (#("    " 0 4 (fontified t)) . 3597) 3621) nil (26415 21080 247408 756000) 0 nil])
([nil nil ((3635 . 3643) (#("    " 0 4 (fontified t)) . 3635) 3663) nil (26415 21080 247407 824000) 0 nil])
([nil nil ((3727 . 3735) (#("    " 0 4 (fontified t)) . 3727) 3759) nil (26415 21080 247406 983000) 0 nil])
([nil nil ((3776 . 3788) (#("        " 0 8 (fontified t)) . 3776) 3812) nil (26415 21080 247402 24000) 0 nil])
([nil nil ((3874 . 3887) (t 26415 21080 252042 428000)) nil (26415 21085 859330 547000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3883) (undo-tree-id1912 . -4) 3887) nil (26415 21085 859329 735000) 0 nil])
([nil nil ((3883 . 3896)) nil (26415 21085 859318 584000) 0 nil])
([nil nil ((#("3" 0 1 (face py-number-face fontified t)) . -3288) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) 3289 (t 26415 21085 864099 337000)) nil (26415 21140 208059 84000) 0 nil])
([nil nil ((3288 . 3289)) nil (26415 21140 208021 132000) 0 nil])
([nil nil ((3874 . 3887) (t 26415 21140 213653 414000)) nil (26415 22967 798029 400000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3883) (undo-tree-id1974 . -4) 3887) nil (26415 22967 798028 909000) 0 nil])
([nil nil ((3875 . 3887) (#("        " 0 8 (fontified t)) . 3875) (undo-tree-id1973 . -8) 3883) nil (26415 22967 798026 965000) 0 nil])
([nil nil ((3887 . 3893)) nil (26415 22967 798014 522000) 0 nil])
([nil nil ((3893 . 3913)) nil (26415 22967 798010 103000) 0 nil])
([nil nil ((3289 . 3290) (t 26415 22967 804344 868000)) nil (26415 23077 76118 882000) 0 nil])
([nil nil ((2962 . 2971) (t 26415 23077 81689 597000)) nil (26415 23104 816277 748000) 0 nil])
([nil nil ((2971 . 2984)) nil (26415 23104 816277 367000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -2983) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) 2984) nil (26415 23104 816276 125000) 0 nil])
([nil nil ((2983 . 2988)) nil (26415 23104 816249 705000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2985) (undo-tree-id2007 . -1) 2986 (t 26415 23104 822028 322000)) nil (26415 23204 103575 527000) 0 nil])
([nil nil ((2985 . 2986)) nil (26415 23204 103563 194000) 0 nil])
([nil nil ((3316 . 3317)) nil (26415 23204 103558 765000) 0 nil])
([nil nil ((3317 . 3320) (t 26415 23204 109233 498000)) nil (26415 23233 398702 149000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -3318) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (#("0" 0 1 (face py-number-face fontified t)) . -3319) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) 3320 (t 26415 23233 404587 135000)) nil (26415 23293 229801 657000) 0 nil])
([nil nil ((3916 . 3917) (t 26415 23293 235306 881000)) nil (26415 29104 949633 860000) 0 nil])
([nil nil ((51 . 52) (t 26415 29104 955216 715000)) nil (26415 56147 427698 440000) 0 nil])
([nil nil ((52 . 60)) nil (26415 56147 427697 999000) 0 nil])
([nil nil ((57 . 63) (#("Pla" 0 3 (fontified nil)) . -57) (57 . 60) (#("Player" 0 6 (fontified nil)) . -57) (57 . 63) (#("Pla" 0 3 (fontified t)) . -57) (undo-tree-id3001 . -3) (undo-tree-id3002 . -3) (undo-tree-id3003 . -3) (undo-tree-id3004 . -3) 60) nil (26415 56147 427697 238000) 0 nil])
([nil nil ((63 . 74)) nil (26415 56147 427695 134000) 0 nil])
([nil nil ((71 . 77) (#("pla" 0 3 (fontified nil)) . -71) (71 . 74) (#("Player" 0 6 (fontified nil)) . -71) (71 . 77) (#("pla" 0 3 (fontified t match-data (0 3 0 1 1 2 2 3))) . -71) (undo-tree-id2907 . -3) (undo-tree-id2908 . -3) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -2) (undo-tree-id2918 . -2) (undo-tree-id2919 . -2) (undo-tree-id2920 . -2) (undo-tree-id2921 . -2) (undo-tree-id2922 . -2) (undo-tree-id2923 . -2) (undo-tree-id2924 . -2) (undo-tree-id2925 . -2) (undo-tree-id2926 . -2) (undo-tree-id2927 . -2) (undo-tree-id2928 . -2) (undo-tree-id2929 . -2) (undo-tree-id2930 . -2) (undo-tree-id2931 . -2) (undo-tree-id2932 . -2) (undo-tree-id2933 . -2) (undo-tree-id2934 . -2) (undo-tree-id2935 . -2) (undo-tree-id2936 . -2) (undo-tree-id2937 . -2) (undo-tree-id2938 . -2) (undo-tree-id2939 . -2) (undo-tree-id2940 . -2) (undo-tree-id2941 . -2) (undo-tree-id2942 . -2) (undo-tree-id2943 . -2) (undo-tree-id2944 . -2) (undo-tree-id2945 . -2) (undo-tree-id2946 . -2) (undo-tree-id2947 . -2) (undo-tree-id2948 . -2) (undo-tree-id2949 . -2) (undo-tree-id2950 . -2) (undo-tree-id2951 . -2) (undo-tree-id2952 . -2) (undo-tree-id2953 . -2) (undo-tree-id2954 . -2) (undo-tree-id2955 . -2) (undo-tree-id2956 . -2) (undo-tree-id2957 . -2) (undo-tree-id2958 . -2) (undo-tree-id2959 . -2) (undo-tree-id2960 . -2) (undo-tree-id2961 . -2) (undo-tree-id2962 . -2) (undo-tree-id2963 . -2) (undo-tree-id2964 . -2) (undo-tree-id2965 . -2) (undo-tree-id2966 . -2) (undo-tree-id2967 . -2) (undo-tree-id2968 . -2) (undo-tree-id2969 . -3) (undo-tree-id2970 . -3) (undo-tree-id2971 . -3) (undo-tree-id2972 . -3) (undo-tree-id2973 . -3) (undo-tree-id2974 . -3) (undo-tree-id2975 . -3) (undo-tree-id2976 . -3) (undo-tree-id2977 . -3) (undo-tree-id2978 . -3) (undo-tree-id2979 . -3) (undo-tree-id2980 . -3) (undo-tree-id2981 . -3) (undo-tree-id2982 . -3) (undo-tree-id2983 . -3) (undo-tree-id2984 . -3) (undo-tree-id2985 . -3) (undo-tree-id2986 . -3) (undo-tree-id2987 . -3) (undo-tree-id2988 . -3) (undo-tree-id2989 . -3) (undo-tree-id2990 . -3) (undo-tree-id2991 . -3) (undo-tree-id2992 . -3) (undo-tree-id2993 . -3) (undo-tree-id2994 . -3) (undo-tree-id2995 . -3) (undo-tree-id2996 . -3) (undo-tree-id2997 . -3) (undo-tree-id2998 . -3) (undo-tree-id2999 . -3) (undo-tree-id3000 . -3) 74) nil (26415 56147 427690 545000) 0 nil])
([nil nil ((340 . 341) (341 . 348) (#("ge" 0 2 (face py-variable-name-face fontified t)) . 341) 344 (562 . 563) (563 . 570) (#("ge" 0 2 (fontified t)) . 563) 562 (704 . 705) (705 . 712) (#("ge" 0 2 (fontified t)) . 705) 704 (1127 . 1128) (1128 . 1135) (#("ge" 0 2 (fontified t match-data (0 3 0 1 1 2 2 3))) . 1128) 1127 (1192 . 1193) (1193 . 1200) (#("ge" 0 2 (fontified t match-data (0 3 0 1 1 2 2 3))) . 1193) 1192 (1313 . 1314) (1314 . 1321) (#("ge" 0 2 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . 1314) 1313 (1694 . 1695) (1695 . 1702) (#("ge" 0 2 (match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1695) 1694 (2226 . 2227) (2227 . 2234) (#("ge" 0 2 (match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 2227) 2226 (2353 . 2354) (2354 . 2361) (#("ge" 0 2 (match-data (0 4 0 1 1 2 2 3 3 4))) . 2354) 2353 (3041 . 3042) (3042 . 3049) ("ge" . 3042) 3041 (3491 . 3492) (3492 . 3499) ("ge" . 3492) 3491 (3822 . 3823) (3823 . 3830) ("ge" . 3823) 3822 (t 26415 56147 433018 200000)) nil (26415 56209 895889 138000) 0 nil])
([nil nil ((359 . 364)) nil (26415 56209 895886 954000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -363) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) 364) nil (26415 56209 895886 262000) 0 nil])
([nil nil ((363 . 365)) nil (26415 56209 895877 15000) 0 nil])
([nil nil ((370 . 379)) nil (26415 56209 895872 937000) 0 nil])
([nil nil ((181 . 182) (t 26415 56209 901434 962000)) nil (26415 56231 475730 284000) 0 nil])
([nil nil ((182 . 190)) nil (26415 56231 475729 934000) 0 nil])
([nil nil ((187 . 193) (#("typ" 0 3 (fontified nil)) . -187) (187 . 190) (#("typing" 0 6 (fontified nil)) . -187) (187 . 193) (#("typ" 0 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -187) (undo-tree-id3106 . -3) (undo-tree-id3107 . -3) (undo-tree-id3108 . -3) (undo-tree-id3109 . -3) 190) nil (26415 56231 475729 162000) 0 nil])
([nil nil ((193 . 204)) nil (26415 56231 475727 158000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -203) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) 204) nil (26415 56231 475726 247000) 0 nil])
([nil nil ((203 . 212)) nil (26415 56231 475724 243000) 0 nil])
([nil nil ((208 . 212) (#("Lis" 0 3 (fontified nil)) . -208) (208 . 211) (#("List" 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . -208) (undo-tree-id3009 . -4) (undo-tree-id3010 . -4) (undo-tree-id3011 . -3) (undo-tree-id3012 . -3) (undo-tree-id3013 . -3) (undo-tree-id3014 . -3) (undo-tree-id3015 . -3) (undo-tree-id3016 . -3) (undo-tree-id3017 . -3) (undo-tree-id3018 . -3) (undo-tree-id3019 . -3) (undo-tree-id3020 . -3) (undo-tree-id3021 . -3) (undo-tree-id3022 . -3) (undo-tree-id3023 . -3) (undo-tree-id3024 . -3) (undo-tree-id3025 . -3) (undo-tree-id3026 . -3) (undo-tree-id3027 . -3) (undo-tree-id3028 . -3) (undo-tree-id3029 . -3) (undo-tree-id3030 . -3) (undo-tree-id3031 . -3) (undo-tree-id3032 . -3) (undo-tree-id3033 . -3) (undo-tree-id3034 . -4) (undo-tree-id3035 . -4) (undo-tree-id3036 . -4) (undo-tree-id3037 . -4) (undo-tree-id3038 . -4) (undo-tree-id3039 . -4) (undo-tree-id3040 . -4) (undo-tree-id3041 . -4) (undo-tree-id3042 . -4) (undo-tree-id3043 . -4) (undo-tree-id3044 . -4) (undo-tree-id3045 . -4) (undo-tree-id3046 . -4) (undo-tree-id3047 . -4) (undo-tree-id3048 . -4) (undo-tree-id3049 . -4) (undo-tree-id3050 . -4) (undo-tree-id3051 . -4) (undo-tree-id3052 . -4) (undo-tree-id3053 . -4) (undo-tree-id3054 . -4) (undo-tree-id3055 . -4) (undo-tree-id3056 . -4) (undo-tree-id3057 . -4) (undo-tree-id3058 . -4) (undo-tree-id3059 . -4) (undo-tree-id3060 . -4) (undo-tree-id3061 . -4) (undo-tree-id3062 . -4) (undo-tree-id3063 . -4) (undo-tree-id3064 . -4) (undo-tree-id3065 . -4) (undo-tree-id3066 . -4) (undo-tree-id3067 . -4) (undo-tree-id3068 . -4) (undo-tree-id3069 . -4) (undo-tree-id3070 . -4) (undo-tree-id3071 . -4) (undo-tree-id3072 . -4) (undo-tree-id3073 . -4) (undo-tree-id3074 . -4) (undo-tree-id3075 . -4) (undo-tree-id3076 . -4) (undo-tree-id3077 . -4) (undo-tree-id3078 . -4) (undo-tree-id3079 . -4) (undo-tree-id3080 . -4) (undo-tree-id3081 . -4) (undo-tree-id3082 . -4) (undo-tree-id3083 . -4) (undo-tree-id3084 . -4) (undo-tree-id3085 . -4) (undo-tree-id3086 . -4) (undo-tree-id3087 . -4) (undo-tree-id3088 . -4) (undo-tree-id3089 . -4) (undo-tree-id3090 . -4) (undo-tree-id3091 . -4) (undo-tree-id3092 . -4) (undo-tree-id3093 . -4) (undo-tree-id3094 . -4) (undo-tree-id3095 . -4) (undo-tree-id3096 . -4) (undo-tree-id3097 . -4) (undo-tree-id3098 . -4) (undo-tree-id3099 . -4) (undo-tree-id3100 . -4) (undo-tree-id3101 . -4) 212) nil (26415 56231 475720 195000) 0 nil])
([nil nil ((#("l" 0 1 (face py-builtins-face fontified t)) . -385) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) 386 (t 26415 56231 481008 934000)) nil (26415 56236 473617 395000) 0 nil])
([nil nil ((385 . 386)) nil (26415 56236 473602 727000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -520) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (#("g" 0 1 (fontified t)) . -521) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (#("e" 0 1 (fontified t)) . -522) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (#("n" 0 1 (fontified t)) . -523) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (#("t" 0 1 (fontified t)) . -524) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) 525 (t 26415 56236 479140 212000)) nil (26415 56280 468465 8000) 0 nil])
([nil nil ((520 . 531)) nil (26415 56280 468459 377000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -532) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (#("g" 0 1 (fontified t)) . -533) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (#("e" 0 1 (fontified t)) . -534) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (#("n" 0 1 (fontified t)) . -535) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (#("t" 0 1 (fontified t)) . -536) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) 537) nil (26415 56280 468457 784000) 0 nil])
([nil nil ((532 . 552)) nil (26415 56280 468440 932000) 0 nil])
([nil nil ((661 . 662) (t 26415 56280 474269 998000)) nil (26415 56288 523983 517000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -661) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) 662) nil (26415 56288 523982 846000) 0 nil])
([nil nil ((#("agent" 0 5 (fontified t)) . -655) (undo-tree-id3150 . -5) (undo-tree-id3151 . -5) 660) nil (26415 56288 523980 762000) 0 nil])
([nil nil ((655 . 657)) nil (26415 56288 523979 500000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -655) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (#("a" 0 1 (fontified t)) . -656) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) 657) nil (26415 56288 523978 748000) 0 nil])
([nil nil ((655 . 660)) nil (26415 56288 523973 649000) 0 nil])
([nil nil ((655 . 666) (#("part" 0 4 (fontified nil)) . -655) (655 . 659) (#("participant" 0 11 (fontified nil)) . -655) (655 . 666) (#("parti" 0 5 (fontified t)) . -655) (undo-tree-id3138 . -5) (undo-tree-id3139 . -5) (undo-tree-id3140 . -5) (undo-tree-id3141 . -5) 660) nil (26415 56288 523969 180000) 0 nil])
([nil nil ((#("agent" 0 5 (fontified t)) . -775) (undo-tree-id3302 . -5) 780 (t 26415 56288 529472 21000)) nil (26415 56311 506813 295000) 0 nil])
([nil nil ((775 . 786)) nil (26415 56311 506812 464000) 0 nil])
([nil nil ((#("agent" 0 5 (fontified t)) . -838) (undo-tree-id3299 . -5) (undo-tree-id3300 . -5) (undo-tree-id3301 . -5) 843) nil (26415 56311 506811 782000) 0 nil])
([nil nil ((838 . 841)) nil (26415 56311 506810 330000) 0 nil])
([nil nil ((838 . 849) (#("par" 0 3 (fontified nil)) . -838) (838 . 841) (#("participant" 0 11 (fontified nil)) . -838) (838 . 849) (#("par" 0 3 (fontified t)) . -838) (undo-tree-id3295 . -3) (undo-tree-id3296 . -3) (undo-tree-id3297 . -3) (undo-tree-id3298 . -3) 841) nil (26415 56311 506809 7000) 0 nil])
([nil nil ((#("agent" 0 5 (fontified t)) . -880) (undo-tree-id3288 . -5) (undo-tree-id3289 . -5) (undo-tree-id3290 . -5) (undo-tree-id3291 . -5) (undo-tree-id3292 . -5) (undo-tree-id3293 . -5) (undo-tree-id3294 . -5) 885) nil (26415 56311 506806 893000) 0 nil])
([nil nil ((880 . 882)) nil (26415 56311 506803 467000) 0 nil])
([nil nil ((880 . 891) (#("pa" 0 2 (fontified nil)) . -880) (880 . 882) (#("participant" 0 11 (fontified nil)) . -880) (880 . 891) (#("pa" 0 2 (fontified t)) . -880) (undo-tree-id3156 . -2) (undo-tree-id3157 . -2) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -2) (undo-tree-id3211 . -2) (undo-tree-id3212 . -2) (undo-tree-id3213 . -2) (undo-tree-id3214 . -2) (undo-tree-id3215 . -2) (undo-tree-id3216 . -2) (undo-tree-id3217 . -2) (undo-tree-id3218 . -2) (undo-tree-id3219 . -2) (undo-tree-id3220 . -2) (undo-tree-id3221 . -2) (undo-tree-id3222 . -2) (undo-tree-id3223 . -2) (undo-tree-id3224 . -2) (undo-tree-id3225 . -2) (undo-tree-id3226 . -2) (undo-tree-id3227 . -2) (undo-tree-id3228 . -2) (undo-tree-id3229 . -2) (undo-tree-id3230 . -2) (undo-tree-id3231 . -2) (undo-tree-id3232 . -2) (undo-tree-id3233 . -2) (undo-tree-id3234 . -2) (undo-tree-id3235 . -2) (undo-tree-id3236 . -2) (undo-tree-id3237 . -2) (undo-tree-id3238 . -2) (undo-tree-id3239 . -2) (undo-tree-id3240 . -2) (undo-tree-id3241 . -2) (undo-tree-id3242 . -2) (undo-tree-id3243 . -2) (undo-tree-id3244 . -2) (undo-tree-id3245 . -2) (undo-tree-id3246 . -2) (undo-tree-id3247 . -2) (undo-tree-id3248 . -2) (undo-tree-id3249 . -2) (undo-tree-id3250 . -2) (undo-tree-id3251 . -2) (undo-tree-id3252 . -2) (undo-tree-id3253 . -2) (undo-tree-id3254 . -2) (undo-tree-id3255 . -2) (undo-tree-id3256 . -2) (undo-tree-id3257 . -2) (undo-tree-id3258 . -2) (undo-tree-id3259 . -2) (undo-tree-id3260 . -2) (undo-tree-id3261 . -2) (undo-tree-id3262 . -2) (undo-tree-id3263 . -2) (undo-tree-id3264 . -2) (undo-tree-id3265 . -2) (undo-tree-id3266 . -2) (undo-tree-id3267 . -2) (undo-tree-id3268 . -2) (undo-tree-id3269 . -2) (undo-tree-id3270 . -2) (undo-tree-id3271 . -2) (undo-tree-id3272 . -2) (undo-tree-id3273 . -2) (undo-tree-id3274 . -2) (undo-tree-id3275 . -2) (undo-tree-id3276 . -2) (undo-tree-id3277 . -2) (undo-tree-id3278 . -2) (undo-tree-id3279 . -2) (undo-tree-id3280 . -2) (undo-tree-id3281 . -2) (undo-tree-id3282 . -2) (undo-tree-id3283 . -2) (undo-tree-id3284 . -2) (undo-tree-id3285 . -2) (undo-tree-id3286 . -2) (undo-tree-id3287 . -2) 882) nil (26415 56311 506797 455000) 0 nil])
([nil nil ((#("particip" 0 8 (fontified t)) . 775) (undo-tree-id3367 . -7) (undo-tree-id3368 . -7) (784 . 786) 782 (#("particip" 0 8 (fontified t match-data (0 3 0 1 1 2 2 3))) . 838) (847 . 849) 838 (#("particip" 0 8 (fontified t match-data (0 2 0 1 1 2))) . 880) (889 . 891) 880 (t 26415 56311 512040 612000)) nil (26415 56347 478262 495000) 0 nil])
([nil nil ((#("particip" 0 8 (fontified t)) . 520) (undo-tree-id3365 . -6) (undo-tree-id3366 . -6) (529 . 531) 526 (#("particip" 0 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 655) (664 . 666) 655) nil (26415 56347 478261 113000) 0 nil])
([nil nil ((#("Player]" 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-2-face) fontified t)) . -539) (undo-tree-id3362 . -6) (undo-tree-id3363 . -6) (undo-tree-id3364 . -7) 546) nil (26415 56347 478259 860000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 538) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) 539) nil (26415 56347 478258 277000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -537) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) 538) nil (26415 56347 478256 594000) 0 nil])
([nil nil ((#("Union[" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-2-face) fontified t)) . -526) (undo-tree-id3303 . -6) (undo-tree-id3304 . -6) (undo-tree-id3305 . -6) (undo-tree-id3306 . -6) (undo-tree-id3307 . -6) (undo-tree-id3308 . -6) (undo-tree-id3309 . -6) (undo-tree-id3310 . -6) (undo-tree-id3311 . -6) (undo-tree-id3312 . -6) (undo-tree-id3313 . -6) (undo-tree-id3314 . -6) (undo-tree-id3315 . -6) (undo-tree-id3316 . -6) (undo-tree-id3317 . -6) (undo-tree-id3318 . -6) (undo-tree-id3319 . -6) (undo-tree-id3320 . -6) (undo-tree-id3321 . -6) (undo-tree-id3322 . -6) (undo-tree-id3323 . -6) (undo-tree-id3324 . -6) (undo-tree-id3325 . -6) (undo-tree-id3326 . -6) (undo-tree-id3327 . -6) (undo-tree-id3328 . -6) (undo-tree-id3329 . -6) (undo-tree-id3330 . -6) (undo-tree-id3331 . -6) (undo-tree-id3332 . -6) (undo-tree-id3333 . -6) (undo-tree-id3334 . -6) (undo-tree-id3335 . -6) (undo-tree-id3336 . -6) (undo-tree-id3337 . -6) (undo-tree-id3338 . -6) (undo-tree-id3339 . -6) (undo-tree-id3340 . -6) (undo-tree-id3341 . -6) (undo-tree-id3342 . -6) (undo-tree-id3343 . -6) (undo-tree-id3344 . -6) (undo-tree-id3345 . -6) (undo-tree-id3346 . -6) (undo-tree-id3347 . -6) (undo-tree-id3348 . -6) (undo-tree-id3349 . -6) (undo-tree-id3350 . -6) (undo-tree-id3351 . -6) (undo-tree-id3352 . -6) (undo-tree-id3353 . -6) 532) nil (26415 56347 478250 492000) 0 nil])
([nil nil ((#("Player]" 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-2-face) fontified t)) . -403) (undo-tree-id3425 . -7) (undo-tree-id3426 . -7) 410 (t 26415 56347 483908 272000)) nil (26415 56359 19021 306000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 402) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) 403) nil (26415 56359 19019 372000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -401) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) 402) nil (26415 56359 19018 170000) 0 nil])
([nil nil ((#("Union[" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-2-face) fontified t)) . -390) (undo-tree-id3420 . -6) 396) nil (26415 56359 19016 547000) 0 nil])
([nil nil ((#("Union, " 0 7 (fontified t match-data (0 3 0 1 1 2 2 3))) . -201) (undo-tree-id3369 . -7) (undo-tree-id3370 . -7) (undo-tree-id3371 . -7) (undo-tree-id3372 . -7) (undo-tree-id3373 . -7) (undo-tree-id3374 . -7) (undo-tree-id3375 . -7) (undo-tree-id3376 . -7) (undo-tree-id3377 . -7) (undo-tree-id3378 . -7) (undo-tree-id3379 . -7) (undo-tree-id3380 . -7) (undo-tree-id3381 . -7) (undo-tree-id3382 . -7) (undo-tree-id3383 . -7) (undo-tree-id3384 . -7) (undo-tree-id3385 . -7) (undo-tree-id3386 . -7) (undo-tree-id3387 . -7) (undo-tree-id3388 . -7) (undo-tree-id3389 . -7) (undo-tree-id3390 . -7) (undo-tree-id3391 . -7) (undo-tree-id3392 . -7) (undo-tree-id3393 . -7) (undo-tree-id3394 . -7) (undo-tree-id3395 . -7) (undo-tree-id3396 . -7) (undo-tree-id3397 . -7) (undo-tree-id3398 . -7) (undo-tree-id3399 . -7) (undo-tree-id3400 . -7) (undo-tree-id3401 . -7) (undo-tree-id3402 . -7) (undo-tree-id3403 . -7) (undo-tree-id3404 . -7) (undo-tree-id3405 . -7) (undo-tree-id3406 . -7) (undo-tree-id3407 . -7) (undo-tree-id3408 . -7) (undo-tree-id3409 . -7) (undo-tree-id3410 . -7) (undo-tree-id3411 . -7) (undo-tree-id3412 . -7) (undo-tree-id3413 . -7) (undo-tree-id3414 . -7) (undo-tree-id3415 . -7) (undo-tree-id3416 . -7) (undo-tree-id3417 . -7) (undo-tree-id3418 . -7) (undo-tree-id3419 . -7) 208) nil (26415 56359 19011 938000) 0 nil])
([nil nil ((#("particip" 0 1 (face py-variable-name-face fontified t) 1 2 (face py-variable-name-face fontified t) 2 8 (face py-variable-name-face fontified t)) . 364) (undo-tree-id3427 . -8) (undo-tree-id3428 . -8) (undo-tree-id3429 . -8) (373 . 375) 372 (#("particip" 0 1 (fontified t) 1 2 (fontified t) 2 8 (fontified t)) . 592) (601 . 603) 592 (#("particip" 0 1 (fontified t) 1 2 (fontified t) 2 8 (fontified t)) . 740) (749 . 751) 740 (#("particip" 0 1 (fontified t) 1 2 (fontified t match-data (0 3 0 1 1 2 2 3)) 2 8 (fontified t)) . 1169) (1178 . 1180) 1169 (#("particip" 0 1 (fontified t) 1 2 (fontified t match-data (0 3 0 1 1 2 2 3)) 2 8 (fontified t)) . 1240) (1249 . 1251) 1240 (#("particip" 0 1 (fontified t) 1 2 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 2 8 (fontified t)) . 1367) (1376 . 1378) 1367 (#("particip" 1 2 (match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1754) (1763 . 1765) 1754 (#("particip" 1 2 (match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 2292) (2301 . 2303) 2292 (#("particip" 1 2 (match-data (0 4 0 1 1 2 2 3 3 4))) . 2425) (2434 . 2436) 2425 ("particip" . 3119) (3128 . 3130) 3119 ("particip" . 3575) (3584 . 3586) 3575 ("particip" . 3912) (3921 . 3923) 3912 (t 26415 56359 25181 165000)) nil (26415 56368 903606 470000) 0 nil])
([nil nil ((3342 . 3347) (t 26415 56368 909412 826000)) nil (26415 60610 223022 185000) 0 nil])
([nil nil ((3344 . 3352) (t 26415 60610 229055 90000)) nil (26415 60616 797028 461000) 0 nil])
([nil nil ((3355 . 3357) (t 26415 60616 803075 733000)) nil (26427 26250 439957 598000) 0 nil])
([nil nil ((#("from Player import Player" 0 4 (face py-import-from-face fontified t) 4 12 (fontified t) 12 18 (face py-import-from-face fontified t) 18 25 (fontified t)) . 52) (undo-tree-id1 . -25) (undo-tree-id2 . -25) (undo-tree-id3 . -25) (undo-tree-id4 . -25) (undo-tree-id5 . -25) (undo-tree-id6 . -25) (undo-tree-id7 . -25) (undo-tree-id8 . -25) (undo-tree-id9 . -25) (undo-tree-id10 . -25) (undo-tree-id11 . -25) (undo-tree-id12 . -25) (undo-tree-id13 . -25) (undo-tree-id14 . -25) (undo-tree-id15 . -25) (undo-tree-id16 . -25) (undo-tree-id17 . -25) (undo-tree-id18 . -25) (undo-tree-id19 . -25) (undo-tree-id20 . -25) (undo-tree-id21 . -25) (undo-tree-id22 . -25) (undo-tree-id23 . -25) (undo-tree-id24 . -25) (undo-tree-id25 . -25) (undo-tree-id26 . -25) (undo-tree-id27 . -25) (t 26427 26250 445215 930000)) nil (26427 26480 852786 780000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 52) (undo-tree-id0 . -1)) nil (26427 26480 852770 983000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -3329) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("5" 0 1 (face py-number-face fontified t)) . -3330) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 3331 (t 26427 26480 858537 0)) nil (26427 26748 441815 738000) 0 nil])
([nil nil ((3329 . 3330)) nil (26427 26748 441647 596000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -3328) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#("5" 0 1 (face py-number-face fontified t)) . -3329) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) 3330 (t 26427 26748 447541 488000)) nil (26427 26757 603195 901000) 0 nil])
([nil nil ((3328 . 3329)) nil (26427 26757 602904 382000) 0 nil])
([nil nil ((3355 . 3360) (t 26427 26757 609543 146000)) nil (26427 29150 617050 546000) 0 nil])
([nil nil ((3360 . 3381)) nil (26427 29150 617050 225000) 0 nil])
([nil nil ((3381 . 3386)) nil (26427 29150 617049 965000) 0 nil])
([nil nil ((3386 . 3407)) nil (26427 29150 617049 714000) 0 nil])
([nil nil ((3407 . 3419)) nil (26427 29150 617049 444000) 0 nil])
([nil nil ((3419 . 3422)) nil (26427 29150 617049 123000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3419) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#("c" 0 1 (fontified t)) . -3420) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#("o" 0 1 (fontified t)) . -3421) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) 3422) nil (26427 29150 617048 452000) 0 nil])
([nil nil ((3419 . 3421)) nil (26427 29150 617042 80000) 0 nil])
([nil nil ((3410 . 3426) (#("gen" 0 3 (fontified nil)) . -3410) (3410 . 3413) (#("generation_count" 0 16 (fontified nil)) . -3410) (3410 . 3426) (#("generation_" 0 11 (fontified t)) . -3410) (undo-tree-id366 . -11) (undo-tree-id367 . -11) (undo-tree-id368 . -11) (undo-tree-id369 . -11) 3421) nil (26427 29150 617041 78000) 0 nil])
([nil nil ((3426 . 3427)) nil (26427 29150 617038 744000) 0 nil])
([nil nil ((3427 . 3428)) nil (26427 29150 617038 473000) 0 nil])
([nil nil ((3429 . 3437) (#("    " 0 4 (fontified t)) . 3429) 3463) nil (26427 29150 617038 22000) 0 nil])
([nil nil ((3468 . 3480) (#("        " 0 8 (fontified t)) . 3468) 3495) nil (26427 29150 617037 612000) 0 nil])
([nil nil ((3501 . 3513) (#("        " 0 8 (fontified t)) . 3501) 3532) nil (26427 29150 617036 670000) 0 nil])
([nil nil ((3547 . 3559) (#("        " 0 8 (fontified t)) . 3547) 3582) nil (26427 29150 617035 387000) 0 nil])
([nil nil ((3547 . 3555) (#("            " 0 12 (fontified t)) . 3547) 3586) nil (26427 29150 617034 446000) 0 nil])
([nil nil ((3547 . 3551) (#("        " 0 8 (fontified t)) . 3547) (undo-tree-id365 . -8) 3555) nil (26427 29150 617033 624000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3547) (undo-tree-id364 . -4) 3551) nil (26427 29150 617032 171000) 0 nil])
([nil nil ((3547 . 3559)) nil (26427 29150 617031 39000) 0 nil])
([nil nil ((3600 . 3616) (#("            " 0 12 (fontified t)) . 3600) (undo-tree-id363 . -12) 3612) nil (26427 29150 617030 328000) 0 nil])
([nil nil ((3664 . 3676) (#("        " 0 8 (fontified t)) . 3664) 3680) nil (26427 29150 617019 458000) 0 nil])
([nil nil ((3731 . 3743) (#("        " 0 8 (fontified t)) . 3731) 3751) nil (26427 29150 617019 17000) 0 nil])
([nil nil ((3764 . 3776) (#("        " 0 8 (fontified t)) . 3764) 3788) nil (26427 29150 617017 985000) 0 nil])
([nil nil ((3806 . 3818) (#("        " 0 8 (fontified t)) . 3806) 3834) nil (26427 29150 617017 444000) 0 nil])
([nil nil ((3902 . 3914) (#("        " 0 8 (fontified t)) . 3902) 3934) nil (26427 29150 617016 903000) 0 nil])
([nil nil ((3955 . 3971) (#("            " 0 12 (fontified t)) . 3955) 3991) nil (26427 29150 617016 472000) 0 nil])
([nil nil ((4058 . 4074) (#("            " 0 12 (fontified t)) . 4058) 4097) nil (26427 29150 617015 951000) 0 nil])
([nil nil ((4102 . 4114) (#("        " 0 8 (fontified t)) . 4102) 4123) nil (26427 29150 617014 909000) 0 nil])
([nil nil ((3428 . 3437)) nil (26427 29150 617010 210000) 0 nil])
([nil nil ((3437 . 3448) (t 26427 29150 623340 909000)) nil (26427 29175 6637 664000) 0 nil])
([nil nil ((3444 . 3458) (#("up" 0 2 (fontified nil)) . -3444) (3444 . 3446) (#("update_actions" 0 14 (fontified nil)) . -3444) (3444 . 3458) (#("upda" 0 4 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -3444) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) 3448) nil (26427 29175 6636 271000) 0 nil])
([nil nil ((3458 . 3463)) nil (26427 29175 6622 85000) 0 nil])
([nil nil ((4163 . 4176) (t 26427 29175 81337 664000)) nil (26427 29212 998824 775000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 4172) (undo-tree-id387 . -4) 4176) nil (26427 29212 998824 23000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 4168) (undo-tree-id386 . -4) 4172) nil (26427 29212 998821 899000) 0 nil])
([nil nil ((4168 . 4181)) nil (26427 29212 998812 512000) 0 nil])
([nil nil ((4181 . 4188)) nil (26427 29212 998807 913000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -3353) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (#("0" 0 1 (face py-number-face fontified t)) . -3354) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) 3355 (t 26427 29213 4318 228000)) nil (26427 29297 93647 719000) 0 nil])
([nil current ((4166 . 4167) (t 26427 29297 177217 999000)) nil (26427 31749 999726 894000) 0 nil])
nil
